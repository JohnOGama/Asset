{"version":3,"file":"static/js/4981.ed6e00c3.chunk.js","mappings":"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","sources":["views/pages/updateprofile/UpdateProfile.js"],"sourcesContent":["// eslint-disable-next-line\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CFormInput,\n  CButton,\n  CForm,\n  CFormSelect,\n  CInputGroup,\n  CInputGroupText,\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem\n} from '@coreui/react'\n\nimport imgDefault from '../../../assets/images/defaultProfile.png'\n\nimport { decrypt } from 'n-krypta';\nimport appSettings from 'src/AppSettings' // read the app config\nimport WriteLog from 'src/components/logs/LogListener';\nimport {useNavigate} from 'react-router-dom';\n\nconst UpdateProfile = () => {\n\n  const navigate = useNavigate();\n  \n  var userID = \"\"\n  const [category,SetCategory] = useState([]);\n  const [position,setPosition] = useState([]);\n\n  const [message,setMessage] = useState(\"\");\n  const [colorMessage,setColorMessage] = useState(\"\");\n\n  const [file,setFile] = useState(\"\")\n\n  const [values,setValues] = useState({\n    categoryID: '',\n    categoryname: '',\n    positionID: '',\n    firstname: '',\n    lastname: '',\n    displayname: '',\n    email: '',\n    imgFile: ''\n  })\n\n  function getUserInfo() {\n\n    if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n        userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n        \n    }\n    else\n    { \n        navigate('/login')\n    }\n    }\n\n  useEffect(() => {\n    \n      getUserInfo()\n\n    }, [])\n\n\n  useEffect(() => {\n    if(userID == \"\") \n    {\n      getUserInfo()\n    }\n    const url = 'http://localhost:3001/getCategory'\n    \n    axios.post(url)\n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        SetCategory(res.data.result)\n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Message\",\"UpdateProfile\",\"useEffect /getCategory\",dataResponse,userID)\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"UpdateProfile\",\"useEffect /getCategory\",err.message,userID)\n    })\n},[])\n\nuseEffect(() => {\n  if(userID == \"\") \n  {\n    getUserInfo()\n  }\n  const url = 'http://localhost:3001/position/viewallposition'\n  axios.post(url)\n  .then( res => {\n    const dataResponse = res.data.message;\n    if(dataResponse === \"Record Found\") {\n      setPosition(res.data.result)\n    } else if (dataResponse === \"No Record Found\") {\n      WriteLog(\"Message\",\"UpdateProfile\",\"useEffect /position/viewallposition\",dataResponse,userID)\n    }\n  }).catch(err => {\n    WriteLog(\"Error\",\"UpdateProfile\",\"useEffect /position/viewallposition\",err.message,userID)\n  }) \n},[])\n\n\n/// load profile based on userID\nuseEffect(() => {\n\n  LoadProfile()\n},[])\n\nfunction LoadProfile() {\n  try {\n\n    if(userID == \"\") \n    {\n      getUserInfo()\n    }\n\n    const userid =  userID\n\n    const url = 'http://localhost:3001/users/getuserprofile'\n    axios.post(url,{userid})\n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Profile Found\") {\n       // console.log(\"CATEG ==> \" + res.data.result[0].categoryName)\n       // console.log(\"FNAME ==> \" + res.data.result[0].firstname) \n        setValues(\n          {...values,categoryID: res.data.result[0].groupTypeID,\n            categoryname: res.data.result[0].categoryName,\n            positionID: res.data.result[0].positionID,\n            firstname: res.data.result[0].firstname,\n            lastname: res.data.result[0].lastname,\n            displayname:res.data.result[0].displayName,\n            email:res.data.result[0].email,\n            imgFile: res.data.result[0].imgFilename\n          });\n         \n  \n      } else if (dataResponse == \"No Profile Found\") {\n        WriteLog(\"Message\",\"UpdateProfile\",\"LoadProfile /users/getuserprofile\",res.data.message2,userID)\n      }\n  \n    }).catch(err => {\n      WriteLog(\"Error\",\"UpdateProfile\",\"LoadProfile /users/getuserprofile\",\"Error in then/catch \\n\" +  err.message,userID)\n    })\n\n  }\n  catch(err) {\n    WriteLog(\"Error\",\"UpdateProfile\",\"LoadProfile /users/getuserprofile\",\"Error in try/catch \\n\" + err.message,userID)\n  }\n}\n\nconst handleInput = (e) => {\n  setValues(values => ({...values,[e.target.name]: [e.target.value]}))\n  \n  \n  //console.log(values)\n}\n\nuseEffect(() => {\n  //console.log(values);\n},[values])\n\n\n  function handleSubmit(event) {\n    try {\n     \n      if(userID == \"\") \n      {\n        getUserInfo()\n      }\n      \n      event.preventDefault();\n     // setErrors(ValidationProfile(values))\n      if((!values.categoryID == \"\") && \n        (!values.positionID == \"\") && \n        (!values.lastname == \"\") && \n        (!values.firstname == \"\") && \n        (!values.email== \"\") && \n        (!values.displayname == \"\")) {\n        \n        const url = 'http://localhost:3001/auth/updateProfile'\n        const categoryID = values.categoryID\n        const positionID = values.positionID\n        const firstname = values.firstname\n        const lastname = values.lastname\n        const displayname = values.displayname\n        const email = values.email\n        const userDisplayID = userID\n        \n        axios.post(url,{firstname,lastname,email,positionID,categoryID,displayname,userDisplayID})\n        .then(res => {\n          const dataResponse = res.data.message\n\n          if(dataResponse == \"Upload Success\"){\n            WriteLog(\"Message\",\"UpdateProfile\",\"handleSubmit /auth/updateProfile\", \n            \" Update Profile \"\n            + \"\\n Name: \" + lastname + \", \" + firstname \n            + \"\\n....  \" \n            + \"\\n User : \" + userID ,userID)\n            setMessage(\"Update successfull\")\n            setColorMessage(\"green\")\n            //navigate('/login');\n          } else if(dataResponse == \"Upload Error\") {\n            setMessage(\"Update Error\")\n            setColorMessage(\"red\")\n            WriteLog(\"Error\",\"UpdateProfile\",\"handleSubmit /auth/updateProfile\",res.data.message2,userID)\n          } \n        })\n      } else (\n        setMessage(\"Incomplete Information\")\n      )\n    } catch(err) {\n      WriteLog(\"Error\",\"UpdateProfile\",\"handleSubmit\",err.message,userID)\n    }\n  }\n\n\n  function handleUploadImage(e) {\n   \n    e.preventDefault()\n    try {\n      if(userID == \"\") \n      {\n        getUserInfo()\n      }\n      if(!file == \"\") {\n\n        const config = {\n          headers:{\n              \"Content-Type\":\"multipart/form-data\"\n          }\n      }\n    \n        \n      // console.log(userID)\n        const url = 'http://localhost:3001/auth/updateImage'\n        axios.post(url,{file,userID},config)\n        .then(res => { \n          const dataResponse = res.data.message \n          if(dataResponse == \"Upload Success\"){ \n           \n            WriteLog(\"Message\",\"UpdateProfile\",\"handleUploadImage /assets/upDateImage\",\n              \"Upload selected Image \\n\"\n              + \"File : \" + file.name\n              + \"userID : \" + userID\n              ,userID)\n    \n              //LoadProfile()\n              setMessage('Upload image success')\n              setColorMessage('green')\n          } else if(dataResponse == \"Update Error\") {\n            WriteLog(\"Error\",\"UpdateProfile\",\"handleUploadImage /assets/upDateImage\",\n              \"Upload selected Image \\n\"\n              + \"File : \" + file.name\n              + \"userID : \" + userID\n              ,userID)\n          } \n        })\n        .catch(err => {\n          WriteLog(\"Error\",\"UpdateProfile\",\"handleUploadImage /assets/upDateImage\",\n              \"Error in then/catch \\n\"\n              + err.message\n              ,userID)\n         \n        })\n\n      }\n      else {\n        setMessage(\"Select image to upload\")\n        setColorMessage('orange')\n      }\n\n\n    \n  }\n  catch(err) {\n    WriteLog(\"Error\",\"UpdateProfile\",\"handleUploadImage /assets/upDateImage\",\n    \"Error in try/catch \\n\"\n    + err.message\n    ,userID)\n  }\n  \n}\n\n\n  return (\n\n    <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n                <h6>\n                <span className=\"message\" style={{ color: '#5da4f5'}}> <> Update Profile</></span> \n                <br></br>\n                <strong><span className=\"message\" style={{ color: colorMessage}}><p>{message}</p></span> </strong>\n                </h6>\n            </CCardHeader>\n            <CForm onSubmit={handleSubmit}>\n              <CRow>\n                <CCol>\n                <CCardBody>\n                  <CFormSelect size=\"sm\" className=\"mb-3\"  aria-label=\"Small select example\"\n                  name='categoryID' onChange={handleInput} value={values.categoryID} >\n                  {\n                      category.map((val,result) => \n                        \n                          <option name={result.toString()} key={val.categoryID} value={val.categoryID}  > {val.categoryName} </option>\n                      )\n                  }\n                  </CFormSelect>\n                  <CFormSelect size=\"sm\" className=\"mb-3\"  aria-label=\"Small select example\"\n                    name='positionID' onChange={handleInput} value= {values.positionID} >\n                    {\n                        position.map((val,result) => \n                            <option name={result.toString()} key={val.id}  value={val.id}  > {val.positionName} </option>\n                          \n                        )\n                    }\n                  </CFormSelect>\n                  <CInputGroup size=\"sm\" className=\"mb-3\">\n                    <CInputGroupText id=\"inputGroup-sizing-sm\">Firstname</CInputGroupText>\n                    <CFormInput aria-label=\"Sizing example input\"  aria-describedby=\"inputGroup-sizing-sm\"\n                    name='firstname' onChange={handleInput} value={values.firstname} />\n                  </CInputGroup>\n                  <CInputGroup size=\"sm\" className=\"mb-3\">\n                    <CInputGroupText id=\"inputGroup-sizing-sm\">Lastname</CInputGroupText>\n                    <CFormInput aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\"\n                    name='lastname' onChange={handleInput} value={values.lastname}/>\n                  </CInputGroup>\n                  <CInputGroup size=\"sm\" className=\"mb-3\">\n                    <CInputGroupText id=\"inputGroup-sizing-sm\">Display Name</CInputGroupText>\n                    <CFormInput aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\" \n                    name='displayname' onChange={handleInput} value={values.displayname} />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>@</CInputGroupText>\n                      <CFormInput placeholder=\"Email\" name=\"email\" onChange={handleInput} value={values.email}\n                        autoComplete=\"email\" />\n                  </CInputGroup>\n\n                  <CInputGroup xs={5} size=\"xs\" className=\"mb-3\">\n\n                  <CAccordion flush={false} size=\"xs\" className=\"mb-3\" fullWidth>\n                    <CAccordionItem itemKey={1} size=\"xs\" className=\"mb-3\">\n                    <CAccordionHeader>\n                      Upload Image here\n                    </CAccordionHeader>\n                      <CAccordionBody>\n                        <input name=\"file\" id=\"file\" type=\"file\" \n                        onChange={ e => setFile(e.target.files[0])}  />\n                        <div className=\"d-grid\" style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            }} >\n                          <CButton color=\"success\" style={{ width: '100%' }} onClick={handleUploadImage}>Update Logo</CButton>\n                        </div>\n                      </CAccordionBody>\n                    </CAccordionItem>\n                  </CAccordion>\n\n                  </CInputGroup>\n\n              </CCardBody> \n                </CCol>\n                <CCol>\n                 \n                  <CCardBody xs={6}  >        \n\n                    <CInputGroup size=\"sm\" className=\"mb-3\" >\n                    <div className=\"formInput\" >\n                    <img src={\n                    values.imgFile\n                    ?  require(`../../../../backend/uploads/${values.imgFile}`)\n                    : imgDefault \n                    }\n                    alt=\"\" style={{  width: '80%', textAlign: \"center\", margin: \"auto\"}}    />\n                    </div>  \n                    </CInputGroup>\n                  </CCardBody>\n              \n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol>\n\n                  <div className=\"d-grid\" style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    }} >\n                      <CButton color=\"success\" style={{   width: '200%' }}  type='submit'>Save</CButton>\n                  </div>\n                </CCol>\n              \n              </CRow>\n              <br></br>\n\n            </CForm>\n          </CCard>\n        </CCol>\n\n    </CRow>\n  )\n}\n\nexport default UpdateProfile\n"],"names":["navigate","useNavigate","userID","_useState","useState","_useState2","_slicedToArray","category","SetCategory","_useState3","_useState4","position","setPosition","_useState5","_useState6","message","setMessage","_useState7","_useState8","colorMessage","setColorMessage","_useState9","_useState10","file","setFile","_useState11","categoryID","categoryname","positionID","firstname","lastname","displayname","email","imgFile","_useState12","values","setValues","getUserInfo","window","localStorage","getItem","decrypt","appSettings","secretkeylocal","useEffect","axios","post","then","res","dataResponse","data","result","WriteLog","catch","err","userid","url","_objectSpread","groupTypeID","categoryName","displayName","imgFilename","message2","LoadProfile","handleInput","e","_defineProperty","target","name","value","_jsx","CRow","children","CCol","xs","_jsxs","CCard","className","CCardHeader","style","color","_Fragment","CForm","onSubmit","event","preventDefault","userDisplayID","CCardBody","CFormSelect","size","onChange","map","val","toString","id","positionName","CInputGroup","CInputGroupText","CFormInput","placeholder","autoComplete","CAccordion","flush","fullWidth","CAccordionItem","itemKey","CAccordionHeader","CAccordionBody","type","files","display","alignItems","justifyContent","CButton","width","onClick","headers","src","require","concat","imgDefault","alt","textAlign","margin"],"sourceRoot":""}