{"version":3,"file":"static/js/9057.8fd677ae.chunk.js","mappings":"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","sources":["views/configurations/viewpulloutuser/ViewPulloutUser.js"],"sourcesContent":["import  { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport * as React from 'react'\n\nimport { DataGrid } from '@mui/x-data-grid';\n\nimport {useNavigate} from 'react-router-dom';\n\n\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CRow,\n    CForm,\n    CButton,\n    CInputGroup,\n\n  } from '@coreui/react'\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Paper from '@mui/material/Paper';\nimport Draggable from 'react-draggable';\n\nimport WriteLog from 'src/components/logs/LogListener';\n\nimport appSettings from 'src/AppSettings' // read the app config\nimport {  decrypt } from 'n-krypta';\n\nconst ViewPulloutUser = () => {\n\n    const navigate = useNavigate();\n    var userID = \"\"\n    var userRole = \"\"\n\n    const [message,setMessage] = useState(\"\")\n    const [colorMessage,setColorMessage] = useState('red')\n\n    const [pullout,setPullout] = useState([])\n    const [open, setOpen] = React.useState(false);\n    const [rowselected,setRowSelected] = useState({ })\n\n    function CheckRole() {\n      try {\n  \n        userRole = decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal)\n  \n      }\n      catch(err) {\n        WriteLog(\"Error\",\"ViewPulloutUser\",\"CheckRole Local Storage is tampered\", err.message,userID)\n        navigate('/dashboard')\n      }\n    }\n\n\n    function getUserInfo() {\n\n      try {\n        CheckRole()\n   //       if (userRole == \"Admin\" || userRole == \"IT\")\n    //        {\n                if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n                  userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n                \n                }else{ \n                  navigate('/login')\n             }\n   //         }\n  //        else {\n  //          navigate('/dashboard')\n  //        }\n            \n          }\n      catch(err) {\n        navigate('/dashboard')\n        }\n    }\n\n    useEffect(() => {\n  \n  getUserInfo()\n      }, [])\n\n\n    const columns = React.useMemo(() => [\n\n      {\n        field: 'assetCode',\n        headerName: 'Code',\n        width: 150,\n        editable: false,\n      },\n      {\n        field: 'assetName',\n        headerName: 'Name',\n        width: 200,\n        editable: false,\n      },\n      {\n        field: 'statusName',\n        headerName: 'Status',\n        width: 150,\n        editable: false,\n      },\n        {\n          field: 'assetCategName',\n          headerName: 'Category',\n          width: 150,\n          editable: false,\n        },\n        {\n          field: 'pulloutby',\n          headerName: 'Pullout User',\n          width: 150,\n          editable: false,\n        },\n        {\n            field: 'pulloutdate',\n            headerName: 'Pullout Date',\n            width: 150,\n            editable: false,\n        },\n        {\n            field: 'pulloutreceive',\n            headerName: 'Receive',\n            width: 150,\n            editable: false,\n        },\n        {\n            field: 'pulloutdatereceive',\n            headerName: 'Date Receive',\n            width: 150,\n            editable: false,\n        },\n      ],[]);\n\n    \n    function CheckAssetReceive(param)\n    {\n      try{\n        if(userID == \"\") \n        {\n          getUserInfo()\n        }\n        setMessage(\"\")\n        let rowId = param\n        const url = 'http://localhost:3001/pullout/checkpulloutnotification'\n        axios.post(url,{rowId,userID})\n        .then(res => {\n          const dataResponse = res.data.message;\n          if(dataResponse == \"Record Found\") {\n            SingleCheckIn(param)\n          }\n          else if (dataResponse == \"No Record Found\") {\n\n            WriteLog(\"Message\",\"ViewPullout\",\"CheckAssetReceive /pullout/checkpulloutnotification \",\"Asset previously received ( \" + rowId + \" )\",userID)\n\n          }\n        }).catch(err => {\n          WriteLog(\"Error\",\"ViewPullout\",\"CheckAssetReceive /pullout/checkpulloutnotification\",\" Error then/catch \\n \" + err.message,userID)\n         \n        })\n      }\n      catch(err){\n        WriteLog(\"Error\",\"ViewPullout\",\"CheckAssetReceive /pullout/checkpulloutnotification\",\" Error try/catch \\n \" + err.message,userID)\n      }\n    }\n\n    function SingleCheckIn(param) {\n        \n        try{\n          if(userID == \"\") \n          {\n            getUserInfo()\n          }\n          let rowId = param\n          const url = 'http://localhost:3001/pullout/updatepulloutnotification'\n          axios.post(url,{rowId,userID})\n          .then(res => {\n            const dataResponse = res.data.message;\n\n            if(dataResponse == \"Update Success\") {\n              WriteLog(\"Message\",\"ViewPullout\",\"SingleCheckIn /pullout/updatepulloutnotification\", \n              \" Receive Pullout \" \n              + \"\\n Detail ID : \" + rowId \n              + \" \\n Purpose : \" + \"Mark pullout as receive\"\n              + \"\\n User : \" + userID ,userID)\n            }\n            if (dataResponse == \"Update Error\") {\n              setMessage(\"Selected asset not updated\")\n              setColorMessage(\"red\")\n              WriteLog(\"Error\",\"ViewPullout\",\"SingleCheckIn /pullout/updatepulloutnotification\",\"Selected asset not updated ( \" + rowId + \" )\",userID)\n              \n            }\n          }).catch(err => {\n            WriteLog(\"Error\",\"ViewPullout\",\"SingleCheckIn /pullout/updatepulloutnotification\",err.message,userID)\n           \n          })\n        }\n        catch(err){\n          WriteLog(\"Error\",\"ViewPullout\",\"SingleCheckIn /pullout/updatepulloutnotification\",err.message,userID)\n        }\n       \n    }\n\n    function ProcessCheckin()\n    {\n      let num = 0;\n      try {\n      setOpen(false)\n      \n      rowselected.forEach((irow,index) => {\n        num = num + index\n        CheckAssetReceive(irow)\n      })\n      \n      LoadData();\n      }\n      catch {\n        num = 0\n      }\n    }\n      \nfunction handleClose(){\n  setOpen(false)\n}\nfunction handleOpen(){\n  setOpen(true)\n}\n\nuseEffect(() => {\n\n      LoadData();\n\n  },[])\n\nfunction LoadData(){\n  if(userID == \"\") \n  {\n    getUserInfo()\n  }\n  const url = 'http://localhost:3001/pullout/viewallpullout'\n  axios.post(url)\n  .then(res => {\n    const dataResponse = res.data.message;\n    if(dataResponse == \"Record Found\") {\n      console.log(userID)\n        setPullout(res.data.result)\n    } else if (dataResponse == \"No Record Found\") {\n        //setMessage(\"No Record Found\")\n        //setColorMessage(\"red\")\n    }\n  }).catch(err => {\n    WriteLog(\"Error\",\"ViewPullout\",\"LoadData pullout/viewallpullout\", err.message,userID)\n  })\n}\n\n\n      /// For Dialog\n  function PaperComponent(props) {\n    return (\n      <Draggable\n        handle=\"#draggable-dialog-title\"\n        cancel={'[class*=\"MuiDialogContent-root\"]'}\n      >\n        <Paper {...props} />\n      </Draggable>\n    );\n  }\n\n  return (\n\n    <CCol xs={12}>\n    <CCard className=\"mb-3\" size=\"sm\"  >\n      <CCardHeader>\n        <strong>User Pullout <span className=\"message\" style={{ color: colorMessage}}><p>{message}</p></span> </strong>\n      </CCardHeader>\n      <CForm >\n        <CRow >\n            <CCol xs={12}>\n              <CCardBody>\n                <CInputGroup size=\"sm\" className=\"mb-3\">\n                        <div style={{ height: 400, width: '100%' }}>\n                            <DataGrid\n                                rows={pullout}\n                                columns={columns}\n                                initialState={{\n                                pagination: {\n                                    paginationModel: {\n                                    pageSize: 10,\n                                    },\n                                },\n                                }}\n                                pageSizeOptions={[10]}\n                                rowSelection={true}\n                                \n                                getRowId={(row) => row.id}\n                                disableRowSelectionOnClick\n                                //onRowSelectionModelChange={id,assetID => setRowSelected({detailid:id,assetid:assetID})}\n                                onRowSelectionModelChange={(id) => setRowSelected(id)}\n                            />\n                        </div>\n                </CInputGroup>\n                <div className=\"d-grid\">\n                      <Dialog\n                        open={open}\n                        onClose={handleClose}\n                        PaperComponent={PaperComponent}\n                        aria-labelledby=\"draggable-dialog-title\"\n                      >\n                        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                          Receive Asset\n                        </DialogTitle>\n                        <DialogContent>\n                          <DialogContentText>\n                            {\"You acknowledge asset will be receive from user \\n advice and will be checkin to IT !\"}\n                          </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                          <Button autoFocus onClick={handleClose}>\n                            Cancel\n                          </Button>\n                          <Button onClick={ProcessCheckin}> Receive</Button>\n                        </DialogActions>\n                      </Dialog>\n                </div>\n              </CCardBody>\n            </CCol>\n        </CRow>\n      </CForm>\n    </CCard>\n  </CCol>\n\n                            \n  )\n}\n\nexport default ViewPulloutUser\n"],"names":["navigate","useNavigate","userID","_useState","useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","colorMessage","setColorMessage","_useState5","_useState6","pullout","setPullout","_React$useState","React","_React$useState2","open","setOpen","_useState7","_useState8","rowselected","setRowSelected","getUserInfo","decrypt","window","localStorage","getItem","appSettings","secretkeylocal","err","WriteLog","CheckRole","useEffect","columns","field","headerName","width","editable","CheckAssetReceive","param","rowId","axios","post","then","res","dataResponse","data","url","catch","SingleCheckIn","handleClose","LoadData","console","log","result","_jsx","CCol","xs","children","_jsxs","CCard","className","size","CCardHeader","style","color","CForm","CRow","CCardBody","CInputGroup","height","DataGrid","rows","initialState","pagination","paginationModel","pageSize","pageSizeOptions","rowSelection","getRowId","row","id","disableRowSelectionOnClick","onRowSelectionModelChange","Dialog","onClose","PaperComponent","props","Draggable","handle","cancel","Paper","_objectSpread","DialogTitle","cursor","DialogContent","DialogContentText","DialogActions","Button","autoFocus","onClick","forEach","irow","index","_unused"],"sourceRoot":""}