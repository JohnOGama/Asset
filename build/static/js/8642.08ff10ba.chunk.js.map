{"version":3,"file":"static/js/8642.08ff10ba.chunk.js","mappings":"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","sources":["views/configurations/department/Department.js"],"sourcesContent":["\nimport  { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport * as React from 'react'\n\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CRow,\n    CForm,\n    CButton,\n    CInputGroup\n  } from '@coreui/react'\n\n  import TextField from '@mui/material/TextField';\n\nimport {useNavigate} from 'react-router-dom';\nimport {useLocation} from 'react-router-dom';\n\nimport appSettings from 'src/AppSettings' // read the app config\nimport {  decrypt } from 'n-krypta';\n// encrypt, compare\nimport WriteLog from 'src/components/logs/LogListener';\n\nfunction Department() {\n\n  const navigate = useNavigate();\n  const {state} = useLocation();\n  let rowId = \"\"\n  \n  try {\n     rowId = state.params;\n  }\n  catch(err){\n   navigate('/dashboard')\n  }\n  \n  var userID = \"\"\n  var userRole = \"\"\n\n  const [message,setMessage] = useState(\"\")\n  const [colorMessage,setColorMessage] = useState('red')\n\n  const [values,setValues] = useState({\n    departmentid: \"\",\n    name: \"\",\n    description: \"\"\n  })\n\n  function CheckRole() {\n    try {\n\n      userRole = decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal)\n\n    }\n    catch(err) {\n      WriteLog(\"Error\",\"Department\",\"CheckRole Local Storage is tampered\", err.message,userID)\n      navigate('/dashboard')\n    }\n  }\n\n\n  function getUserInfo() {\n\n    try {\n      CheckRole()\n        if (userRole == \"Admin\" || userRole == \"IT\")\n          {\n              if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n                userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n              \n              }else{ \n                navigate('/login')\n            }\n          }\n        else {\n          navigate('/dashboard')\n        }\n          \n        }\n    catch(err) {\n      navigate('/dashboard')\n      }\n}\n\n\n\n    useEffect(() => {\n     getUserInfo()\n      }, [])\n\n    useEffect(() => {\n      try {\n          if(userID == \"\") \n  {\n    getUserInfo()\n  }\n\n      if(!rowId == \"\") {\n      const url = 'http://localhost:3001/department/getDepartmentID'\n      axios.post(url,{rowId})\n      .then(res => {\n        const dataResponse = res.data.message;\n        if(dataResponse == \"Record Found\") {\n         \n          setValues(\n            {...values,departmentid: res.data.result[0].departmentDisplayID,\n              name: res.data.result[0].departmentName,\n              description: res.data.result[0].description\n            });\n\n        } else if (dataResponse == \"No Record Found\") {\n          WriteLog(\"Error\",\"Department\",\"useEffect /department/getDepartmentID\",res.data.message2,userID)\n          //navigate('/500');\n        }\n      }).catch(err => {\n        WriteLog(\"Error\",\"Department\",\"useEffect /department/getDepartmentID\",\"then/catch \\n\" + err.message,userID)\n      })\n    }\n  }\n  catch(err) {\n    WriteLog(\"Error\",\"Department\",\"useEffect /department/getDepartmentID\",\"try/catch \\n\" + err.message,userID)\n  }\n    },[])\n\n\n    function handleInput(event){\n      setValues({...values,[event.target.name]: event.target.value})\n\n    }\n\n\n    function handleSubmit(event) {\n        try {\n      if(userID == \"\") \n  {\n    getUserInfo()\n  }\n          event.preventDefault();\n          const userID = decrypt(localStorage.getItem('id'), appSettings.secretkeylocal); \n\n          const name = values.name;\n          const description = values.description;\n\n          if((!name == \"\") && \n            (!description == \"\")) {\n\n              if (rowId == \"\") {\n\n              const url = 'http://localhost:3001/department/putDepartment'\n              axios.post(url,{name,description,userID})\n              .then(res => {  \n                  const dataResponse = res.data.message \n                  if(dataResponse == \"Insert Success\"){ \n                    WriteLog(\"Message\",\"AssetStatus\",\"handleSubmit /department/putDepartment\", \n                    \" New Department \"\n                    + \"\\n Name: \" + name \n                    + \"\\n Desc  :  \" + description \n                    + \"\\n User : \" + userID ,userID)\n                    navigate('/configurations/departmentview')\n                  } else if(dataResponse == \"Insert Error\") {\n                    WriteLog(\"Error\",\"Department\",\"handleSubmit /department/putDepartment\",res.data.message2,userID)\n                    setMessage(\"Error in Inserting new Department\")\n                    setColorMessage(\"red\")  \n                    //navigate('/500');\n                  } \n              })\n              .catch(err => {\n                WriteLog(\"Error\",\"Department\",\"handleSubmit /department/putDepartment\",err.message,userID)\n              })\n              \n            }\n            else {\n              /// update here\n\n              const url = 'http://localhost:3001/department/updateDepartment'\n              axios.post(url,{name,description,userID,rowId})\n              .then(res => {  \n                  const dataResponse = res.data.message \n                  if(dataResponse == \"Update Success\"){ \n                    WriteLog(\"Message\",\"AssetStatus\",\"handleSubmit /department/updateDepartment\", \n                    \" Update Department \"\n                    + \" AssetID : \" + rowId\n                    + \"\\n Name: \" + name \n                    + \"\\n Desc  :  \" + description \n                    + \"\\n User : \" + userID ,userID)\n                    navigate('/configurations/departmentview')\n                  } else if(dataResponse == \"Update Error\") {\n                    WriteLog(\"Error\",\"Department\",\"handleSubmit /department/updateDepartment\",res.data.message2,userID)\n                    setMessage(\"Error in Updating Department\")\n                    setColorMessage(\"red\")  \n                    //navigate('/500');\n                  } \n              })\n              .catch(err => {\n                WriteLog(\"Error\",\"Department\",\"handleSubmit /department/updateDepartment\",\"Error in try/catch \" + err.message,userID)\n                //navigate('/500');\n              })\n\n            }\n          }\n          else\n          {\n            setMessage(\"All fields must not be emtpy\")\n            setColorMessage(\"red\")  \n          }\n        }\n        catch(err) {\n          WriteLog(\"Error\",\"Department\",\"handleSubmit\",\"Error in try/catch \" +  err.message,userID)\n        }\n    }\n\n  return (\n\n    <CCol xs={12}>\n         <CCard className=\"mb-3\" size=\"sm\"  >\n         <CCardHeader>\n            <h6>\n            <span className=\"message\" style={{ color: '#5da4f5'}}> <> Department </></span> \n            <br></br>\n            <strong><span className=\"message\" style={{ color: colorMessage}}><p>{message}</p></span> </strong>\n            </h6>\n          </CCardHeader>\n          <CForm onSubmit={handleSubmit}>\n            <CRow >\n                <CCol >\n                    <CCardBody>\n                      <CInputGroup size=\"sm\" className=\"mb-3\" >\n                          <TextField onChange={e => handleInput(e)} name=\"name\" id=\"outlined-textarea\"\n                            value={values.name} fullWidth label=\"Department Name\" placeholder=\"Department Name\" />\n                      </CInputGroup>\n                      <CInputGroup size=\"sm\" className=\"mb-3\" >\n                          <TextField onChange={handleInput} name=\"description\" id=\"outlined-textarea\" \n                              value={values.description} fullWidth label=\"Description\" placeholder=\"Description\" \n                              multiline  rows={5}  />\n                      </CInputGroup>\n                    </CCardBody>\n                </CCol>\n                <CCol>\n\n                </CCol>\n\n            </CRow>\n            <div className=\"d-grid\" style={{\n                            \n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            }} >\n                  <CButton style={{   width: '150%' }} color=\"success\" type='submit'>Save</CButton>\n            </div>\n          </CForm>\n         </CCard>\n    </CCol>\n  )\n}\n\nexport default Department\n"],"names":["navigate","useNavigate","state","useLocation","rowId","params","err","userID","userRole","_useState","useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","colorMessage","setColorMessage","_useState5","departmentid","name","description","_useState6","values","setValues","getUserInfo","decrypt","window","localStorage","getItem","appSettings","secretkeylocal","WriteLog","CheckRole","handleInput","event","_objectSpread","_defineProperty","target","value","useEffect","axios","post","then","res","dataResponse","data","result","departmentDisplayID","departmentName","message2","catch","_jsx","CCol","xs","children","_jsxs","CCard","className","size","CCardHeader","style","color","_Fragment","CForm","onSubmit","preventDefault","CRow","CCardBody","CInputGroup","TextField","onChange","e","id","fullWidth","label","placeholder","multiline","rows","display","alignItems","justifyContent","CButton","width","type"],"sourceRoot":""}