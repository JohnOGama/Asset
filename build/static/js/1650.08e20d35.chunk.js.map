{"version":3,"file":"static/js/1650.08e20d35.chunk.js","mappings":"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","sources":["views/configurations/assetcategory/AssetCategory.js"],"sourcesContent":["\nimport  { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport * as React from 'react'\n\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CRow,\n    CForm,\n    CButton,\n    //CFormSelect,\n    //CFormInput,\n   // CInputGroupText,\n    CInputGroup,\n   // CFormLabel,\n  //  CFormFloating,\n  //  CLink,\n  } from '@coreui/react'\n\n  import TextField from '@mui/material/TextField';\n\nimport {useNavigate} from 'react-router-dom';\nimport {useLocation} from 'react-router-dom';\n\nimport appSettings from 'src/AppSettings' // read the app config\nimport { decrypt } from 'n-krypta';\n// encrypt,compare\nimport WriteLog from 'src/components/logs/LogListener';\n\nfunction AssetCategory() {\n\n  const navigate = useNavigate();\n  const {state} = useLocation();\n  let rowId = \"\"\n  var userRole = \"\"\n  \n  try {\n     rowId = state.params;\n  }\n  catch(err){\n   navigate('/dashboard')\n  }\n \n  const [userID,setUserID] = useState(\"\")\n  //const [success,SetSuccess] = useState(\"\");\n  //const [errors,setErrors] = useState({})\n  const [message,setMessage] = useState(\"\")\n  const [colorMessage,setColorMessage] = useState('red')\n\n  const [values,setValues] = useState({\n    assetid: \"\",\n    name: \"\",\n    description: \"\"\n  })\n\n  function CheckRole() {\n    try {\n\n      userRole = decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal)\n\n    }\n    catch(err) {\n      WriteLog(\"Error\",\"AssetCategory\",\"CheckRole Local Storage is tampered\", err.message,userID)\n      navigate('/dashboard')\n    }\n  }\n\n\n  function getUserInfo() {\n\n    try {\n      CheckRole()\n        if (userRole == \"Admin\" || userRole == \"IT\")\n          {\n              if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n                userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n              \n              }else{ \n                navigate('/login')\n            }\n          }\n        else {\n          navigate('/dashboard')\n        }\n          \n        }\n    catch(err) {\n      navigate('/dashboard')\n      }\n}\n\n    useEffect(() => {\n    getUserInfo()\n      }, [])\n      \n\n    useEffect(() => {\n   \n        if(userID == \"\") \n  {\n    getUserInfo()\n  }\n\n      if(!rowId == \"\") {\n      const url = 'http://localhost:3001/category/getAssetCategorybyID'\n      axios.post(url,{rowId})\n      .then(res => {\n        const dataResponse = res.data.message;\n        if(dataResponse == \"Record Found\") {\n         \n          setValues(\n            {...values,assetid: res.data.result[0].assetCategID,\n              name: res.data.result[0].assetCategName,\n              description: res.data.result[0].description\n            });\n\n        } else if (dataResponse == \"No Record Found\") {\n          setMessage(dataResponse)\n          setColorMessage('red')\n          WriteLog(\"Error\",\"AssetCategory\",\"useEffect /category/getAssetCategorybyID\",res.data.message,userID)\n          //navigate('/500');\n        }\n      }).catch(err => {\n        WriteLog(\"Error\",\"AssetCategory\",\"useEffect /category/getAssetCategorybyID\",\" Error in try/catch \\n\" + err.message,userID)\n       \n      })\n    }\n    },[])\n\n\n    function handleInput(event){\n     \n      setValues({...values,[event.target.name]: event.target.value})\n\n    }\n\n\n    function handleSubmit(event) {\n        try {\n    \n          event.preventDefault();\n            if(userID == \"\") \n  {\n    getUserInfo()\n  }\n\n          const name = values.name;\n          const description = values.description;\n\n          if((!name == \"\") && \n            (!description == \"\")) {\n\n              if (rowId == \"\") {\n\n              const url = 'http://localhost:3001/category/putCategory'\n              axios.post(url,{name,description,userID})\n              .then(res => {  \n                  const dataResponse = res.data.message \n                  if(dataResponse == \"Insert Success\"){ \n                    \n                  WriteLog(\"Message\",\"AssetCategory\",\"handleSubmit /category/putCategory\", \n                  \" New Category \"\n                  + \"\\n Name: \" + name \n                  + \"\\n Desc  :  \" + description \n                  + \"\\n User : \" + userID ,userID)\n                    navigate('/configurations/categoryview')\n                  } else if(dataResponse == \"Insert Error\") {\n                    WriteLog(\"Error\",\"AssetCategory\",\"handleSubmit /category/putCategory\",res.data.message ,userID)\n                    setMessage(dataResponse)\n                    setColorMessage(\"red\")  \n                    //navigate('/500');\n                  } \n              })\n              .catch(err => {\n                WriteLog(\"Error\",\"AssetCategory\",\"handleSubmit /category/putCategory\",err.message ,userID)\n                navigate('/500');\n              })\n              \n            }\n            else {\n              /// update here\n\n              const url = 'http://localhost:3001/category/updateCategory'\n              axios.post(url,{name,description,userID,rowId})\n              .then(res => {  \n                  const dataResponse = res.data.message \n                  if(dataResponse == \"Update Success\"){ \n                    WriteLog(\"Message\",\"AssetCategory\",\"handleSubmit /category/updateCategory\", \n                    \" New Category \"\n                    + \"\\n AssetID : \" + rowId\n                    + \"\\n Name: \" + name \n                    + \"\\n Desc  :  \" + description \n                    + \"\\n User : \" + userID ,userID)\n                    navigate('/configurations/categoryview')\n                  } else if(dataResponse == \"Update Error\") {\n                    WriteLog(\"Error\",\"AssetCategory\",\"handleSubmit /category/updateCategory\",res.data.message ,userID)\n                    setMessage(dataResponse)\n                    setColorMessage(\"red\")  \n                    //navigate('/500');\n                  } \n              })\n              .catch(err => {\n                WriteLog(\"Error\",\"AssetCategory\",\"handleSubmit /category/updateCategory\",err.message,userID)\n                navigate('/500');\n              })\n\n            }\n          }\n          else\n          {\n            setMessage(\"All fields must not be emtpy\")\n            setColorMessage(\"red\")  \n          }\n        }\n        catch(err) {\n          WriteLog(\"Error\",\"AssetCategory\",\"handleSubmit\",\" Error in try/catch\",userID)\n        }\n    }\n\n  return (\n\n    <CCol xs={12}>\n         <CCard className=\"mb-3\" size=\"sm\"  >\n         <CCardHeader>\n            <h6>\n              <span className=\"message\" style={{ color: '#5da4f5'}}> <> Asset Category </></span> \n              <br></br>\n              <strong><span className=\"message\" style={{ color: colorMessage}}><p>{message}</p></span> </strong>\n            </h6>\n          </CCardHeader>\n          <CForm onSubmit={handleSubmit}>\n            <CRow >\n                <CCol >\n                    <CCardBody>\n                      <CInputGroup size=\"sm\" className=\"mb-3\" >\n                          <TextField onChange={e => handleInput(e)} name=\"name\" id=\"outlined-textarea\"\n                            value={values.name} fullWidth label=\"Category Name\" placeholder=\"Notes\" />\n                      </CInputGroup>\n                      <CInputGroup size=\"sm\" className=\"mb-3\" >\n                          <TextField onChange={handleInput} name=\"description\" id=\"outlined-textarea\" \n                              value={values.description} fullWidth label=\"Description\" placeholder=\"Description\" \n                              multiline  rows={5}  />\n                      </CInputGroup>\n                    </CCardBody>\n                </CCol>\n                <CCol>\n\n                </CCol>\n                <div className=\"d-grid\" style={{\n                            \n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            }} >\n                  <CButton style={{  margin:'5px', width: '120%' }} color=\"success\" type='submit'>Save</CButton>\n                </div>\n            </CRow>\n          </CForm>\n         </CCard>\n    </CCol>\n  )\n}\n\nexport default AssetCategory\n"],"names":["navigate","useNavigate","state","useLocation","rowId","userRole","params","err","_useState","useState","_useState2","_slicedToArray","userID","_useState3","_useState4","message","setMessage","_useState5","_useState6","colorMessage","setColorMessage","_useState7","assetid","name","description","_useState8","values","setValues","getUserInfo","decrypt","window","localStorage","getItem","appSettings","secretkeylocal","WriteLog","CheckRole","_readOnlyError","handleInput","event","_objectSpread","_defineProperty","target","value","useEffect","axios","post","then","res","dataResponse","data","result","assetCategID","assetCategName","catch","_jsx","CCol","xs","children","_jsxs","CCard","className","size","CCardHeader","style","color","_Fragment","CForm","onSubmit","preventDefault","CRow","CCardBody","CInputGroup","TextField","onChange","e","id","fullWidth","label","placeholder","multiline","rows","display","alignItems","justifyContent","CButton","margin","width","type"],"sourceRoot":""}