{"version":3,"file":"static/js/2298.c13ba7d5.chunk.js","mappings":"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","sources":["components/DateFunc.js","components/logs/LogListenerUser.js","views/base/assetuserassign/AssetUserAssign.js"],"sourcesContent":["\nfunction utils_getDate() {\n\n    let newDate = new Date()\n   \n    let year = newDate.getFullYear();\n    let month = newDate.getMonth() + 1;\n    let day = newDate.getDate();\n    let hr = newDate.getHours();\n    let minute = newDate.getMinutes();\n    let secs = newDate.getSeconds();\n   // let now =  year+\"/\"+month+\"/\"+day +\" \" + hr+\":\"+minute+\":\"+secs\n    let now =  month +\"/\" + day + \"/\" + year \n    // year+\"/\"+month+\"/\"+day \n   // console.log(newDate)\n   // console.log(day)\n\n    return now\n}\n\nexport default utils_getDate;","import axios from 'axios'\n\nfunction WriteUserInfo(logtype,module,userNotifID,receiver_name,receiver_dept,logvalues,userID) {\n    let notif = false\n\n    try {\n\n        const url = 'http://localhost:3001/log/putUserNotif'\n        axios.post(url,{logtype,module,userNotifID,receiver_name,receiver_dept,logvalues,userID})\n        .then(res => {\n        const dataResponse = res.data.message;\n        if(dataResponse == \"Insert Success\") {\n\n            notif = true\n         }\n         else\n         {\n            console.log(dataResponse)\n         }\n        })\n        .catch(err => {\n            console.log(err)\n            \n        })\n       \n    }\n    catch(err) {\n        console.log(\"Writing error -- \" + err)\n    }\n\n}\n\n\nexport default WriteUserInfo;","// eslint-disable-next-line\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport * as React from \"react\";\n\nimport { DataGrid } from \"@mui/x-data-grid\";\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CForm,\n  CButton,\n  //CFormSelect,\n  //CFormInput,\n  //CInputGroupText,\n  CInputGroup,\n  //CFormLabel,\n  //CFormFloating\n} from \"@coreui/react\";\n\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Paper from \"@mui/material/Paper\";\nimport Draggable from \"react-draggable\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport appSettings from \"src/AppSettings\"; // read the app config\nimport { decrypt } from \"n-krypta\";\n//encrypt, compare\n\nimport WriteLog from \"src/components/logs/LogListener\";\nimport utils_getDate from \"src/components/DateFunc\";\nimport WriteUserInfo from \"src/components/logs/LogListenerUser\";\n\nconst AssetUserAssign = () => {\n  const navigate = useNavigate();\n\n  let userID = \"\";\n\n  //const [success,SetSuccess] = useState(\"\");\n  //const [errors,setErrors] = useState({})\n  const [message, setMessage] = useState(\"\");\n  const [colorMessage, setColorMessage] = useState(\"red\");\n\n  const [assets, setAssets] = useState([]);\n  const [assetstat, setAssetStat] = useState(\"\"); // deployed\n  const [assetstatfordeploy, setAssetForDeploy] = useState(\"\"); // for deploy\n  const [rowselected, setRowSelected] = useState({});\n  const [iselected, SetTotalSelected] = useState(0); // count how many are selected\n\n  const [open, setOpen] = React.useState(false);\n\n  /// For Dialog Box\n\n  function PaperComponent(props) {\n    return (\n      <Draggable\n        handle=\"#draggable-dialog-title\"\n        cancel={'[class*=\"MuiDialogContent-root\"]'}\n      >\n        <Paper {...props} />\n      </Draggable>\n    );\n  }\n\n  function CheckRole() {\n    try {\n      userRole = decrypt(\n        window.localStorage.getItem(\"Kgr67W@\"),\n        appSettings.secretkeylocal\n      );\n    } catch (err) {\n      WriteLog(\n        \"Error\",\n        \"AssetUserAssign\",\n        \"CheckRole Local Storage is tampered\",\n        err.message,\n        userID\n      );\n      navigate(\"/dashboard\");\n    }\n  }\n\n  function getUserInfo() {\n    try {\n      if (\n        !window.localStorage.getItem(\"id\") == null ||\n        window.localStorage.getItem(\"id\") !== \"0\"\n      ) {\n        userID = decrypt(\n          window.localStorage.getItem(\"id\"),\n          appSettings.secretkeylocal\n        );\n      } else {\n        navigate(\"/login\");\n      }\n    } catch (err) {\n      navigate(\"/dashboard\");\n    }\n  }\n\n  useEffect(() => {\n    getUserInfo();\n    LoadData();\n  }, []);\n\n  useEffect(() => {\n    try {\n      if (userID == \"\") {\n        getUserInfo();\n      }\n      const url = \"http://localhost:3001/assets/viewallassetsassignfordeploy\";\n      axios\n        .post(url, { userID })\n        .then((res) => {\n          const dataResponse = res.data.message;\n\n          if (dataResponse == \"Record Found\") {\n            setAssets(res.data.result);\n          }\n        })\n        .catch((err) => {\n          WriteLog(\n            \"Error\",\n            \"AssetUserAssign\",\n            \"LoadData /assets/viewallassetsassignfordeploy\",\n            err.message,\n            userID\n          );\n        });\n    } catch (err) {\n      WriteLog(\n        \"Error\",\n        \"AssetUserAssign\",\n        \"LoadData /assets/viewallassetsassignfordeploy\",\n        err.message,\n        userID\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    //console.log\n  }, [assets]);\n\n  const handleClickOpen = (event) => {\n    try {\n      event.preventdefault;\n\n      var num = 0;\n      rowselected.forEach((irow, index) => {\n        //num = num + 1;\n        num = index + 1;\n      });\n      SetTotalSelected(num);\n\n      setOpen(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    // console.log()\n  }, [iselected]);\n\n  /// For Dialog\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCheckin = (event) => {\n    event.preventdefault;\n    if(userID == \"\") \n    {\n      getUserInfo()\n    }\n    CheckIN();\n  };\n\n  function CheckIN() {\n    try {\n\n\n\n          rowselected.forEach((irow) => {\n            \n          const detailID = irow\n          WriteLog(\"Error\",\"AssetUserAssign\",\"Hit \",detailID,userID)\n          const url = 'http://localhost:3001/assets/checkinassetsdetail'\n          axios.post(url,{userID,assetstat,detailID})\n          .then(response => {\n            const dataResponse = response.data.message;\n            if(dataResponse == \"Update Success\")\n            {\n\n              UpdateAssetDeployed(detailID)\n              const writeOnce = window.localStorage.getItem('Kvsf45_')\n              if (writeOnce == \"0\" ) {\n                window.localStorage.setItem('Kvsf45_','1')\n              }\n              \n              WriteLog(\"Message\",\"AssetUserAssign\",\"handleCheckin /assets/checkinassetsdetail\", \n                      \"User asset received or checkin \"\n                      + \"\\n Asset Detail ID: \" + detailID \n                      + \"\\n Status From :  \" + assetstatfordeploy \n                      + \"\\n Status To :  \" + assetstat\n                      + \"\\n Receive by : \" + userID ,userID)\n              \n            }\n            else if (dataResponse == \"Update Error\") {\n              WriteLog(\"Error\",\"AssetUserAssign\",\"handleCheckin /assets/checkinassetsdetail\",response.data.message2,userID)\n              window.localStorage.setItem('Kvsf45_','0')\n            }\n          }).catch(err => {\n            WriteLog(\"Error\",\"AssetUserAssign\",\"handleCheckin /assets/checkinassetsdetail\",\"Error in then/catch \" + err.message,userID)\n        })\n\n          })\n        sendEmail()\n        setOpen(false);\n        LoadData() \n\n  }catch(err) {\n    setOpen(false)\n    WriteLog(\"Error\",\"AssetUserAssign\",\"handleCheckin /assets/checkinassetsdetail'\",\"Error in try/catch \" + err.message,userID)\n    navigate('/dashboard')\n  }\n\n  }\n\n  function sendEmail() {\n    try {\n      let strDate = utils_getDate();\n      const allow_send_email_checkin_asset_by_user =\n        appSettings.ALLOW_SENDEMAIL_CHECKIN_BY_USER;\n\n      const checkin_success = window.localStorage.getItem(\"Kvsf45_\");\n\n      //senderInfo.receiveremail,\n      // senderInfo.receiveremail,\n      var templateParams = {\n        email_to: appSettings.email_sender,\n        email_sender: \"\",\n        reply_to: \"\",\n        name: appSettings.ASSET_RECEIVERNAME,\n        notes: \"Asset is now CheckIn on my end\",\n        date: strDate,\n      };\n\n      if (checkin_success == \"1\") {\n        if (allow_send_email_checkin_asset_by_user == \"send\") {\n          emailjs\n            .send(\n              appSettings.YOUR_SERVICE_ID,\n              appSettings.YOUR_TEMPLATE_ID,\n              templateParams,\n              appSettings.public_key\n            )\n            .then(\n              function (response) {\n                WriteLog(\n                  \"Error\",\n                  \"e\",\n                  \"templateParams \",\n                  \"checkin_success \",\n                  userID\n                );\n\n                WriteUserInfo(\n                  \"Info\",\n                  \"AssetUserAssign\",\n                  userID,\n                  \"CheckIn Asset : \" + `\\nNotes : ` + templateParams.notes,\n                  userID\n                );\n              },\n              function (error) {\n                WriteUserInfo(\n                  \"Error\",\n                  \"DisposeView\",\n                  userID,\n                  \"Info : \" +\n                    \"Failed sending email Approve Dispose : \" +\n                    userID +\n                    \"\\n\" +\n                    \"Notes : \" +\n                    templateParams.notes +\n                    \"\\n \" +\n                    \"Response : \" +\n                    error,\n                  userID\n                );\n              }\n            );\n        } else {\n          WriteUserInfo(\n            \"Info\",\n            \"AssetUserAssign\",\n            userID,\n            \"CheckIn Asset : \" + `\\nNotes : ` + templateParams.notes,\n            userID\n          );\n        }\n      } else {\n        WriteUserInfo(\n          \"Info\",\n          \"AssetUserAssign\",\n          userID,\n          \"CheckIn Asset : \" + `\\nNotes : ` + templateParams.notes,\n          userID\n        );\n      }\n    } catch (err) {\n      WriteLog(\n        \"Error\",\n        \"AssetUserAssign\",\n        \"LocalStorage checkin tampered\",\n        err.message,\n        userID\n      );\n    }\n  }\n\n  function UpdateAssetDeployed(paramdetailID) {\n    const [varassetID, setVarAsset] = useState(\"\");\n\n    try {\n      if (userID == \"\") {\n        getUserInfo();\n      }\n\n      //// GetAssetByDetail\n\n      const url = \"http://localhost:3001/assets/getAssetID_By_detailID\";\n      axios\n        .post(url, { paramdetailID })\n        .then((res) => {\n          const dataResponse = res.data.message;\n          if (dataResponse == \"Record Found\") {\n            setVarAsset(res.data.result[0].assetID);\n            WriteLog(\"Error\", \"val \", \"val\", varassetID, userID);\n          } else if (dataResponse == \"No Record Found\") {\n            WriteLog(\n              \"Message\",\n              \"AssetUserAssign\",\n              \"UpdateAssetDeployed /assets/getAssetID_By_detailID\",\n              dataResponse,\n              userID\n            );\n            WriteLog(\"Error\", \"A \", \"A\", varassetID, userID);\n          } else {\n            WriteLog(\"Error\", \"B \", \"B\", varassetID, userID);\n          }\n        })\n        .catch((err) => {\n          WriteLog(\n            \"Error\",\n            \"AssetUserAssign\",\n            \"UpdateAssetDeployed /assets/getAssetID_By_detailID\",\n            \" Error in then/catch \" + err.message,\n            userID\n          );\n          varassetID = \"\";\n          WriteLog(\"Error\", \"C \", \"C\", varassetID, userID);\n        });\n\n      WriteLog(\"Error\", \"val1 \", \"va1l\", varassetID, userID);\n      /// Update Asset Deploy\n\n      WriteLog(\n        \"Message\",\n        \"AssetUserAssign\",\n        \"Test value if AssetID : \" +\n          varassetID +\n          \" AND DETAILID : \" +\n          paramdetailID,\n        userID\n      );\n      //const assetdeploy = assetstat\n\n      const url1 = \"http://localhost:3001/assets/updateassetdeploy\";\n      axios\n        .post(url1, { assetstat, userID, varassetID })\n        .then((res) => {\n          const dataResponse = res.data.message;\n          if (dataResponse == \"Record Found\") {\n            setAssets(res.data.result);\n          } else if (dataResponse == \"No Record Found\") {\n            WriteLog(\n              \"Message\",\n              \"AssetUserAssign\",\n              \"UpdateAssetDeployed /assets/updateassetdeploy\",\n              dataResponse,\n              userID\n            );\n            //navigate('/500');\n          }\n        })\n        .catch((err) => {\n          WriteLog(\n            \"Error\",\n            \"AssetUserAssign\",\n            \"UpdateAssetDeployed /assets/updateassetdeploy\",\n            \"Error in then/catch \" + err.message,\n            userID\n          );\n        });\n    } catch (err) {\n      WriteLog(\n        \"Error\",\n        \"AssetUserAssign\",\n        \"UpdateAssetDeployed\",\n        \"Error in main try/catch \" + err.message,\n        userID\n      );\n    }\n  }\n\n  /// End of Dialog\n\n  function LoadData() {\n    try {\n      if (userID == \"\") {\n        getUserInfo();\n      }\n      const url = \"http://localhost:3001/assets/viewallassetsassignfordeploy\";\n      axios\n        .post(url, { userID })\n        .then((res) => {\n          const dataResponse = res.data.message;\n\n          if (dataResponse == \"Record Found\") {\n            setAssets(res.data.result);\n          }\n        })\n        .catch((err) => {\n          WriteLog(\n            \"Error\",\n            \"AssetUserAssign\",\n            \"LoadData /assets/viewallassetsassignfordeploy\",\n            err.message,\n            userID\n          );\n        });\n    } catch (err) {\n      WriteLog(\n        \"Error\",\n        \"AssetUserAssign\",\n        \"LoadData /assets/viewallassetsassignfordeploy\",\n        err.message,\n        userID\n      );\n    }\n  }\n\n  useEffect(() => {\n    if (userID == \"\") {\n      getUserInfo();\n    }\n    const url = \"http://localhost:3001/assets/getassetfordeploystatus\";\n    axios\n      .post(url)\n      .then((response) => {\n        const dataResponse = response.data.message;\n        if (dataResponse == \"Record Found\") {\n          setAssetForDeploy(response.data.result[0][\"assetStatusID\"]);\n        } else if (dataResponse == \"No Record Found\") {\n          WriteLog(\n            \"Message\",\n            \"AssetUserAssign\",\n            \"useEffect /assets/getassetfordeploystatus\",\n            dataResponse,\n            userID\n          );\n          //navigate('/500');\n        }\n      })\n      .catch((err) => {\n        WriteLog(\n          \"Error\",\n          \"AssetUserAssign\",\n          \"useEffect /assets/getassetfordeploystatus\",\n          err.message,\n          userID\n        );\n      });\n  }, []);\n\n  useEffect(() => {\n    if (userID == \"\") {\n      getUserInfo();\n    }\n    const url = \"http://localhost:3001/assets/getassetstatdeploy\";\n    axios\n      .post(url)\n      .then((res) => {\n        const deployResponse = res.data.message;\n        if (deployResponse == \"Record Found\") {\n          setAssetStat(res.data.result[0][\"assetStatusID\"]);\n        } else if (deployResponse == \"No Record Found\") {\n          WriteLog(\n            \"Message\",\n            \"AssetUserAssign\",\n            \"useEffect /assets/getassetstatdeploy\",\n            deployResponse,\n            userID\n          );\n          //navigate('/500');\n        }\n      })\n      .catch((err) => {\n        WriteLog(\n          \"Message\",\n          \"AssetUserAssign\",\n          \"useEffect /assets/getassetstatdeploy\",\n          err.message,\n          userID\n        );\n      });\n  }, []);\n\n  /// For Data Grid\n\n  const columns = [\n    {\n      field: \"assetCode\",\n      headerName: \"Asset Code\",\n      width: 150,\n      editable: false,\n    },\n    {\n      field: \"assetName\",\n      headerName: \"Name\",\n      width: 150,\n      editable: false,\n    },\n    {\n      field: \"statusName\",\n      headerName: \"Status\",\n      width: 100,\n      editable: false,\n    },\n    {\n      field: \"assetCategName\",\n      headerName: \"Category\",\n      width: 150,\n      editable: false,\n    },\n    {\n      field: \"displayName\",\n      headerName: \"Checkout By\",\n      width: 130,\n      editable: false,\n    },\n    {\n      field: \"datecheckout\",\n      headerName: \"Date Checkout\",\n      width: 130,\n      editable: false,\n    },\n  ];\n\n  /////// end of DGrid\n\n  return (\n    <CCol xs={12}>\n      <CCard className=\"mb-3\" size=\"sm\">\n        <CCardHeader>\n          <h6>\n            <span className=\"message\" style={{ color: \"#5da4f5\" }}>\n              {\" \"}\n              <> Asset Checkin</>\n            </span>\n            <br></br>\n            <strong>\n              <span className=\"message\" style={{ color: colorMessage }}>\n                <p>{message}</p>\n              </span>{\" \"}\n            </strong>\n          </h6>\n        </CCardHeader>\n        <CForm>\n          <CRow>\n            <CCol xs={12}>\n              <CCardBody>\n                <CInputGroup size=\"sm\" className=\"mb-3\">\n                  <div style={{ height: 400, width: \"100%\" }}>\n                    <DataGrid\n                      rows={assets}\n                      columns={columns}\n                      initialState={{\n                        pagination: {\n                          paginationModel: {\n                            pageSize: 5,\n                          },\n                        },\n                      }}\n                      pageSizeOptions={[5]}\n                      checkboxSelection\n                      disableRowSelectionOnClick\n                      onRowSelectionModelChange={(id) => setRowSelected(id)}\n                    />\n                  </div>\n                </CInputGroup>\n              </CCardBody>\n            </CCol>\n            <div\n              className=\"d-grid\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <CButton\n                style={{ width: \"150%\" }}\n                onClick={handleClickOpen}\n                color=\"success\"\n              >\n                Checkin\n              </CButton>\n            </div>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              PaperComponent={PaperComponent}\n              aria-labelledby=\"draggable-dialog-title\"\n            >\n              <DialogTitle\n                style={{ cursor: \"move\" }}\n                id=\"draggable-dialog-title\"\n              >\n                CheckIn\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  Are you sure you want to Checkin / Receive asset(s) ?<br></br>\n                  Selected : ({iselected})\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button autoFocus onClick={handleClose}>\n                  Cancel\n                </Button>\n                <Button onClick={handleCheckin}>CheckIn</Button>\n              </DialogActions>\n            </Dialog>\n          </CRow>\n        </CForm>\n      </CCard>\n    </CCol>\n  );\n};\n\nexport default AssetUserAssign;\n"],"names":["newDate","Date","year","getFullYear","month","getMonth","day","getDate","getHours","getMinutes","getSeconds","logtype","module","userNotifID","receiver_name","receiver_dept","logvalues","userID","axios","post","then","res","dataResponse","data","message","console","log","catch","err","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","colorMessage","_useState5","_useState6","assets","setAssets","_useState7","_useState8","assetstat","setAssetStat","_useState9","_useState10","assetstatfordeploy","setAssetForDeploy","_useState11","_useState12","rowselected","setRowSelected","_useState13","_useState14","iselected","SetTotalSelected","_React$useState","React","_React$useState2","open","setOpen","getUserInfo","window","localStorage","getItem","decrypt","appSettings","secretkeylocal","useEffect","LoadData","result","WriteLog","handleClose","response","deployResponse","_jsx","CCol","xs","children","_jsxs","CCard","className","size","CCardHeader","style","color","_Fragment","CForm","CRow","CCardBody","CInputGroup","height","width","DataGrid","rows","columns","field","headerName","editable","initialState","pagination","paginationModel","pageSize","pageSizeOptions","checkboxSelection","disableRowSelectionOnClick","onRowSelectionModelChange","id","display","alignItems","justifyContent","CButton","onClick","event","preventdefault","num","forEach","irow","index","Dialog","onClose","PaperComponent","props","Draggable","handle","cancel","Paper","_objectSpread","DialogTitle","cursor","DialogContent","DialogContentText","DialogActions","Button","autoFocus","detailID","url","paramdetailID","_useState15","_useState16","varassetID","setVarAsset","assetID","_readOnlyError","url1","UpdateAssetDeployed","setItem","message2","strDate","utils_getDate","allow_send_email_checkin_asset_by_user","ALLOW_SENDEMAIL_CHECKIN_BY_USER","checkin_success","templateParams","email_to","email_sender","reply_to","name","ASSET_RECEIVERNAME","notes","date","emailjs","send","YOUR_SERVICE_ID","YOUR_TEMPLATE_ID","public_key","WriteUserInfo","error","sendEmail","CheckIN"],"sourceRoot":""}