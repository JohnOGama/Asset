{"version":3,"file":"static/js/1103.409814a7.chunk.js","mappings":"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","sources":["components/DateFunc.js","views/base/disposeview/DisposeView.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/init/init.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js"],"sourcesContent":["\nfunction utils_getDate() {\n\n    let newDate = new Date()\n   \n    let year = newDate.getFullYear();\n    let month = newDate.getMonth() + 1;\n    let day = newDate.getDate();\n    let hr = newDate.getHours();\n    let minute = newDate.getMinutes();\n    let secs = newDate.getSeconds();\n   // let now =  year+\"/\"+month+\"/\"+day +\" \" + hr+\":\"+minute+\":\"+secs\n    let now =  month +\"/\" + day + \"/\" + year \n    // year+\"/\"+month+\"/\"+day \n   // console.log(newDate)\n   // console.log(day)\n\n    return now\n}\n\nexport default utils_getDate;","// eslint-disable-next-line\nimport  { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport * as React from 'react'\n\n//import { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\n\n\n\nimport TextField from '@mui/material/TextField';\n\nimport { DataGrid } from '@mui/x-data-grid';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Paper from '@mui/material/Paper';\nimport Draggable from 'react-draggable';\n\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CForm,\n  CButton,\n  CFormSelect,\n\n  CInputGroup,\n\n} from '@coreui/react'\n\nimport emailjs from '@emailjs/browser'\nimport utils_getDate from '../../../components/DateFunc';\n//import {NextApiRequest,NextApiResponse} from 'next'\n/// End of sending email \n\nimport {useNavigate} from 'react-router-dom';\n\nimport appSettings from 'src/AppSettings' // read the app config\nimport {  decrypt } from 'n-krypta';\n// encrypt, compare\n//import { buildTimeValue } from '@testing-library/user-event/dist/types/utils';\n\nimport WriteLog from 'src/components/logs/LogListener';\n\nconst DisposeView = () => {\n\n  const navigate = useNavigate();\n  \n  var userID = \"\"\n  var userRole = \"\"\n\n  const [message,setMessage] = useState(\"\")\n  const [colorMessage,setColorMessage] = useState('red')\n\n  const [dispose,setDispose] = useState([])\n  const [open, setOpen] = React.useState(false);\n  const [rowselected,SetRowSelected] = useState({})\n  \n  const [iselected,SetTotalSelected] = useState(0)\n\n    const [receiverInfo,setReceiverInfo] = useState ({\n      receiveremail: '',\n      receivername: ''\n      })\n\nfunction CheckRole() {\n  try {\n\n    userRole = decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal)\n\n  }\n  catch(err) {\n    WriteLog(\"Error\",\"DisposeView\",\"CheckRole Local Storage is tampered\", err.message,userID)\n    navigate('/dashboard')\n  }\n}\n\nfunction getUserInfo() {\n  try {\n    CheckRole()\n      if (userRole == \"Admin\" || userRole == \"IT\")\n        {\n            if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n              userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n            \n            }else{ \n              navigate('/login')\n          }\n        }\n      else {\n        navigate('/dashboard')\n      }\n        \n      }\n  catch(err) {\n    navigate('/dashboard')\n    }\n}\n\nuseEffect(() => {\n    getUserInfo()\n},[])\n\n\nuseEffect(() => {\n    \n LoadData()\n GetEmailInfo()\n},[])\n\n    \nfunction LoadData(){\n    try {\n        getUserInfo()\n        const url = 'http://localhost:3001/dispose/viewallassetdispose'\n        axios.post(url)\n        .then(res => {\n        const dataResponse = res.data.message;\n        if(dataResponse == \"Record Found\") {\n            setDispose(res.data.result)\n        } \n        }).catch(err => {\n        WriteLog(\"Error\",\"DisposeView\",\"useEffect /dispose/viewallassetdispose\",\"Error in then/catch \\n\" + err.message,userID)\n        })\n    }\n    catch(err) {\n        WriteLog(\"Error\",\"DisposeView\",\" LoadData /dispose/viewallassetdispose\",\"Error in try/catch \\n\" + err.message,userID)\n    }      \n  }\n\n\nuseEffect(() => {\n// console.log\n}, [receiverInfo])\n\n\nfunction GetEmailInfo(param) {\n    getUserInfo()\n    \n  try {\n    const rowId = userID\n    const url = 'http://localhost:3001/email/getemailinfo'\n    axios.post(url,{rowId})\n    .then(response => {\n      const dataResponse = response.data.message;\n      if(dataResponse == \"Record Found\") {\n    \n                setReceiverInfo({...receiverInfo,\n                receiveremail: response.data.result[0].email,\n                receivername: response.data.result[0].userName})\n\n\n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"DisposeView\",\"GetEmailInfo /email/getemailinfo\",dataResponse + \"\\n\" + response.data.message,userID)\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"DisposeView\",\"GetEmailInfo /assets/getallassetsavailable\",\"then/catch \\n \" + err.message,userID)\n    })\n\n  }\n  catch(err) {\n    WriteLog(\"Error\",\"DisposeView\",\"GetEmailInfo /assets/updateassetdeploy\",\"Error in try/catch\",userID)\n  }\n}\n\nfunction handleClick() {\ntry {\n     \n    rowselected.forEach((irow, index) => { \n        if(!irow == '') {\n        CheckDispose(irow)\n        }\n       })\n    \n       const check_approve_dispose = window.localStorage.getItem('Kvsf45_')\n       if(check_approve_dispose == \"1\")\n       {\n          sendEmail()\n       }\n       else if((!check_approve_dispose == \"1\") || (!check_approve_dispose == \"0\"))\n       {\n        WriteLog(\"Error\",\"DisposeView\",\"Get_LocalStorage_Dispose\",\"LocalStorage is tampered \\n \",userID)\n       }\n       else {\n        WriteLog(\"Error\",\"DisposeView\",\"Get_LocalStorage_Dispose\",\"Local Storage issue \\n \",userID)\n       }\n       \n\n}\ncatch(err) {\n    \n    setOpen(false)\n    navigate('/dashboard')\n}\n\n}\n\n  function handleSubmit(event) {\n    try {\n\n      event.preventDefault();\n\n      setMessage(\"\")\n      setColorMessage(\"red\")  \n\n      try {\n \n        let num = 0\n        rowselected.forEach((irow, index) => { \n          num = num + 1;\n        })\n        SetTotalSelected(num)\n        \n        GetEmailInfo(userID)\n        setOpen(true)\n      }\n      catch(err) {\n        console.log(err)\n        setOpen(false);\n      }\n\n    }\n    catch(err) {\n      WriteLog(\"Error\",\"AssetUser\",\"handleSubmit /assets/searchuser\",err.message,userID)\n    }\n\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function CheckDispose(params) {\n\n    getUserInfo()\n    try {\n  \n      const rowId = params\n      \n        const url = 'http://localhost:3001/dispose/checkassetdispose_approve_exist'\n        axios.post(url,{rowId})\n        .then(res => { \n          const dataResponse = res.data.message \n          \n          if(dataResponse == \"Record Found\"){ \n            AssetDispose(rowId,res.data.result[0].assetID)\n\n          } else if(dataResponse == \"No Record Found\") {\n            setMessage(\"Asset already mark as Dispose contact Support Team\")\n            setColorMessage('red')\n            WriteLog(\"Error\",\"DisposeView\",\"CheckDispose /dispose/checkassetdispose_approve_exist\", dataResponse + \"\\n Asset already mark as Dispose contact Support Team\",userID)\n          } \n        })\n        .catch(err => {\n        WriteLog(\"Error\",\"DisposeView\",\"CheckDispose /dispose/checkassetdispose_approve_exist\",\"Error in then/catch \\n\" + err.message,userID)\n        //navigate('/500');\n        //navigate('/page/Page404')\n        })\n      \n    }\n    catch(err) {\n      WriteLog(\"Error\",\"DisposeView\",\"CheckDispose\",\"Error in try/catch \\n\" + err.message,userID)\n    }\n  \n    \n  }\n\n  function AssetDispose(disposeid,assetid) {\n    try {\n      getUserInfo()\n      const url = 'http://localhost:3001/dispose/AssetDispose_Approve'\n      axios.post(url,{userID,disposeid,assetid})\n      .then(res => {\n        const dataResponse = res.data.message \n        \n        if(dataResponse == \"Update Error\") {\n          WriteLog(\"Error\",\"DisposeView\",\"AssetDispose_Single /dispose/AssetDispose_Approve\", res.message2,userID)\n        } else if( dataResponse == \"Update Success\") {\n          window.localStorage.setItem('Kvsf45_','1')\n          WriteLog(\"Message\",\"DisposeView\",\"AssetDispose /dispose/AssetDispose_Approve\", \n          \"Asset Dispose \"\n          + \"\\n AssetID: \" + assetid\n          + \"\\n Dispose ID: \" + disposeid ,userID)\n        }\n      })\n      .catch(err => {\n      WriteLog(\"Error\",\"DisposeView\",\"AssetDispose_Single /dispose/AssetDispose_Approve\",\"Error in then/catch \\n\" + err.message,userID)\n      \n      })\n    }\n    catch(err) {\n      WriteLog(\"Error\",\"DisposeView\",\" AssetDispose_Single /dispose/AssetDispose_Approve\",\"Error in try/catch \\n\" + err.message,userID)\n    }\n  }\n\n\n/////////// For Data Grid \n\nconst columns = React.useMemo(() => [\n    {\n        field: 'isApprove',\n        headerName: 'Approve',\n        width: 70,\n        editable: false,\n    },\n    {\n    field: 'serialNo',\n    headerName: 'Serial No',\n    width: 100,\n    editable: false,\n    },\n    {\n    field: 'assetCode',\n    headerName: 'Code',\n    width: 150,\n    editable: false,\n    },\n    {\n        field: 'assetName',\n        headerName: 'Name',\n        width: 150,\n        editable: false,\n    },\n    {\n    field: 'assetCategName',\n    headerName: 'Category',\n    width: 150,\n    editable: false,\n    },\n    {\n        field: 'boxName',\n        headerName: 'Box',\n        width: 150,\n        editable: false,\n    },\n    {\n    field: 'suppliername',\n    headerName: 'Supplier',\n    width: 200,\n    editable: false,\n    },\n    \n    {\n        field: 'statfrom',\n        headerName: 'Status From',\n        width: 150,\n        editable: false,\n    },\n    {\n        field: 'statto',\n        headerName: 'Status Dispose',\n        width: 150,\n        editable: false,\n    },\n    {\n        field: 'displayName',\n        headerName: 'User',\n        width: 150,\n        editable: false,\n    },\n    {\n        field: 'disposedate',\n        headerName: 'Date',\n        width: 150,\n        editable: false,\n    },\n\n],[]);\n\n/////////// End of Datagrid \n\n  function sendEmail() {\n\n    let strDate =   utils_getDate();\n   \n    try {\n    var templateParams = {\n    email_to: receiverInfo.receiveremail,\n    email_sender: appSettings.email_sender,\n    reply_to : appSettings.reply_to,\n    name: receiverInfo.receivername,\n    notes: \"Asset is now approve for Dispose\",\n    date: strDate\n};\n \n  const allow_send_email_approve_dispose = appSettings.ALLOW_SENDEMAIL_APPROVE_DISPOSE\n  if(allow_send_email_approve_dispose == \"send\")\n  {\n    emailjs.send(appSettings.YOUR_SERVICE_ID, appSettings.YOUR_TEMPLATE_ID, templateParams,appSettings.public_key)\n    .then(function(response) {\n       \n      WriteUserInfo(\"Info\",\"DisposeView\",userID,\n      \"Approve Asset Dispose : \"\n      + `\\nNotes : ` + templateParams.notes,userID)\n\n    }, function(error) {\n      WriteUserInfo(\"Error\",\"DisposeView\",userID,\n      \"Info : \" \n      + \"Failed sending email Approve Dispose : \" + userID + \"\\n\"\n      + \"Notes : \" + templateParams.notes + \"\\n \"\n      + \"Response : \" + error\n      ,userID)\n    });\n  }\n  else {\n    WriteUserInfo(\"Info\",\"DisposeView\",userID,\n    \"Approve Asset Dispose : \"\n    + `\\nNotes : ` + templateParams.notes,userID)\n  }\n\n  }\n  catch(err) {\n    console.log(err)\n  }\n  }\n  \n////////// For Dialog Box\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\n\n  return (\n    \n    <CCol xs={12}>\n        <CCard className=\"mb-3\" size=\"sm\"  >\n          <CCardHeader>\n            <h6>\n            <span className=\"message\" style={{ color: '#5da4f5'}}> <> Dispose </></span> \n            <br></br>\n            <strong><span className=\"message\" style={{ color: colorMessage}}><p>{message}</p></span> </strong>\n            </h6>\n          </CCardHeader>\n          <CForm onSubmit={handleSubmit}>\n              <CRow >\n                    <CCol >\n                    <CCardBody>\n                        <div style={{ height: 400, width: '100%' }}>\n\n                            <DataGrid\n                                rows={dispose}\n                                columns={columns}\n                                initialState={{\n                                pagination: {\n                                    paginationModel: {\n                                    pageSize: 10,\n                                    },\n                                },\n                                }}\n                                checkboxSelection\n                                pageSizeOptions={[10]}\n                                rowSelection={true}\n                                getRowId={(row) => row.id}\n                                onRowSelectionModelChange={id => SetRowSelected(id)}\n                            />\n                        </div>\n                        \n                    </CCardBody>\n                    </CCol>\n                </CRow>\n                <CRow>\n\n                <div className=\"d-grid\" style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        }} >\n                        <CButton style={{  margin:'5px', width: '120%' }} color=\"success\" onClick={handleSubmit}>Approve</CButton>\n                </div>\n\n                <Dialog\n                        open={open}\n                        onClose={handleClose}\n                        PaperComponent={PaperComponent}\n                        aria-labelledby=\"draggable-dialog-title\"\n                      >\n                        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                            Dispose\n                        </DialogTitle>\n                        <DialogContent>\n                          <DialogContentText>\n                            Are you sure you want to Dispose Asset(s) ?\n                            <br></br>\n                            <br></br>\n                            Selected : {iselected}\n                          </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                          <Button autoFocus onClick={handleClose}>\n                            Cancel\n                          </Button>\n                          <Button onClick={handleClick}>Approve</Button>\n                        </DialogActions>\n                  </Dialog>\n                </CRow>\n          </CForm>\n        </CCard>\n    </CCol>\n\n  )\n}\n\nexport default DisposeView\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.11.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n"],"names":["newDate","Date","year","getFullYear","month","getMonth","day","getDate","getHours","getMinutes","getSeconds","navigate","useNavigate","userID","userRole","_useState","useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","colorMessage","setColorMessage","_useState5","_useState6","dispose","setDispose","_React$useState","React","_React$useState2","open","setOpen","_useState7","_useState8","rowselected","SetRowSelected","_useState9","_useState10","iselected","SetTotalSelected","_useState11","receiveremail","receivername","_useState12","receiverInfo","setReceiverInfo","getUserInfo","decrypt","window","localStorage","getItem","appSettings","secretkeylocal","err","WriteLog","CheckRole","GetEmailInfo","param","rowId","axios","post","then","response","dataResponse","data","_objectSpread","result","email","userName","catch","handleSubmit","event","preventDefault","num","forEach","irow","index","console","log","useEffect","url","res","LoadData","handleClose","columns","field","headerName","width","editable","_jsx","CCol","xs","children","_jsxs","CCard","className","size","CCardHeader","style","color","_Fragment","CForm","onSubmit","CRow","CCardBody","height","DataGrid","rows","initialState","pagination","paginationModel","pageSize","checkboxSelection","pageSizeOptions","rowSelection","getRowId","row","id","onRowSelectionModelChange","display","alignItems","justifyContent","CButton","margin","onClick","Dialog","onClose","PaperComponent","props","Draggable","handle","cancel","Paper","DialogTitle","cursor","DialogContent","DialogContentText","DialogActions","Button","autoFocus","params","disposeid","assetid","message2","setItem","AssetDispose","assetID","CheckDispose","check_approve_dispose","strDate","utils_getDate","templateParams","email_to","email_sender","reply_to","name","notes","date","ALLOW_SENDEMAIL_APPROVE_DISPOSE","emailjs","YOUR_SERVICE_ID","YOUR_TEMPLATE_ID","public_key","WriteUserInfo","error","sendEmail","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","_createClass","httpResponse","_classCallCheck","this","status","text","responseText","sendPost","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","Object","keys","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append"],"sourceRoot":""}