{"version":3,"file":"static/js/5900.0881a345.chunk.js","mappings":"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","sources":["components/DateFunc.js","components/logs/LogListenerUser.js","views/base/assetbyuser/AssetByUser.js","views/base/assetpullout/AssetPullout.js","views/base/assetview/AssetView.js","views/configurations/depreciatedview/DepreciatedView.js","views/configurations/logallinfoview/LogAllInfoView.js","views/configurations/loguserinfoview/LogUserInfoView.js","views/configurations/logview/LogView.js","views/widgets/WidgetsDropdownUser.js","views/dashboard/Dashboard.js","views/widgets/WidgetsBrand.js","views/widgets/WidgetsDropdown.js"],"sourcesContent":["\nfunction utils_getDate() {\n\n    let newDate = new Date()\n   \n    let year = newDate.getFullYear();\n    let month = newDate.getMonth() + 1;\n    let day = newDate.getDate();\n    let hr = newDate.getHours();\n    let minute = newDate.getMinutes();\n    let secs = newDate.getSeconds();\n   // let now =  year+\"/\"+month+\"/\"+day +\" \" + hr+\":\"+minute+\":\"+secs\n    let now =  month +\"/\" + day + \"/\" + year \n    // year+\"/\"+month+\"/\"+day \n   // console.log(newDate)\n   // console.log(day)\n\n    return now\n}\n\nexport default utils_getDate;","import axios from 'axios'\n\nfunction WriteUserInfo(logtype,module,userNotifID,receiver_name,receiver_dept,logvalues,userID) {\n    let notif = false\n\n    try {\n\n        const url = 'http://localhost:3001/log/putUserNotif'\n        axios.post(url,{logtype,module,userNotifID,receiver_name,receiver_dept,logvalues,userID})\n        .then(res => {\n        const dataResponse = res.data.message;\n        if(dataResponse == \"Insert Success\") {\n\n            notif = true\n         }\n         else\n         {\n            console.log(dataResponse)\n         }\n        })\n        .catch(err => {\n            console.log(err)\n            \n        })\n       \n    }\n    catch(err) {\n        console.log(\"Writing error -- \" + err)\n    }\n\n}\n\n\nexport default WriteUserInfo;","\nimport React from 'react'\nimport  { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CRow,\n    CAccordion,\n    CAccordionBody,\n    CAccordionHeader,\n    CAccordionItem,\n    CForm,\n    CButton,\n    CFormSelect,\n    CFormInput,\n    CInputGroupText,\n    CInputGroup,\n    CFormLabel,\n    CFormFloating\n  } from '@coreui/react'\n\nimport {useNavigate} from 'react-router-dom';\nimport { DataGrid } from '@mui/x-data-grid';\n\nimport appSettings from 'src/AppSettings' // read the app config\nimport { encrypt, decrypt, compare } from 'n-krypta';\nimport WriteLog from 'src/components/logs/LogListener';\n\nfunction AssetByUser() {\n\n  const navigate = useNavigate();\n  \n  var userID = \"\"\n  var userRole = \"\"\n    const [success,SetSuccess] = useState(\"\");\n    const [errors,setErrors] = useState({})\n    const [message,setMessage] = useState(\"\")\n    const [colorMessage,setColorMessage] = useState('red')\n\nuseEffect(() => {\n  getUserInfo()\n}, [])\n\nfunction CheckRole() {\n  try {\n\n    userRole = decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal)\n\n  }\n  catch(err) {\n    WriteLog(\"Error\",\"AssetByUser\",\"CheckRole Local Storage is tampered\", err.message,userID)\n    navigate('/dashboard')\n  }\n}\n\nfunction getUserInfo() {\n\n  try {\n    CheckRole()\n      if (userRole == \"Admin\" || userRole == \"IT\")\n        {\n            if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n              userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n            \n            }else{ \n              navigate('/login')\n          }\n        }\n      else {\n        navigate('/dashboard')\n      }\n        \n      }\ncatch(err) {\n  navigate('/dashboard')\n    }\n}\n\n\n\n    function handleSubmit(event) {\n        try {\n    \n          event.preventDefault();\n    \n\n          \n        }\n        catch(err) {\n          console.log(err)\n        }\n    }\n\n////// Data Grid\n\nconst [assets,setAssets] = useState([])\n\nuseEffect(() => {\n  if(userID == \"\") \n  {\n    getUserInfo()\n  }\n  const url = 'http://localhost:3001/assets/viewallassetsassignbyuserfordeploy_deployed  '\n  axios.post(url,{userID})\n  .then(res => {\n    const dataResponse = res.data.message;\n    if(dataResponse == \"Record Found\") {\n      setAssets(res.data.result)\n    }\n  }).catch(err => {\n    WriteLog(\"Error\",\"AssetByUser\",\"handleCheckin /assets/viewallassetsassignbyuserfordeploy_deployed'\",err.message,userID)\n  })\n\n},[])\n\n\n    const columns = [\n      {\n        field: 'assetCode',\n        headerName: 'Asset Code',\n        width: 150,\n        editable: false,\n      },\n      {\n        field: 'assetName',\n        headerName: 'Name',\n        width: 150,\n        editable: false,\n      },\n      {\n        field: 'statusName',\n        headerName: 'Status',\n        width: 100,\n        editable: false,\n      },\n      {\n        field: 'assetCategName',\n        headerName: 'Category',\n        width: 150,\n        editable: false,\n      },\n      {\n        field: 'displayName',\n        headerName: 'Deploy By',\n        width: 130,\n        editable: false,\n      },\n      {\n        field: 'datecheckin',\n        headerName: 'Date Receive',\n        width: 130,\n        editable: false,\n      },\n    ];\n  \n\n    /////////// End of Datagrid \n\n  return (\n\n    <CCol xs={12}>\n         <CCard className=\"mb-3\" size=\"sm\"  >\n         <CCardHeader>\n            <h6>\n            <span className=\"message\" style={{ color: '#5da4f5'}}> <>My Current Asset(s)  </></span> \n            <br></br>\n            <strong><span className=\"message\" style={{ color: colorMessage}}><p>{message}</p></span> </strong>\n            </h6>\n          </CCardHeader>\n          <CForm onSubmit={handleSubmit}>\n            <CRow >\n                <CCol xs={12}>\n                    <CCardBody>\n                    <CInputGroup size=\"sm\" className=\"mb-3\">\n                            <div style={{ height: 400, width: '100%' }}>\n                                <DataGrid\n                                    rows={assets}\n                                    columns={columns}\n                                    initialState={{\n                                    pagination: {\n                                        paginationModel: {\n                                        pageSize: 5,\n                                        },\n                                    },\n                                    }}\n                                    pageSizeOptions={[5]}\n                                    rowSelection={true}\n                                \n                                />\n                            </div>\n                    </CInputGroup>\n                    </CCardBody>\n                </CCol>\n            </CRow>\n          </CForm>\n         </CCard>\n    </CCol>\n  )\n}\n\nexport default AssetByUser\n","\nimport React, { useLayoutEffect } from 'react'\nimport  { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CRow,\n    //CAccordion,\n    //CAccordionBody,\n    //CAccordionHeader,\n    //CAccordionItem,\n    CForm,\n    CButton,\n    CFormSelect,\n    //CFormInput,\n    //CFormLabel,\n    //CFormFloating\n    //CInputGroupText,\n    CInputGroup,\n\n  } from '@coreui/react'\n\n  import TextField from '@mui/material/TextField';\n  import { DataGrid } from '@mui/x-data-grid';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\n//import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\n//import { DatePicker } from '@mui/x-date-pickers/DatePicker';\n\nimport {useNavigate} from 'react-router-dom';\n\nimport appSettings from 'src/AppSettings' // read the app config\nimport { encrypt, decrypt, compare } from 'n-krypta';\nimport WriteLog from 'src/components/logs/LogListener';\nimport emailjs from '@emailjs/browser'\nimport utils_getDate from '../../../components/DateFunc';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Paper from '@mui/material/Paper';\nimport Draggable from 'react-draggable';\nimport { ButtonGroup } from '@mui/material';\nimport WriteUserInfo from 'src/components/logs/LogListenerUser';\n\n\nfunction AssetPullout() {\n  const navigate = useNavigate();\n\n  var userID = \"\"\n  var userRole = \"\"\n  let displayname = \"\"\n\n\n    const [success,SetSuccess] = useState(\"\");\n    const [errors,setErrors] = useState({})\n    const [message,setMessage] = useState(\"\")\n    const [colorMessage,setColorMessage] = useState('red')\n\n    const [assetstatus, setAssetStatus] = useState([]); // bind to status options\n    const [assetID,setAssetStatID] = useState(\"\"); /// receive selected status\n    const [notes,setNotes] = useState(\"\"); // receive notes \n\n\n  function CheckRole() {\n    try {\n\n      userRole = decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal)\n\n    }\n    catch(err) {\n      WriteLog(\"Error\",\"AssetPullout\",\"CheckRole Local Storage is tampered\", err.message,userID)\n      navigate('/dashboard')\n    }\n  }\n    \nfunction getUserInfo() {\ntry {\n    CheckRole()\n      //if (userRole == \"Admin\" || userRole == \"IT\")\n        //{\n            if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n              userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n            \n            }else{ \n              navigate('/login')\n          }\n    //    }\n    //  else {\n   //     navigate('/dashboard')\n   //   }\n        \n      }\n  catch(err) {\n    navigate('/dashboard')\n    }\n}\n\nuseEffect(() => {\n    getUserInfo()\n  }, [])\n\n      \n    function handleSubmit(event) {\n        try {\n    \n          event.preventDefault();\n    \n          setMessage(\"\")\n          setColorMessage(\"red\")  \n          \n        }\n        catch(err) {\n          console.log(err)\n        }\n    }\n\n/// select / option \n\nuseEffect(() => {\n\n    if(userID == \"\") \n  {\n    getUserInfo()\n  }\n  const url = 'http://localhost:3001/status/getasset_status_users'\n  axios.post(url)\n  .then(res => {\n    const dataResponse = res.data.message;\n    if(dataResponse == \"Record Found\") {\n      setAssetStatus(res.data.result)\n    } else if (dataResponse == \"No Record Found\") {\n      WriteLog(\"Message\",\"AssetPullout\",\"useEffect /assets/getasset_status_users'\",dataResponse,userID)\n      navigate('/500');\n    }\n  }).catch(err => {\n    WriteLog(\"Error\",\"AssetPullout\",\"useEffect /assets/getasset_status_users'\",err.message,userID)\n  })\n},[])\n\n/// EO select / option\n\n\n/// For Dialog Box\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nconst [open, setOpen] = React.useState(false);\nconst [iselected,SetTotalSelected] = useState(0)\n\nconst handleClickOpen = () => {\n  try {\n  \n  let num = 0\n\n    rowselecteddetail.forEach((irow, index) => { \n      num = num + 1;\n    })\n    \n    if(num > 0) {\n      setOpen(true);\n      SetTotalSelected(num)\n    }\n    else\n    {\n      setMessage('No asset selected')\n      setColorMessage('red')\n    }\n\n\n\n}\ncatch(err) {\n  console.log(err)\n}\n};\n\nuseEffect(() => { \n // console.log()\n},[iselected])\n\n\n\n/// For Dialog\nconst handleClose = () => {\n  setOpen(false);\n};\n\nfunction handleViewPullout() {\n  navigate('/configurations/viewpulloutuser')\n}\n\nconst handlePullout = () => {\n  setOpen(true);\ntry {\n      if(userID == \"\") \n  {\n    getUserInfo()\n  }\n\n    rowselecteddetail.forEach((irow, index) => {\n      const detailid = irow\n     \n      const url = 'http://localhost:3001/assets/pulloutasset_selectedbyuser'\n      axios.post(url,{userID,detailid,assetID,notes})\n      .then(response => {\n        const dataResponse = response.data.message;\n        if(dataResponse == \"Update Success\") {\n\n          WriteLog(\"Message\",\"AssetPullout\",\"handlePullout /assets/pulloutasset_selectedbyuser\", \n          \" User advice for pullout \"\n          + \"\\n AssetID: \" + assetID \n          + \"\\n Detail ID  :  \" + detailid \n          + \"\\n Reason for Pullout :  \" + notes\n          + \"\\n User : \" + userID ,userID)\n\n          const writeOnce = window.localStorage.getItem('Kvsf45_')\n          if (writeOnce == \"0\" ) {\n            window.localStorage.setItem('Kvsf45_','1')\n          }\n\n        }\n\n\n        else if (dataResponse == \"Update Error\") {\n          // only capturing the error\n          WriteLog(\"Error\",\"AssetPullout\",\"handlePullout /assets/pulloutasset_selectedbyuser'\",\n          \"AssetID : \" + detailid\n          + \"\\n Detail ID  :  \" + detailid \n          + \"\\n Reason for Pullout :  \" + notes\n          + \"\\n \" + response.data.message2,userID)\n        }\n      }).catch(err => {\n        WriteLog(\"Error\",\"AssetPullout\",\"handlePullout /assets/pulloutasset_selectedbyuser'\",\"Error in then/catch \" + err.message,userID)\n      })\n    })\n\n    /*\n    rowselecteddetail.forEach((nrow, index) => {\n\n      try {\n        if(userID == \"\") \n        {\n        getUserInfo()\n        }\n\n        const detailID = nrow\n        const url = 'http://localhost:3001/assets/asset_bydetail'\n        axios.post(url,{detailID})\n        .then(res => {\n      \n          const dataResponse = res.data.message;\n          \n          if(dataResponse == \"Record Found\") {\n            const varasset = res.data.result[0]['assetID']\n           \n            UpdateMain_Asset(varasset)\n          } \n        }).catch(err => {\n          WriteLog(\"Error\",\"AssetPullout\",\"handlePullout /assets/asset_bydetail'\",\" Error in then/catch(UpdateMain_Asset) \" + err.message,userID)\n        })\n      }catch(err) {\n        WriteLog(\"Error\",\"AssetPullout\",\"handlePullout /assets/asset_bydetail'\",err.message,userID)\n      }\n      \n    })\n    */\n\n    sendEmail()\n\n    setOpen(false);\n}catch(err) {\n  setOpen(false)\n  WriteLog(\"Error\",\"AssetPullout\",\"handlePullout /assets/asset_bydetail'\",\"Error in main try/catch  \" + err.message,userID)\n}\nfinally {\n  sendEmail()\n  navigate('/base/assetbyuser')\n}\n};\n\nfunction UpdateMain_Asset(varassetid) {\n  try {\n           if(userID == \"\") \n        {\n        getUserInfo()\n        }\n    const assetdeploy = assetID\n    const url = 'http://localhost:3001/assets/updateassetdeploy'\n    axios.post(url,{assetdeploy,userID,varassetid})\n    .then(res => {\n      const dataResponse = res.data.message;\n    if (dataResponse == \"Update Error\") {\n      WriteLog(\"Error\",\"AssetPullout\",\"UpdateMain_Asset /assets/updateassetdeploy'\",\" Error in updating \\n \" + \n        \"AssetID : \" + varassetid \n        + \"\\nAssetDeploy : \" + assetdeploy ,res.data.message2,userID)\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"AssetPullout\",\"UpdateMain_Asset /assets/updateassetdeploy'\",err.message,userID)\n    })\n\n  }\n  catch(err) {\n    WriteLog(\"Error\",\"AssetPullout\",\"UpdateMain_Asset /assets/updateassetdeploy'\",\"Error in try/catch \" + err.message,userID)\n  }\n\n}\n\n\n/// EO for Dialog Box\n\n\n\n/// For Data Grid \n\n  const [assets, setAssets] = useState([])\n  const [rowselecteddetail,setRowSelecteddetail] = useState({})\n\n  const columns = [\n    \n    {\n      field: 'assetCode',\n      headerName: 'Code',\n      width: 100,\n      editable: false,\n    },\n    {\n      field: 'assetName',\n      headerName: 'Name',\n      width: 200,\n      editable: false,\n    },\n    {\n      field: 'statusName',\n      headerName: 'Status',\n      width: 130,\n      editable: false,\n    },\n    {\n      field: 'assetCategName',\n      headerName: 'Category',\n      width: 130,\n      editable: false,\n    },\n    {\n      field: 'displayName',\n      headerName: 'Release By',\n      width: 100,\n      editable: false,\n    },\n    {\n      field: 'datecheckin',\n      headerName: 'Date Received',\n      width: 130,\n      editable: false,\n    },\n  ];\n\n\n  useEffect(() => {\n    LoadAsset()\n  },[])\n\n  function LoadAsset()\n  {\n    try {\n        if(userID == \"\") \n        {\n        getUserInfo()\n        }\n      const url = 'http://localhost:3001/assets/viewallassetsassigndeployed_user'\n      axios.post(url,{userID})\n      .then(res => {\n        const dataResponse = res.data.message;\n        if(dataResponse == \"Record Found\") {\n          setAssets(res.data.result)\n        } else if (dataResponse == \"No Record Found\") {\n          //SetSuccess(\"No Assets Deployed\")\n          //navigate('/500');\n        }\n      }).catch(err => {\n        WriteLog(\"Error\",\"AssetPullout\",\"LoadAsset /assets/viewallassetsassigndeployed_user'\",\"Error in then/catch \\n\" + err.message,userID)\n      })\n\n    }\n    catch(err) {\n      WriteLog(\"Error\",\"AssetPullout\",\"LoadAsset /assets/viewallassetsassigndeployed_user'\",\"Error in try/catch \\n\" + err.message,userID)\n    }\n  }\n\n  /////////// End of Datagrid \n\n  useEffect(() => {\n    //console.log(\"\")\n  }, [assetID])\n\n  useEffect(() => {\n   // console.log(\"\")\n  }, [notes])\n\n  function handleInput(e) {\n    try {\n     \n      if (e.target.name == \"assetID\") {\n      \n        setAssetStatID(e.target.value.trim())\n    \n      }else if(e.target.name == \"notes\") {\n        setNotes(e.target.value.trim())\n      }\n\n      setMessage(\"\")\n      setColorMessage(\"red\")  \n      \n    }\n    catch(err) {\n      console.log(err)\n    }\n  }\n\n\n  function sendEmail() {\n\n    let strDate =   utils_getDate();\n    displayname = window.localStorage.getItem('display')\n    const allow_send_email_pullout_asset_by_user = appSettings.ALLOW_SENDEMAIL_PULLOUT_BY_USER\n      \n     const checkin_success = window.localStorage.getItem('Kvsf45_')\n\n\n    try {\n        var templateParams = {\n        email_to: appSettings.ASSET_EMAIL,\n        email_sender: appSettings.email_sender,\n        reply_to : appSettings.reply_to,\n        name: appSettings.ASSET_RECEIVERNAME,\n        notes: notes,\n        date: strDate,\n        user_name: displayname\n    };\n\n    if(checkin_success == \"1\") {\n\n          if(allow_send_email_pullout_asset_by_user == \"send\") {\n\n          emailjs.send(appSettings.USER_SERVICE_ID, appSettings.USER_TEMPLATE_ID, templateParams,appSettings.public_key)\n          .then(function(response) {\n            console.log('SUCCESS!', response.status, response.text);\n          }, function(error) {\n            console.log('FAILED...', error);\n          });\n        }\n        else {\n          \n          WriteUserInfo(\"Info\",\"AssetPullout\",userID,\n          \"Asset Pullout: \"\n          + `\\nNotes : ` + templateParams.notes,userID)\n        }\n    }\n    else \n    {\n      WriteUserInfo(\"Info\",\"AssetPullout\",userID,\n      \"Asset Pullout: \"\n      + `\\nNotes : ` + templateParams.notes,userID)\n    }\n\n  }\n  catch(err) {\n   WriteLog(\"Error\",\"AssetPullout\",\"sendEmail not successful\",\"Error in try/catch \\n\" + err.message,userID)\n  }\n  }\n  \n  return (\n\n    <CCol >\n         <CCard className=\"mb-3\" size=\"sm\"  >\n         <CCardHeader>\n            <h6>\n              \n            <span className=\"message\" style={{ color: '#5da4f5'}}> <> Current Asset(s) </></span>\n            <br></br>\n            <strong><span className=\"message\" style={{ color: colorMessage}}><p>{message}</p></span> </strong>\n            </h6>\n          </CCardHeader>\n          <CForm onSubmit={handleSubmit}>\n            <CRow  >\n                <CCol xs={3} >\n                    <CCardBody> \n                    \n                      <CFormSelect size=\"sm\" className=\"mb-3\" aria-label=\"Small select example\"\n                        name='assetID' onChange={handleInput} >\n                        {\n                            \n                            assetstatus.map((val) => \n                                <option key={val.assetStatusID} value={val.assetStatusID} > {val.statusName} </option>\n                            )\n                        }\n                      </CFormSelect>\n                    <CInputGroup size=\"sm\" className=\"mb-3\" >\n                      <TextField onChange={handleInput} name=\"notes\" id=\"outlined-textarea\" fullWidth label=\"Notes\" placeholder=\"Notes\" multiline  rows={5} />\n                    </CInputGroup>\n                   \n                      <ButtonGroup style={{\n                            \n                            display: 'flex',\n                            alignItems: 'left',\n                            justifyContent: 'left',\n                          \n                            }}>\n                      <CButton onClick={handleClickOpen} style={{ margin:'5px', width: '120%' }}  color=\"success\"> Pullout</CButton>\n                      <CButton onClick={handleViewPullout} style={{  margin:'5px', width: '120%' }} color=\"success\"> View  </CButton>\n                      </ButtonGroup>\n\n                    \n                      <Dialog\n                        open={open}\n                        onClose={handleClose}\n                        PaperComponent={PaperComponent}\n                        aria-labelledby=\"draggable-dialog-title\"\n                      >\n                        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                          Checkout / Pullout Assets\n                        </DialogTitle>\n                        <DialogContent>\n                          <DialogContentText>\n                            Are you sure you want to Pullout  asset(s) ?\n                            <br></br>\n                            Selected : ({ iselected })\n                          </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                          <Button autoFocus onClick={handleClose}>\n                            Cancel\n                          </Button>\n                          <Button onClick={handlePullout}>Pullout</Button>\n                        </DialogActions>\n                      </Dialog>\n                    \n                    </CCardBody>\n                </CCol>\n                <CCol xs={9}>\n                <CCardBody>\n                    <CInputGroup size=\"sm\" className=\"mb-3\">\n                    <div style={{ height: 400, width: '100%' }}>\n\n                      <DataGrid\n                        rows={assets}\n                        columns={columns}\n                        initialState={{\n                          pagination: {\n                            paginationModel: {\n                              pageSize: 5,\n                            },\n                          },\n                        }}\n                        pageSizeOptions={[5]}\n                        checkboxSelection\n                        disableRowSelectionOnClick\n                        onRowSelectionModelChange={id => setRowSelecteddetail(id)}\n                        \n                      />\n\n                    </div>\n                    </CInputGroup>\n                    </CCardBody>\n                </CCol>\n            </CRow>\n          </CForm>\n         </CCard>\n    </CCol>\n  )\n}\n\nexport default AssetPullout\n","// eslint-disable-next-line\nimport  { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport * as React from 'react'\n\n\nimport { DataGrid } from '@mui/x-data-grid';\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\nimport DeleteOutlineTwoToneIcon from '@mui/icons-material/DeleteOutlineTwoTone';\n\nimport defaultAvatarAsset from '../../../assets/images/macbook.png'\n//'../../../assets/images/macbook.png'\n//\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  //CAccordion,\n  //CAccordionBody,\n  //CAccordionHeader,\n  //CAccordionItem,\n  CForm,\n  CButton,\n  //CFormSelect,\n  //CFormInput,\n  //CInputGroupText,\n  CInputGroup,\n  CImage,\n  CFormLabel,\n  //CFormLabel,\n  //CFormFloating,\n  //CLink\n} from '@coreui/react'\n\n\n\nimport {useNavigate} from 'react-router-dom';\n\nimport appSettings from 'src/AppSettings' // read the app config\nimport { decrypt  } from 'n-krypta';\n// encrypt, compare\n//import ValidationAssetRegister from 'src/components/validation/ValidationAssetRegister';\n//import { Icon } from '@mui/material';\n//import { buildTimeValue } from '@testing-library/user-event/dist/types/utils';\nimport WriteLog from 'src/components/logs/LogListener';\nimport { Avatar } from '@mui/material';\n\nconst AssetView = () => {\n\n  const navigate = useNavigate();\n  \n    var userID = \"\"\n    var userRole = \"\"\n\n  const [message,setMessage] = useState(\"\")\n  const [colorMessage,setColorMessage] = useState('red')\n  \n  const [assets,setAssets] = useState([])\n  //const [disposeFound,setdisposeFound] = useState(false)\n  //const [deployFound,setdeployFound] = useState(false)\n\n  function CheckRole() {\n    try {\n\n      userRole = decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal)\n\n    }\n    catch(err) {\n      WriteLog(\"Error\",\"AssetView\",\"CheckRole Local Storage is tampered\", err.message,userID)\n      navigate('/dashboard')\n    }\n  }\n\n\n  function getUserInfo() {\n\n    try {\n      CheckRole()\n        if (userRole == \"Admin\" || userRole == \"IT\")\n          {\n              if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n                userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n              \n              }else{ \n                navigate('/login')\n            }\n          }\n        else {\n          navigate('/dashboard')\n        }\n          \n        }\n    catch(err) {\n      navigate('/dashboard')\n      }\n}\n  useEffect(() => {\n      getUserInfo()\n    }, [])\n\n\n  useEffect(() => {\n      if(userID == \"\") \n  {\n    getUserInfo()\n  }\n\n      try {\n      const url = 'http://localhost:3001/assets/viewallassetsavailable'\n      axios.post(url)\n      .then(res => {\n        const dataResponse = res.data.message;\n        if(dataResponse == \"Record Found\") {\n          setAssets(res.data.result)\n        } \n      }).catch(err => {\n        \n        WriteLog(\"Error\",\"AssetView\",\"checkStatus /assets/viewallassetsavailable\",\"then/catch \\n\" + err.message,userID)\n      })\n    }\n    catch(err) {\n      WriteLog(\"Error\",\"AssetView\",\"checkStatus /assets/viewallassetsavailable\",\"try/catch \\n\" + err.message,userID)\n    }\n  },[])\n\n\nfunction CheckDispose(rowidselected,source) {\n\n  try {\n  if(userID == \"\") \n  {\n    getUserInfo()\n  }\n    const rowId = rowidselected\n  \n      const url = 'http://localhost:3001/dispose/checkassetdispose'\n      axios.post(url,{rowId})\n      .then(res => { \n        const dataResponse = res.data.message \n        \n        if(dataResponse == \"Record Found\"){ \n          setMessage(\"Asset already mark as Dispose\")\n          setColorMessage('red')\n        } else if(dataResponse == \"No Record Found\") {\n            CheckDeploy(rowidselected,source)\n        } \n      })\n      .catch(err => {\n      WriteLog(\"Error\",\"AssetView\",\"CheckDispose /dispose/checkassetdispose\",err.message,userID)\n      navigate('/500');\n      //navigate('/page/Page404')\n      })\n    \n  }\n  catch(err) {\n    WriteLog(\"Error\",\"AssetDispose\",\"handleSubmit\",err,userID)\n  }\n\n  \n}\n\n\nfunction CheckDeploy(rowidselected,source){\n\n \n  try {\n  if(userID == \"\") \n  {\n    getUserInfo()\n  }\n    const rowId = rowidselected\n    const params = rowidselected\n      const url = 'http://localhost:3001/dispose/checkassetdeploy'\n      axios.post(url,{rowId})\n      .then(res => { \n        const dataResponse = res.data.message \n        if(dataResponse == \"Record Found\"){ \n          setMessage(\"Asset still in use\")\n          setColorMessage('red')\n        } else if(dataResponse == \"No Record Found\") {\n            if (source == \"Dispose\") {\n            navigate('/base/assetdispose', {state:{params}})\n            } else if(source == \"For Edit\") {\n              navigate('/base/assetedit', {state:{params}})\n            }\n        } \n      })\n      .catch(err => {\n      WriteLog(\"Error\",\"AssetView\",\"CheckDeploy /dispose/checkassetdeploy\",err.message,userID)\n      //navigate('/500');\n      //navigate('/page/Page404')\n      })\n    \n  }\n  catch(err) {\n    WriteLog(\"Error\",\"AssetDispose\",\"handleSubmit\",err,userID)\n  }\n}\n\n\nfunction handleClick(rowidselected,source) {\n  CheckDispose(rowidselected,source)\n}\n\n\n\n  const columns = React.useMemo(() => [\n    {\n      field: 'idselect',\n      headerName: 'Actions',\n      type: 'actions',\n      disableClickEventBubbling: true,\n      renderCell: (params) => {\n        return (\n            <div>\n            <EditTwoToneIcon cursor=\"pointer\" onClick={()=> handleClick(params.row.id,\"For Edit\")}/>\n            <DeleteOutlineTwoToneIcon cursor=\"pointer\" onClick={()=> handleClick(params.row.id,\"Dispose\")}/>\n            </div>\n        );\n      }\n    },\n    \n    {\n      field: 'pictureFile',\n      headerName: 'Image',\n      width: 30,\n      sortable: false,\n      filterable:false,\n      renderCell: (params) => {\n        return (\n            <div>\n              <Avatar src= {\n                params.row.pictureFile\n                ?\n                  require(`../../../../backend/uploads/${params.row.pictureFile}`)\n                  : defaultAvatarAsset\n              }/>\n            </div>\n        );\n      }\n    },\n    {\n      field: 'statusName',\n      headerName: 'Status',\n      width: 100,\n      editable: false,\n    },\n    {\n      field: 'AssetCode',\n      headerName: 'Asset Code',\n      width: 150,\n      editable: false,\n    },\n    {\n      field: 'assetName',\n      headerName: 'Name',\n      width: 200,\n      editable: false,\n    },\n    {\n      field: 'assetCategName',\n      headerName: 'Category',\n      width: 130,\n      editable: false,\n    },\n    {\n      field: 'assettype',\n      headerName: 'Type',\n      width: 130,\n      editable: false,\n    },\n    \n    \n    {\n      field: 'suppliername',\n      headerName: 'Supplier',\n      width: 200,\n      editable: false,\n    },\n    \n    {\n        field: 'CheckOut',\n        headerName: 'CheckOut',\n        width: 100,\n        editable: false,\n    },\n    {\n        field: 'Checkin',\n        headerName: 'CheckIn',\n        width: 100,\n        editable: false,\n      },\n    {\n      field: 'DeployTo',\n      headerName: 'Deploy To',\n      width: 200,\n      editable: false,\n    },\n    \n  ],[]);\n\n  /////////// End of Datagrid \n\n  //<CCardHeader>\n  //<strong>All Assets <span className=\"message\" style={{ color: colorMessage}}><p>{message}</p></span> </strong>\n  //</CCardHeader>  \n  return (\n\n      <CCol xs={12}>\n        <CCard className=\"mb-3\" size=\"sm\"  >\n\n          <CForm>\n         \n            <CRow >\n                <CCol xs={12}>\n                  <CCardBody>\n                  <h6>\n                    <strong><span className=\"message\" style={{ color: colorMessage}}><p>{message}</p></span> </strong>\n                  </h6>\n                    <CInputGroup size=\"sm\" className=\"mb-3\">\n                            <div style={{ height: 400, width: '100%' }}>\n                                <DataGrid\n                                    rows={assets}\n                                    columns={columns}\n                                    initialState={{\n                                    pagination: {\n                                        paginationModel: {\n                                        pageSize: 5,\n                                        },\n                                    },\n                                    }}\n                                    pageSizeOptions={[5]}\n                                    rowSelection={true}\n                                    getRowId={(row) => row.idselect}\n                                />\n                            </div>\n                    </CInputGroup>\n                  </CCardBody>\n                </CCol>\n            </CRow>\n          </CForm>\n        </CCard>\n      </CCol>\n      \n\n  )\n}\n\nexport default AssetView\n","import  { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport * as React from 'react'\n\nimport { DataGrid } from '@mui/x-data-grid';\n\nimport ReceiptLongRoundedIcon from '@mui/icons-material/ReceiptLongRounded';\nimport {useNavigate} from 'react-router-dom';\n\n\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CRow,\n    CForm,\n    CButton,\n    CInputGroup,\n\n  } from '@coreui/react'\n\n\n\nimport WriteLog from 'src/components/logs/LogListener';\n\nimport appSettings from 'src/AppSettings' // read the app config\nimport { decrypt } from 'n-krypta';\n// encrypt, compare\nconst DepreciatedView = () =>   {\n\n    const navigate = useNavigate();\n    var userID = \"\"\n    var userRole = \"\"\n    const [assetvalue,setAssetValue] = useState([])\n\n    function CheckRole() {\n      try {\n  \n        userRole = decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal)\n  \n      }\n      catch(err) {\n        WriteLog(\"Error\",\"DepreciatedView\",\"CheckRole Local Storage is tampered\", err.message,userID)\n        navigate('/dashboard')\n      }\n    }\n\n\n    function getUserInfo() {\n      try {\n        CheckRole()\n          if (userRole == \"Admin\" || userRole == \"IT\")\n            {\n                if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n                  userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n                \n                }else{ \n                  navigate('/login')\n              }\n            }\n          else {\n            navigate('/dashboard')\n          }\n            \n          }\n      catch(err) {\n        navigate('/dashboard')\n        }\n    }\n\n    useEffect(() => {\n      getUserInfo()\n  \n      }, [])\n\n\n    const columns = React.useMemo(() => [\n      {\n        field: 'id',\n        headerName: 'Actions',\n        type: 'actions',\n        disableClickEventBubbling: true,\n        renderCell: (params) => {\n          return (\n            <div >\n              <ReceiptLongRoundedIcon cursor=\"pointer\" onClick={()=> handleClick(params.row.id)}/>\n            </div>\n\n          );\n        }\n      },\n      {\n        field: 'assetCode',\n        headerName: 'Code',\n        width: 100,\n        editable: false,\n      },\n      {\n        field: 'assetName',\n        headerName: 'Asset Name',\n        width: 130,\n        editable: false,\n      },\n      {\n        field: 'statusName',\n        headerName: 'Status',\n        width: 130,\n        editable: false,\n      },\n        {\n          field: 'assetCategName',\n          headerName: 'Category',\n          width: 130,\n          editable: false,\n        },\n        {\n          field: 'amount',\n          headerName: 'Purchase',\n          width: 100,\n          editable: false,\n        },\n        {\n            field: 'depreciated',\n            headerName: 'Amt Depreciated',\n            width: 100,\n            editable: false,\n        },\n        {\n            field: 'Dfrom',\n            headerName: 'Date Purchase',\n            width: 100,\n            editable: false,\n        },\n        {\n            field: 'Dto',\n            headerName: 'Date Purchase',\n            width: 100,\n            editable: false,\n        },\n        {\n            field: 'RemainingYR',\n            headerName: 'Remaining',\n            width: 100,\n            editable: false,\n        },\n        {\n            field: 'Depreciated',\n            headerName: 'Fully Depreciated',\n            width: 100,\n            editable: false,\n        },\n\n      ],[]);\n\n\nuseEffect(() => {\n    LoadData()\n  },[])\n    \nfunction LoadData(){\n  if(userID == \"\") \n  {\n    getUserInfo()\n  }\n\n  const url = 'http://localhost:3001/depreciated/viewDepreciated'\n  axios.post(url)\n  .then(res => {\n    const dataResponse = res.data.message;\n    if(dataResponse == \"Record Found\") {\n        setAssetValue(res.data.result)\n    }\n\n  }).catch(err => {\n    WriteLog(\"Error\",\"LogView\",\"Load log/viewallLogs\",\"Error in try/catch \" + err.message,userID)\n  })\n}\n\n\n\n  return (\n\n    <CCol xs={12}>\n    <CCard className=\"mb-3\" size=\"sm\"  >\n     \n\n      <CForm >\n        <CRow >\n            <CCol xs={12}>\n              <CCardBody>\n              <div className=\"d-grid\" style={{\n                            \n                            display: 'flex',\n                            alignItems: 'left',\n                            justifyContent: 'left',\n                            }} >\n                  \n                </div>\n                <CInputGroup size=\"sm\" className=\"mb-3\">\n                        <div style={{ height: 400, width: '100%' }}>\n                            <DataGrid\n                                rows={assetvalue}\n                                columns={columns}\n                                initialState={{\n                                pagination: {\n                                    paginationModel: {\n                                    pageSize: 5,\n                                    },\n                                },\n                                }}\n                                pageSizeOptions={[5]}\n                                rowSelection={true}\n                                getRowId={(row) => row.id}\n                                \n                            />\n                        </div>\n                </CInputGroup>\n              \n                \n              </CCardBody>\n            </CCol>\n        </CRow>\n      </CForm>\n    </CCard>\n  </CCol>\n\n                            \n  )\n}\n\nexport default DepreciatedView\n","import  { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport * as React from 'react'\n\nimport { DataGrid } from '@mui/x-data-grid';\nimport defaultUser from 'src/assets/images/avatars/7.jpg'\n\nimport ReceiptLongRoundedIcon from '@mui/icons-material/ReceiptLongRounded';\n\n\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\n\n\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CRow,\n    CForm,\n    CButton,\n    CInputGroup,\n    CNavLink,\n    CFormLabel,\n\n  } from '@coreui/react'\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Paper from '@mui/material/Paper';\nimport Draggable from 'react-draggable';\n\nimport WriteLog from 'src/components/logs/LogListener';\nimport {useNavigate} from 'react-router-dom';\n\nimport appSettings from 'src/AppSettings' // read the app config\nimport { decrypt } from 'n-krypta';\nimport { Typography } from '@mui/material';\nimport userAvatar from \"../../../assets/images/avatars/8.jpg\"\n// encrypt, compare\nconst LogAllInfoView = () => {\n\n    const navigate = useNavigate();\n    var userID = \"\"\n    var userRole = \"\"\n    var departmentID = \"\"\n    //const [success,SetSuccess] = useState(\"\");\n    //const [errors,setErrors] = useState({})\n    const [message,setMessage] = useState(\"\")\n    const [colorMessage,setColorMessage] = useState('red')\n\n    const [log,setLog] = useState([])\n    const [open, setOpen] = React.useState(false);\n    //const [rowselected,SetRowSelected] = useState(\"\")\n\n\n    function CheckRole() {\n      try {\n  \n        userRole = decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal)\n  \n      }\n      catch(err) {\n        WriteLog(\"Error\",\"LogAllInfoView\",\"CheckRole Local Storage is tampered\", err.message,userID)\n        navigate('/dashboard')\n      }\n    }\n\n\nfunction getUserInfo() {\n\ntry {\n    CheckRole()\n      if (userRole == \"Admin\" || userRole == \"IT\")\n        {\n            if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n              userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n              departmentID = decrypt(window.localStorage.getItem('LkgdW23!'), appSettings.secretkeylocal)\n\n            }else{ \n              navigate('/login')\n          }\n        }\n      else {\n        navigate('/dashboard')\n      }\n        \n      }\n  catch(err) {\n    navigate('/dashboard')\n    }\n}\n\n    useEffect(() => {\n      getUserInfo()\n  \n      }, [])\n\n//cursor=\"pointer\" onClick={()=> handleClick(params.row.id)}\n    const columns = React.useMemo(() => [\n      {\n        field: 'id',\n        headerName: 'Detail',\n        type: 'actions',\n        disableClickEventBubbling: true,\n        renderCell: (params) => {\n          return (\n            <div >\n                \n              <ReceiptLongRoundedIcon />\n            </div>\n\n          );\n        }\n      },\n      {\n        field: 'logvalues',\n        headerName: 'Activity',\n        width: 300,\n        editable: false,\n      },\n\n      \n      {\n        field: 'dateatecreated',\n        headerName: 'Date',\n        width: 100,\n        editable: false,\n      },\n\n        \n      ],[]);\n\n\n       function handleClick(params) {\n\n        // console.log(\"This \" + params)\n         navigate('/configurations/log',{state:{params}})\n         \n       }\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function handleSubmit() {\n      LoadData()\n  }\n\nuseEffect(() => {\n    LoadData()\n  },[])\n    \nfunction LoadData(){\n    if(userID == \"\") \n  {\n    getUserInfo()\n  }\n  const url = 'http://localhost:3001/log/viewaAllLogActivityInfo'\n  axios.post(url)\n  .then(res => {\n    const dataResponse = res.data.message;\n    if(dataResponse == \"Record Found\") {\n        setLog(res.data.result)\n    } \n  }).catch(err => {\n    WriteLog(\"Error\",\"LogAllInfoView\",\"LoadData log/viewaAllLogActivityInfo\",\"Error in try/catch \" + err.message,userID)\n  })\n}\n\n\n      /// For Dialog\n  function PaperComponent(props) {\n    return (\n      <Draggable\n        handle=\"#draggable-dialog-title\"\n        cancel={'[class*=\"MuiDialogContent-root\"]'}\n      >\n        <Paper {...props} />\n      </Draggable>\n    );\n  }\n\n\n  return (\n\n\n    <CCol >\n    <CCard >\n      <CCardHeader>\n        <h6>\n        <span className=\"message\" style={{ color: '#5da4f5'}}> <>Department Activity </></span>\n\n        \n        </h6>\n      </CCardHeader>\n      <CCardBody sx={{ overflow: 'auto' }}  >\n         \n            <List style={{height:'150%'}} >\n            \n            { log?.map(val => {\n              return (\n                <ListItem alignItems=\"flex-start\">\n                  <ListItemAvatar>\n                    <Avatar alt='ed' \n                          src={\n                            val.usercreatedImg\n                            ? require(`../../../../backend/uploads/${val.usercreatedImg}`)\n                            \n                            : defaultUser \n                            } \n                          \n                    />\n                  </ListItemAvatar>\n                 \n                  <ListItemText  primary = {val.fname}\n                          secondary={\n                          <React.Fragment>\n                              <Typography\n                              sx={{ display: 'inline' }}\n                              component=\"span\"\n                              variant=\"body2\"\n                              color=\"text.primary\"\n                              >\n                              Good News\n                              </Typography>\n                              {\n                                `\\n` + val.logvalues\n                              }\n                             {/* \n                             \" — You have asset(s) to be pickup on schedule date ( write date here )\n                             <CNavLink href='#/base/assetuserassign'>... click here </CNavLink>\n                              <Divider variant=\"inset\" component=\"li\" />\n                             */}\n                          </React.Fragment>\n                          }\n                  />\n                </ListItem>\n            ) \n            \n            })\n            \n            }\n  \n            </List>\n   \n        \n            </CCardBody>\n\n    </CCard>\n    </CCol>\n\n\n                            \n  )\n}\n\nexport default LogAllInfoView\n","import  { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport * as React from 'react'\n\nimport { DataGrid } from '@mui/x-data-grid';\nimport defaultUser from 'src/assets/images/avatars/7.jpg'\n\nimport ReceiptLongRoundedIcon from '@mui/icons-material/ReceiptLongRounded';\n\n\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\n\n\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CRow,\n    CForm,\n    CButton,\n    CInputGroup,\n    CNavLink,\n    CFormLabel,\n\n  } from '@coreui/react'\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Paper from '@mui/material/Paper';\nimport Draggable from 'react-draggable';\n\nimport WriteLog from 'src/components/logs/LogListener';\nimport {useNavigate} from 'react-router-dom';\n\nimport appSettings from 'src/AppSettings' // read the app config\nimport { decrypt } from 'n-krypta';\nimport { Typography } from '@mui/material';\nimport userAvatar from \"../../../assets/images/avatars/8.jpg\"\n// encrypt, compare\nconst LogUserInfoView = () => {\n\n    const navigate = useNavigate();\n    var userID = \"\"\n    var userRole = \"\"\n    var departmentID = \"\"\n    //const [success,SetSuccess] = useState(\"\");\n    //const [errors,setErrors] = useState({})\n    const [message,setMessage] = useState(\"\")\n    const [colorMessage,setColorMessage] = useState('red')\n\n    const [log,setLog] = useState([])\n    const [open, setOpen] = React.useState(false);\n    //const [rowselected,SetRowSelected] = useState(\"\")\n\n    function CheckRole() {\n      try {\n  \n        userRole = decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal)\n  \n      }\n      catch(err) {\n        WriteLog(\"Error\",\"LogUserInfoView\",\"CheckRole Local Storage is tampered\", err.message,userID)\n        navigate('/dashboard')\n      }\n    }\n\n \n\nfunction getUserInfo() {\n\n  try {\n    CheckRole()\n      //if (userRole == \"Admin\" || userRole == \"IT\")\n      //  {\n            if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n              userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n              departmentID = decrypt(window.localStorage.getItem('LkgdW23!'), appSettings.secretkeylocal)\n  \n            }else{ \n              navigate('/login')\n          }\n    //    }\n    //  else {\n    //    navigate('/dashboard')\n   //   }\n        \n      }\n  catch(err) {\n    navigate('/dashboard')\n    }\n}\n\n    useEffect(() => {\n      getUserInfo()\n  \n      }, [])\n\n//cursor=\"pointer\" onClick={()=> handleClick(params.row.id)}\n    const columns = React.useMemo(() => [\n      {\n        field: 'id',\n        headerName: 'Detail',\n        type: 'actions',\n        disableClickEventBubbling: true,\n        renderCell: (params) => {\n          return (\n            <div >\n                \n              <ReceiptLongRoundedIcon />\n            </div>\n\n          );\n        }\n      },\n      {\n        field: 'logvalues',\n        headerName: 'Activity',\n        width: 300,\n        editable: false,\n      },\n\n      \n      {\n        field: 'dateatecreated',\n        headerName: 'Date',\n        width: 100,\n        editable: false,\n      },\n\n        \n      ],[]);\n\n\n       function handleClick(params) {\n\n        // console.log(\"This \" + params)\n         navigate('/configurations/log',{state:{params}})\n         \n       }\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function handleSubmit() {\n      LoadData()\n  }\n\nuseEffect(() => {\n    LoadData()\n  },[])\n    \nfunction LoadData(){\n    if(userID == \"\") \n  {\n    getUserInfo()\n  }\n  const url = 'http://localhost:3001/log/viewaLogUserInfo'\n  axios.post(url,{departmentID})\n  .then(res => {\n    const dataResponse = res.data.message;\n    if(dataResponse == \"Record Found\") {\n        setLog(res.data.result)\n    } \n  }).catch(err => {\n    WriteLog(\"Error\",\"LogView\",\"Load log/viewallLogs\",\"Error in try/catch \" + err.message,userID)\n  })\n}\n\n\n      /// For Dialog\n  function PaperComponent(props) {\n    return (\n      <Draggable\n        handle=\"#draggable-dialog-title\"\n        cancel={'[class*=\"MuiDialogContent-root\"]'}\n      >\n        <Paper {...props} />\n      </Draggable>\n    );\n  }\n\n\n  return (\n\n\n    <CCol >\n    <CCard >\n      <CCardHeader>\n        <h6>\n        <span className=\"message\" style={{ color: '#5da4f5'}}> <>Department Activity </></span>\n\n        \n        </h6>\n      </CCardHeader>\n      <CCardBody sx={{ overflow: 'auto' }}  >\n         \n            <List style={{height:'150%'}} >\n            \n            { log?.map(val => {\n              return (\n                <ListItem alignItems=\"flex-start\">\n                  <ListItemAvatar>\n                    <Avatar alt='ed' \n                          src={\n                            val.receiverName\n                            ? require(`../../../../backend/uploads/${val.usercreatedImg}`)\n                            \n                            : defaultUser \n                            } \n                          \n                    />\n                  </ListItemAvatar>\n                 \n                  <ListItemText  primary =   {val.receiverName}\n                          secondary={\n                          <React.Fragment>\n                              <Typography\n                              sx={{ display: 'inline' }}\n                              component=\"span\"\n                              variant=\"body2\"\n                              color=\"text.primary\"\n                              >\n                              See Info Below\n                              <br></br>\n                              </Typography>\n                              {\n                                 val.logvalues\n                              }\n                             {/* \n                             \" — You have asset(s) to be pickup on schedule date ( write date here )\n                             <CNavLink href='#/base/assetuserassign'>... click here </CNavLink>\n                              <Divider variant=\"inset\" component=\"li\" />\n                             */}\n                          </React.Fragment>\n                          }\n                  />\n                </ListItem>\n            ) \n            \n            })\n            \n            }\n  \n            </List>\n   \n        \n            </CCardBody>\n\n    </CCard>\n    </CCol>\n\n\n                            \n  )\n}\n\nexport default LogUserInfoView\n","import  { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport * as React from 'react'\n\nimport { DataGrid } from '@mui/x-data-grid';\n\nimport ReceiptLongRoundedIcon from '@mui/icons-material/ReceiptLongRounded';\nimport {useNavigate} from 'react-router-dom';\n\n\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CRow,\n    CForm,\n    CButton,\n    CInputGroup,\n\n  } from '@coreui/react'\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Paper from '@mui/material/Paper';\nimport Draggable from 'react-draggable';\n\nimport WriteLog from 'src/components/logs/LogListener';\n\nimport appSettings from 'src/AppSettings' // read the app config\nimport { decrypt } from 'n-krypta';\n// encrypt, compare\nconst LogView = () => {\n\n    const navigate = useNavigate();\n    var userID = \"\"\n    var userRole = \"\"\n\n\n    const [log,setLog] = useState([])\n    const [open, setOpen] = React.useState(false);\n    //const [rowselected,SetRowSelected] = useState(\"\")\n\n    function CheckRole() {\n      try {\n  \n        userRole = decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal)\n  \n      }\n      catch(err) {\n        WriteLog(\"Error\",\"LogView\",\"CheckRole Local Storage is tampered\", err.message,userID)\n        navigate('/dashboard')\n      }\n    }\n\n    function getUserInfo() {\n\n      try {\n        CheckRole()\n          if (userRole == \"Admin\" || userRole == \"IT\")\n            {\n                if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n                  userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n                \n                }else{ \n                  navigate('/login')\n              }\n            }\n          else {\n            navigate('/dashboard')\n          }\n            \n          }\n      catch(err) {\n        navigate('/dashboard')\n        }\n    \n    }\n\n    useEffect(() => {\n      getUserInfo()\n  \n      }, [])\n\n\n    const columns = React.useMemo(() => [\n      {\n        field: 'id',\n        headerName: 'Actions',\n        type: 'actions',\n        disableClickEventBubbling: true,\n        renderCell: (params) => {\n          return (\n            <div >\n              <ReceiptLongRoundedIcon cursor=\"pointer\" onClick={()=> handleClick(params.row.id)}/>\n            </div>\n\n          );\n        }\n      },\n      {\n        field: 'displayName',\n        headerName: 'User',\n        width: 100,\n        editable: false,\n      },\n      {\n        field: 'dateatecreated',\n        headerName: 'Date',\n        width: 100,\n        editable: false,\n      },\n      {\n        field: 'logtype',\n        headerName: 'Type',\n        width: 100,\n        editable: false,\n      },\n        {\n          field: 'module',\n          headerName: 'Module',\n          width: 150,\n          editable: false,\n        },\n        {\n          field: 'logfunction',\n          headerName: 'Function',\n          width: 400,\n          editable: false,\n        },\n\n      ],[]);\n\n\n       function handleClick(params) {\n\n        // console.log(\"This \" + params)\n         navigate('/configurations/log',{state:{params}})\n         \n       }\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function handleSubmit() {\n      LoadData()\n  }\n\nuseEffect(() => {\n    LoadData()\n  },[])\n    \nfunction LoadData(){\n  if(userID == \"\") \n  {\n    getUserInfo()\n  }\n\n  const url = 'http://localhost:3001/log/viewallLogs'\n  axios.post(url)\n  .then(res => {\n    const dataResponse = res.data.message;\n    if(dataResponse == \"Record Found\") {\n        setLog(res.data.result)\n    }\n\n  }).catch(err => {\n    WriteLog(\"Error\",\"LogView\",\"Load log/viewallLogs\",\"Error in try/catch \" + err.message,userID)\n  })\n}\n\n\n      /// For Dialog\n  function PaperComponent(props) {\n    return (\n      <Draggable\n        handle=\"#draggable-dialog-title\"\n        cancel={'[class*=\"MuiDialogContent-root\"]'}\n      >\n        <Paper {...props} />\n      </Draggable>\n    );\n  }\n\n\n  return (\n\n    <CCol xs={12}>\n    <CCard className=\"mb-3\" size=\"sm\"  >\n     \n\n      <CForm >\n        <CRow >\n            <CCol xs={12}>\n              <CCardBody>\n              <div className=\"d-grid\" style={{\n                            \n                            display: 'flex',\n                            alignItems: 'left',\n                            justifyContent: 'left',\n                            }} >\n                  <CButton style={{   width: '150%' }} onClick={handleSubmit} color=\"success\" type='submit'>Refresh</CButton>\n                </div>\n                <CInputGroup size=\"sm\" className=\"mb-3\">\n                        <div style={{ height: 400, width: '100%' }}>\n                            <DataGrid\n                                rows={log}\n                                columns={columns}\n                                initialState={{\n                                pagination: {\n                                    paginationModel: {\n                                    pageSize: 5,\n                                    },\n                                },\n                                }}\n                                pageSizeOptions={[5]}\n                                rowSelection={true}\n                                getRowId={(row) => row.id}\n                                \n                            />\n                        </div>\n                </CInputGroup>\n                <div className=\"d-grid\">\n                      <Dialog\n                        open={open}\n                        onClose={handleClose}\n                        PaperComponent={PaperComponent}\n                        aria-labelledby=\"draggable-dialog-title\"\n                      >\n                        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                          Position\n                        </DialogTitle>\n                        <DialogContent>\n                          <DialogContentText>\n                            Are you sure you want to Delete ?\n                          </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                          <Button autoFocus onClick={handleClose}>\n                            No\n                          </Button>\n                          <Button>Yes</Button>\n                        </DialogActions>\n                      </Dialog>\n                </div>\n                \n              </CCardBody>\n            </CCol>\n        </CRow>\n      </CForm>\n    </CCard>\n  </CCol>\n\n                            \n  )\n}\n\nexport default LogView\n","\nimport * as React from 'react'\nimport axios from 'axios'\nimport  { useEffect, useState } from 'react'\n\n\n\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n  //CButton,\n  CCardBody,\n} from '@coreui/react'\n\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\n\n\nimport appSettings from 'src/AppSettings' // read the app config\nimport {  decrypt } from 'n-krypta';\n// encrypt, compare\nimport WriteLog from 'src/components/logs/LogListener';\n\nimport {useNavigate} from 'react-router-dom';\n\nconst WidgetsDropdownUser = () => {\n\n  const navigate = useNavigate();\n\n  const [message,setMessage] = useState(\"\")\n  const [colorMessage,setColorMessage] = useState('red')\n  var  userID = \"\"\n  var departmentID = \"\"\n\n  const [assets,setTotalAssets] = useState({\n    totalassets: \"\"\n  })\n\n  const [totalDepartment,setTotalDepartment] = useState({\n    totaldepartment: \"\"\n  })\n\n  const [statavailable,setStatAvailable] = useState({\n    available: \"\"\n  })\n\n  const [assetsperCategory,setAssetsperCategoory] = useState([])\n  const [department,setDepartment] = useState([])\n  const [status,setStatus] = useState([])\n  \n  \n  useEffect(() => {\n    try {\n     \n      if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n        userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n        departmentID = decrypt(window.localStorage.getItem('LkgdW23!'), appSettings.secretkeylocal)\n      }\n      \n      }catch(err) {\n        \n        navigate('/login')\n      }\n\n    }, [])\n\n  useEffect(() => {\n  \n  LoadAssetsbyUser()\n  LoadAssetsperCategory()\n  LoadCountDepartment_ByUser()\n  LoadTotalCountDepartment_ByUser()\n  LoadCountStatusDepartment_ByUser()\n  LoadTotalCountStatusDepartment_ByUser()\n /*\n  LoadStatus()\n  LoadStatAvailable()\n  LoadPullout()\n  LoadCountPullout()\n  */\n  }, [])\n\n\n \n  function LoadAssetsbyUser(){\n\n\n    const url = 'http://localhost:3001/assets/getCountassets_byUser'\n     axios.post(url,{userID})\n\n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setTotalAssets({...assets,\n          totalassets: res.data.result[0].totalAssets})\n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDownUser\",\"LoadAssetsbyUser /assets/getCountassets\",res.data.message,userID)\n        setTotalAssets({...assets,\n          totalassets: \"0\"})\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDownUser\",\"LoadAssetsbyUser /assets/getCountassets\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadAssetsperCategory(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/assets/getCountassetsper_category_ByUser'\n     axios.post(url,{userID})\n \n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setAssetsperCategoory(res.data.result)\n        \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadAssetsperCategory /assets/getCountassetsper_category\",res.data.message,userID)\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadAssetsperCategory /assets/getCountassetsper_category\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadCountDepartment_ByUser(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/assets/viewallassetsCountPerDepartment_By_User'\n     axios.post(url)\n \n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setDepartment(res.data.result)\n        \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDownUser\",\"LoadCountperDepartment /assets/viewallassetsCountPerDepartment\",res.data.message,userID)\n        //setTotalAssets()\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDownUser\",\"LoadCountperDepartment /assets/viewallassetsCountPerDepartment\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n\n  function LoadTotalCountDepartment_ByUser() {\n    setMessage(\"\")\n    const url = 'http://localhost:3001/assets/viewallassetsToatalPerDepartment_By_User'\n     axios.post(url,{departmentID})\n\n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setTotalDepartment({...totalDepartment,\n          totaldepartment: res.data.result[0].totalDepartment})\n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDownUser\",\"LoadTotalCountDepartment_ByUser /assets/viewallassetsToatalPerDepartment_By_User\",res.data.message,userID)\n        setTotalAssets({...totalDepartment,\n          totaldepartment: \"0\"})\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDownUser\",\"LoadTotalCountDepartment_ByUser /assets/viewallassetsToatalPerDepartment_By_User\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadCountStatusDepartment_ByUser(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/status/getStatusbyAssetDepartment_ByUser'\n     axios.post(url,{departmentID})\n \n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setStatus(res.data.result)\n        \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDownUser\",\"LoadStatusDepartment_ByUser /status/getStatusbyAssetDepartment_ByUser\",res.data.message,userID)\n        //setTotalAssets()\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDownUser\",\"LoadStatusDepartment_ByUser /status/getStatusbyAssetDepartment_ByUser\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadTotalCountStatusDepartment_ByUser(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/status/getStatusAvailable'\n     axios.post(url)\n \n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setStatAvailable({...statavailable,\n          available: res.data.result[0].statavailalble})\n        \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadAvailable /status/getStatusAvailable\",res.data.message,userID)\n        //setTotalAssets()\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadAvailable /status/getStatusAvailable\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n  \n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n\n        <CCardBody>\n\n        </CCardBody>\n\n        <CWidgetStatsA id='a'\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n            {(assets.totalassets)}\n              </>\n          }\n          title=\"Assigned Asset(s)\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem href=\"#/base/assetuserassign\"> CheckIn</CDropdownItem>\n                <CDropdownItem href=\"#/base/assetpullout\">Pullout</CDropdownItem>\n                \n                \n              </CDropdownMenu>\n            </CDropdown>\n          }\n        \n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n\n               labels: assetsperCategory?.map((categ) => categ.assetCategName),\n                datasets: [\n                  {\n                    label: 'Total',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,221,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: assetsperCategory?.map((categ) => categ.countAsset),\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 200,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n\n          \n        />\n\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA id='department'\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n            {(totalDepartment.totaldepartment)}\n              </>\n          }\n          title=\"Department Asset(s)\"\n          /* action={\n           <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown> \n          }*/\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: department?.map((dept) => dept.departmentName),\n                datasets: [\n                  {\n                    label: 'Total',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: department?.map((dept) => dept.countDept),\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={5} lg={3}>\n        <CWidgetStatsA id='status'\n          className=\"mb-4\"\n          color=\"warning\"\n          value= \n\n            {(statavailable.available)\n         \n          }\n          title=\"Department Status\"\n         /*  action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          } */\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels:  status?.map((stat) => stat.statusName),\n                datasets: [\n                  {\n                    label: 'Total',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data:  status?.map((stat) => stat.countStatus), \n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n         \n        />\n        \n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA id='a'\n          className=\"mb-4\"\n          color=\"danger\"\n          value= \n\n          {(statavailable.available)\n       \n        }\n          title=\"Department Pullout History\"\n          /*\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n              <CDropdownItem  href=\"#/configurations/viewpullout\"> Receive Pullout</CDropdownItem> \n              </CDropdownMenu>\n            </CDropdown> \n          } */\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels:  status?.map((stat) => stat.statusName),\n                datasets: [\n                  {\n                    label: 'Total',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: status?.map((stat) => stat.countStatus), \n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdownUser\n","/* eslint-disable react/prop-types  */\nimport React, { useState ,useEffect} from 'react'\nimport randomColor from \"randomcolor\";\n//useContext, , \n//import { Link } from 'react-router-dom'\nimport {useNavigate} from 'react-router-dom'\n\nimport axios from 'axios'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CCardGroup,\n  CFormLabel,\n // CTable,\n // CTableBody,\n//  CTableDataCell,\n // CTableHead,\n//  CTableHeaderCell,\n//  CTableRow,\n} from '@coreui/react'\n\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport { CChartBar, CChartLine,  CChartPie,CChartDoughnut } from '@coreui/react-chartjs'\nimport TextField from '@mui/material/TextField';\n\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  //cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\n\nimport WidgetsBrand from '../widgets/WidgetsBrand'\n//'../../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport WidgetsDropdownUser from 'src/views/widgets/WidgetsDropdownUser';\nimport AssetView from '../base/assetview/AssetView'\nimport DepreciatedView from '../configurations/depreciatedview/DepreciatedView';\n\n//import  {Context} from 'src/components/Store'\n//import CryptoJS from \"crypto-js\";\nimport {  decrypt } from 'n-krypta';\n//encrypt, , compare\nimport appSettings from 'src/AppSettings' // read the app config\nimport LogView from '../configurations/logview/LogView'\n\nimport WriteLog from 'src/components/logs/LogListener';\n\n////// For User ////\n\nimport AssetByUser from '../base/assetbyuser/AssetByUser';\nimport AssetPullout from '../base/assetpullout/AssetPullout';\nimport LogUserInfoView from '../configurations/loguserinfoview/LogUserInfoView';\nimport LogAllInfoView from '../configurations/logallinfoview/LogAllInfoView';\n//// End for User\n\nconst Dashboard = () => {\n\n  var userID = \"\"\n  var userRole = \"\"\n  const [userRoles,setUserRole] = useState(\"\")\n  const [displayName,setDisplayName] = useState(\"\");\n\n\n  const [supplierasset,setSupplierAsset] = useState([])\n  const [disposeasset,setDisposeAsset] = useState([])\n  const [deptasset,setDeptAsset] = useState([])\n  const [assetdispose,setAssetDispose] = useState([])\n  const [checkinpullout,setCheckInPullOut] = useState([])\n  \n\n  const navigate = useNavigate();\n\n  function getUserInfo() {\n\n    try { \n\n    try {\n    let id = \"\";\n    let display = \"\";\n   \n\n      if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n        //setID(window.localStorage.getItem('id'));\n        display = window.localStorage.getItem('display');\n        userRole = decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal)\n        setUserRole(userRole)\n        userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n        setDisplayName(display);\n\n      }\n      else\n      { \n        navigate('/login')\n      }\n    }\n    catch {\n      navigate('/login')\n    }\n  }\n  catch(err) {\n    navigate('/login')\n  }\n  }\n\n  useEffect(() => {\n\n    getUserInfo()\n\n  },[]);\n\n  useEffect(() => {\n\n    LoadDisposeAssetValue()\n    LoadSupplierAssetValue()\n    LoadDeptCountAsset()\n    LoadAssetDisposeAmount()\n    LoadCount_CheckInPullout()\n  }, [])\n\n  //useEffect(() => {\n    //console.lo\n // }, [assetdispose])\n\n  function LoadSupplierAssetValue(){\n\n    getUserInfo() \n\n   try {\n    const url = 'http://localhost:3001/supplier/getSupplierAssetsValue'\n     axios.post(url)\n\n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setSupplierAsset(res.data.result)\n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"DashBoard\",\"LoadSupplierAssetValue /supplier/getSupplierAssetsValue\",res.data.message,userID)\n\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"DashBoard\",\"LoadSupplierAssetValue /supplier/getSupplierAssetsValue\",\"Error in then/catch \\n\" + err.message,userID)\n      \n    })\n  }\n  catch(err) {\n    WriteLog(\"Error\",\"DashBoard\",\"LoadSupplierAssetValue /supplier/getSupplierAssetsValue\",\"Error in try/catch \\n\" + err.message,userID)\n    \n  }\n  }\n\n  function LoadDisposeAssetValue(){\n\n    \n    getUserInfo() \n    \n      try {\n      const url = 'http://localhost:3001/dispose/getAssetDisposeAmount'\n        axios.post(url)\n      .then(response => {\n        const dataResponse = response.data.message;\n        if(dataResponse == \"Record Found\") {\n          setDisposeAsset(response.data.result)\n          //setSupplierAsset(res.data.result)\n        } else if (dataResponse == \"No Record Found\") {\n          WriteLog(\"Error\",\"DashBoard\",\"LoadDisposeAssetValue /dispose/getAssetDisposeAmount\",response.data.message2,userID)\n  \n          //navigate('/500');\n        }\n      }).catch(err => {\n        WriteLog(\"Error\",\"DashBoard\",\"LoadDisposeAssetValue /dispose/getAssetDisposeAmount\",\"Error in then/catch \\n\" + err.message,userID)\n        console.log(\"Error catch\" + err.message)\n        })\n    }\n    catch(err) {\n      WriteLog(\"Error\",\"DashBoard\",\"LoadDisposeAssetValue /supplier/getAssetDisposeAmount\",\"Error in try/catch \\n\" + err.message,userID)\n      console.log(\"Error try \" + err.message)\n      }\n   }\n\n   function LoadDeptCountAsset(){\n\n    \n    getUserInfo() \n    \n    try {\n    const url = 'http://localhost:3001/department/getCountAsset_by_Department'\n      axios.post(url)\n    .then(response => {\n      const dataResponse = response.data.message;\n      if(dataResponse == \"Record Found\") {\n        setDeptAsset(response.data.result)\n        //setSupplierAsset(res.data.result)\n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"DashBoard\",\"LoadDeptCountAsset /department/getCountAsset_by_Department\",response.data.message2,userID)\n\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"DashBoard\",\"LoadDeptCountAsset /department/getCountAsset_by_Department\",\"Error in then/catch \\n\" + err.message,userID)\n      \n      })\n  }\n  catch(err) {\n    WriteLog(\"Error\",\"DashBoard\",\"LoadDeptCountAsset /department/getCountAsset_by_Department\",\"Error in try/catch \\n\" + err.message,userID)\n   \n    }\n }\n\n function LoadAssetDisposeAmount(){\n\n  \n  getUserInfo() \n    \n  try {\n  const url = 'http://localhost:3001/dispose/getAssetDisposeAmount'\n    axios.post(url)\n  .then(response => {\n    const dataResponse = response.data.message;\n    if(dataResponse == \"Record Found\") {\n      setAssetDispose(response.data.result[0])\n    } else if (dataResponse == \"No Record Found\") {\n      WriteLog(\"Error\",\"DashBoard\",\"LoadAssetDispose /dispose/getAssetDisposeAmount\",response.data.message2,userID)\n\n      //navigate('/500');\n    }\n  }).catch(err => {\n    WriteLog(\"Error\",\"DashBoard\",\"LoadAssetDispose /dispose/getAssetDisposeAmount\",\"Error in then/catch \\n\" + err.message,userID)\n  \n    })\n}\ncatch(err) {\n  WriteLog(\"Error\",\"DashBoard\",\"LoadAssetDispose /dispose/getAssetDisposeAmount\",\"Error in try/catch \\n\" + err.message,userID)\n  \n  }\n}\n\nfunction LoadCount_CheckInPullout(){\n\n  getUserInfo()\n\n  try {\n    const url = 'http://localhost:3001/CheckInPullOut/Count_CheckInPullOut'\n    axios.post(url)\n  .then(response => {\n    const dataResponse = response.data.message;\n    if(dataResponse == \"Record Found\") {\n      setCheckInPullOut(response.data.result[0])\n    } else if (dataResponse == \"No Record Found\") {\n      WriteLog(\"Error\",\"DashBoard\",\"LoadAssetDispose /CheckInPullOut/Count_CheckInPullOut\",response.data.message2,userID)\n\n      //navigate('/500');\n    }\n  }).catch(err => {\n    WriteLog(\"Error\",\"DashBoard\",\"LoadAssetDispose /CheckInPullOut/Count_CheckInPullOut\",\"Error in then/catch \\n\" + err.message,userID)\n   \n    })\n}\ncatch(err) {\n  WriteLog(\"Error\",\"DashBoard\",\"LoadAssetDispose /dispose/getAssetDisposeAmount\",\"Error in try/catch \\n\" + err.message,userID)\n \n  }\n}\n\n \n  return (\n\n\n    <div>\n      {(() => {\n        if (userRoles == \"Admin\"  ) {\n          return (\n            <>\n            <WidgetsDropdown/>\n\n          <CRow>\n            <CCol>\n              <CCard className=\"card-title mb-0\">\n                <CCardHeader>\n                  <h6>\n                  <span className=\"message\" style={{ color: '#5da4f5'}}> <> Assets </></span> \n                    {' & '}  \n                  <span className=\"message\" style={{ color: '#5da4f5'}}> <> Activity </></span> \n                  </h6>\n                </CCardHeader>\n                <CCardBody>\n                  <CRow>\n                    <CCol xs={9} md={6} xl={8}>\n                      <AssetView/>\n                    </CCol>\n\n                    <CCol xs={4} md={6} xl={4}>\n\n                    <LogAllInfoView/>\n                    \n                    \n\n                    </CCol>\n                  </CRow>\n                \n\n                  \n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n\n          <br></br>\n          {/* \n          Assets Depreciation Monitoring\n          */ }\n          <CRow>\n            <CCol>  \n            <CCard>\n              <CCardHeader>\n                <h6>\n                <span className=\"message\" style={{ color: '#5da4f5'}}> <> Assets Depreciation Monitoring </></span> \n                </h6>\n              </CCardHeader>\n                <CCardBody> \n                  <DepreciatedView/>\n                </CCardBody>\n            </CCard>\n            </CCol>\n            \n          </CRow>\n          \n          <br></br>\n{/* \n  Card Log Error\n*/ }\n          <CRow>\n            <CCol>\n            <CCard>\n                <CCardHeader>\n                  <h6>\n                  <span className=\"message\" style={{ color: '#5da4f5'}}> <> Log Error </></span> \n                  </h6>\n                </CCardHeader>\n                <CCardBody>\n                  <CCol>\n                    <LogView />\n                  </CCol>\n                </CCardBody>\n            </CCard>\n            </CCol>\n          </CRow>\n\n            <br></br>\n\n{/* \n  Supplier and Assets Deployed by Department\n*/ }\n\n            <CRow>\n              <CCol xs={6}>\n                <CCard className=\"mb-4\">\n                  <CCardHeader>\n                    <h6>\n                    <span className=\"message\" style={{ color: '#5da4f5'}}> <>Supplier</> </span> \n                    </h6>\n                  </CCardHeader>\n                  <CCardBody>\n                    <CChartBar\n                      data={{\n                        labels: supplierasset?.map((supplier) => supplier.name),\n                        datasets: [\n                          {\n                            label: 'Asset Value',\n                            backgroundColor: supplierasset?.map((supplier) => randomColor()),\n                            //'#f87979',\n                            data: supplierasset?.map((supplier) => supplier.assetvalue),\n                          },\n                        ],\n                      }}\n                      labels=\"months\"\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n              <CCol xs={6}>\n                <CCard className=\"mb-4\">\n                  <CCardHeader>\n                    <h6>\n                      <span className=\"message\" style={{ color: '#5da4f5'}}> <> Assets Deployed by Department</></span> \n                    </h6>\n                  </CCardHeader>\n                  \n                  <CCardBody>\n                    <CChartBar\n                        data={{\n                          labels: deptasset?.map((dept) => dept.name),\n\n                          datasets: [\n                            {\n                              label: 'Asset Value',\n                              backgroundColor: deptasset?.map((dept) => randomColor()),\n                              //'#f87979',\n                              data: deptasset?.map((dept) => dept.assetcount_department),\n                            },\n                          ],\n                        }}\n                        labels=\"months\"\n                      />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n\n{/* \n  Checkin - checkout - pullout\n*/ }\n            <CRow>\n              <CAccordion flush={false}>\n                        <CAccordionItem itemKey={1}>\n                          <CAccordionHeader>\n                          <span className=\"message\" style={{ color: 'green'}}> <> Check In</></span> \n                          -\n                          <span className=\"message\" style={{ color: '#ed8b13'}}>  <> Checkout </> </span>\n                          -\n                          <span className=\"message\" style={{ color: 'red'}}>  <> Pullout </> </span>\n                          </CAccordionHeader>\n                          <CAccordionBody>\n                              <CRow>\n                              \n                                  <div className=\"small text-medium-emphasis\">January - December</div>\n                                  <div className=\"small text-medium-emphasis\">Every Year</div>\n\n                              </CRow>\n                              <CCol>\n                                  <CChartLine\n                                    style={{ height: '300px', marginTop: '40px' }}\n                                    data={{\n                                      labels: checkinpullout?.map((checkinpullout) => checkinpullout.MonthName),\n                                      datasets: [\n                                        {\n                                          label: 'Received by User',\n                                          backgroundColor: hexToRgba(getStyle('--cui-success'), 10),\n                                          borderColor: getStyle('--cui-success'),\n                                          pointHoverBackgroundColor: getStyle('--cui-success'),\n                                          borderWidth: 2,\n                                          data: checkinpullout?.map((checkinpullout) => checkinpullout.CheckInCount),\n                                          fill: true,\n                                        },\n                                        {\n                                          label: 'PullOut by User',\n                                          backgroundColor: 'transparent',\n                                          borderColor: getStyle('--cui-warning'),\n                                          pointHoverBackgroundColor: getStyle('--cui-warning'),\n                                          borderWidth: 2,\n                                          data: checkinpullout?.map((checkinpullout) => checkinpullout.PullOutCount),\n                                        },\n                                        {\n                                          label: 'Dispose By IT',\n                                          backgroundColor: 'transparent',\n                                          borderColor: getStyle('--cui-danger'),\n                                          pointHoverBackgroundColor: getStyle('--cui-danger'),\n                                          borderWidth: 2,\n                                          data: checkinpullout?.map((checkinpullout) => checkinpullout.Dispose),\n                                        },\n                                      ],\n                                    }}\n                                    options={{\n                                      maintainAspectRatio: false,\n                                      plugins: {\n                                        legend: {\n                                          display: false,\n                                        },\n                                      },\n                                      scales: {\n                                        x: {\n                                          grid: {\n                                            drawOnChartArea: false,\n                                          },\n                                        },\n                                        y: {\n                                          ticks: {\n                                            beginAtZero: true,\n                                            maxTicksLimit: 5,\n                                            stepSize: Math.ceil(250 / 5),\n                                            max: 250,\n                                          },\n                                        },\n                                      },\n                                      elements: {\n                                        line: {\n                                          tension: 0.4,\n                                        },\n                                        point: {\n                                          radius: 0,\n                                          hitRadius: 10,\n                                          hoverRadius: 4,\n                                          hoverBorderWidth: 3,\n                                        },\n                                      },\n                                    }}\n                                  />\n                              </CCol>\n                    \n\n                          </CAccordionBody>\n                        </CAccordionItem>\n\n              </CAccordion>\n            </CRow>\n\n{/* \n  See Other Reports\n*/ }\n\n            <CRow>\n              <CAccordion flush={false}>\n                        <CAccordionItem itemKey={1}>\n                          <CAccordionHeader>\n                          <h6>\n                          <span className=\"message\" style={{ color: '#5da4f5'}}> <> See Other Reports</></span> \n                          </h6>\n                          </CAccordionHeader>\n                          <CAccordionBody>\n                              <CRow>\n                              <CCol xs={3}>\n                                  <CCard className=\"mb-4\">\n                                    <CCardHeader>Dispose</CCardHeader>\n                                    <CCardBody>\n                                      <CChartPie\n                                        data={{\n                                          labels: assetdispose?.map((assdispose) => assdispose.ADName),\n                                          datasets: [\n                                            {\n                                              data: assetdispose?.map((assdispose) => assdispose.totamount),\n                                              backgroundColor: assetdispose?.map((assdispose) => randomColor()),\n                                              //hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n                                            },\n                                          ],\n                                        }}\n                                      />\n                                    </CCardBody>\n                                  </CCard>\n                                </CCol>\n                              </CRow>\n                              \n\n\n                          </CAccordionBody>\n                        </CAccordionItem>\n\n              </CAccordion>\n            </CRow>\n\n            </>\n           \n          )\n\n        }\n          else if( userRoles == \"IT\") {\n            return (\n              <>\n              <WidgetsDropdown/>\n  \n              <CRow>\n                <CCol>\n                  <CCard className=\"card-title mb-0\">\n                    <CCardHeader>\n                      <h6>\n                      <span className=\"message\" style={{ color: '#5da4f5'}}> <> Assets </></span> \n                        {' & '}  \n                      <span className=\"message\" style={{ color: '#5da4f5'}}> <> Activity </></span> \n                      </h6>\n                    </CCardHeader>\n                    <CCardBody>\n                      <CRow>\n                        <CCol xs={9} md={6} xl={8}>\n                          <AssetView/>\n                        </CCol>\n        \n                        <CCol xs={4} md={6} xl={4}>\n        \n                        <LogAllInfoView/>\n        \n                        </CCol>\n                      </CRow>\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n              \n              <br></br>\n              <CRow>\n                <CCol xs={6}>\n                  <CCard className=\"mb-4\">\n                    <CCardHeader>\n                      <h6>\n                      <span className=\"message\" style={{ color: '#5da4f5'}}> <>Supplier</> </span> \n                      </h6>\n                    </CCardHeader>\n                    <CCardBody>\n                      <CChartBar\n                        data={{\n                          labels: supplierasset?.map((supplier) => supplier.name),\n                          datasets: [\n                            {\n                              label: 'Asset Value',\n                              backgroundColor: supplierasset?.map((supplier) => randomColor()),\n                              //'#f87979',\n                              data: supplierasset?.map((supplier) => supplier.assetvalue),\n                            },\n                          ],\n                        }}\n                        labels=\"months\"\n                      />\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n                <CCol xs={6}>\n                  <CCard className=\"mb-4\">\n                    <CCardHeader>\n                      <h6>\n                        <span className=\"message\" style={{ color: '#5da4f5'}}> <> Assets Deployed by Department</></span> \n                      </h6>\n                    </CCardHeader>\n                    \n                    <CCardBody>\n                      <CChartBar\n                          data={{\n                            labels: deptasset?.map((dept) => dept.name),\n        \n                            datasets: [\n                              {\n                                label: 'Asset Value',\n                                backgroundColor: deptasset?.map((dept) => randomColor()),\n                                //'#f87979',\n                                data: deptasset?.map((dept) => dept.assetcount_department),\n                              },\n                            ],\n                          }}\n                          labels=\"months\"\n                        />\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n  \n              <CRow>\n                <CAccordion flush={false}>\n                          <CAccordionItem itemKey={1}>\n                            <CAccordionHeader>\n                            <span className=\"message\" style={{ color: 'green'}}> <> Check In</></span> \n                            -\n                            <span className=\"message\" style={{ color: '#ed8b13'}}>  <> Checkout </> </span>\n                            -\n                            <span className=\"message\" style={{ color: 'red'}}>  <> Pullout </> </span>\n                            </CAccordionHeader>\n                            <CAccordionBody>\n                                <CRow>\n                                \n                                    <div className=\"small text-medium-emphasis\">January - December</div>\n                                    <div className=\"small text-medium-emphasis\">Every Year</div>\n        \n                                </CRow>\n                                <CCol>\n                                    <CChartLine\n                                      style={{ height: '300px', marginTop: '40px' }}\n                                      data={{\n                                        labels: checkinpullout?.map((checkinpullout) => checkinpullout.MonthName),\n                                        datasets: [\n                                          {\n                                            label: 'Received by User',\n                                            backgroundColor: hexToRgba(getStyle('--cui-success'), 10),\n                                            borderColor: getStyle('--cui-success'),\n                                            pointHoverBackgroundColor: getStyle('--cui-success'),\n                                            borderWidth: 2,\n                                            data: checkinpullout?.map((checkinpullout) => checkinpullout.CheckInCount),\n                                            fill: true,\n                                          },\n                                          {\n                                            label: 'PullOut by User',\n                                            backgroundColor: 'transparent',\n                                            borderColor: getStyle('--cui-warning'),\n                                            pointHoverBackgroundColor: getStyle('--cui-warning'),\n                                            borderWidth: 2,\n                                            data: checkinpullout?.map((checkinpullout) => checkinpullout.PullOutCount),\n                                          },\n                                          {\n                                            label: 'Dispose By IT',\n                                            backgroundColor: 'transparent',\n                                            borderColor: getStyle('--cui-danger'),\n                                            pointHoverBackgroundColor: getStyle('--cui-danger'),\n                                            borderWidth: 2,\n                                            data: checkinpullout?.map((checkinpullout) => checkinpullout.Dispose),\n                                          },\n                                        ],\n                                      }}\n                                      options={{\n                                        maintainAspectRatio: false,\n                                        plugins: {\n                                          legend: {\n                                            display: false,\n                                          },\n                                        },\n                                        scales: {\n                                          x: {\n                                            grid: {\n                                              drawOnChartArea: false,\n                                            },\n                                          },\n                                          y: {\n                                            ticks: {\n                                              beginAtZero: true,\n                                              maxTicksLimit: 5,\n                                              stepSize: Math.ceil(250 / 5),\n                                              max: 250,\n                                            },\n                                          },\n                                        },\n                                        elements: {\n                                          line: {\n                                            tension: 0.4,\n                                          },\n                                          point: {\n                                            radius: 0,\n                                            hitRadius: 10,\n                                            hoverRadius: 4,\n                                            hoverBorderWidth: 3,\n                                          },\n                                        },\n                                      }}\n                                    />\n                                </CCol>\n                      \n        \n                            </CAccordionBody>\n                          </CAccordionItem>\n        \n                </CAccordion>\n              </CRow>\n  \n              <CRow>\n                <CAccordion flush={false}>\n                          <CAccordionItem itemKey={1}>\n                            <CAccordionHeader>\n                            <h6>\n                            <span className=\"message\" style={{ color: '#5da4f5'}}> <> See Other Reports</></span> \n                            </h6>\n                            </CAccordionHeader>\n                            <CAccordionBody>\n                                <CRow>\n                                <CCol xs={3}>\n                                    <CCard className=\"mb-4\">\n                                      <CCardHeader>Dispose</CCardHeader>\n                                      <CCardBody>\n                                        <CChartPie\n                                          data={{\n                                            labels: assetdispose?.map((assdispose) => assdispose.ADName),\n                                            datasets: [\n                                              {\n                                                data: assetdispose?.map((assdispose) => assdispose.totamount),\n                                                backgroundColor: assetdispose?.map((assdispose) => randomColor()),\n                                                //hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n                                              },\n                                            ],\n                                          }}\n                                        />\n                                      </CCardBody>\n                                    </CCard>\n                                  </CCol>\n                                </CRow>\n                                \n        \n        \n                            </CAccordionBody>\n                          </CAccordionItem>\n        \n                </CAccordion>\n              </CRow>\n  \n              </>\n             \n            )\n          }\n         else if (userRoles == \"User\" ) {\n          return (\n        <>\n           <WidgetsDropdownUser/>\n\n          <CRow>\n            <CCol xs={8}>\n                <div >\n                  <AssetPullout  />\n                </div>\n            </CCol>\n            <CCol>\n              \n                  <LogUserInfoView/>\n             \n            </CCol>\n\n                 \n             \n          </CRow>\n        </>\n          \n          )\n        } \n      })()}\n    </div>\n\n  );\n\n}\n\nexport default Dashboard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cibFacebook, cibLinkedin, cibTwitter, cilCalendar } from '@coreui/icons'\nimport { CChart } from '@coreui/react-chartjs'\n\nconst WidgetsBrand = ({ withCharts }) => {\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0.4,\n      },\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3,\n      },\n    },\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  }\n\n  return (\n    <div style={{\n                            \n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'right',\n      }} >\n    <CRow  >\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [65, 59, 84, 84, 51, 55, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibFacebook} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'friends', value: '89K' },\n            { title: 'feeds', value: '459' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#3b5998',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [1, 13, 9, 17, 34, 41, 38],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibTwitter} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'followers', value: '973k' },\n            { title: 'tweets', value: '1.792' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#00aced',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [78, 81, 80, 45, 34, 12, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibLinkedin} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'contacts', value: '500' },\n            { title: 'feeds', value: '1.292' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#4875b4',\n          }}\n        />\n      </CCol>\n\n    </CRow>\n    </div>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","\nimport * as React from 'react'\nimport axios from 'axios'\nimport  { useEffect, useState } from 'react'\n\n\n\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n  //CButton,\n  CCardBody,\n  CFormLabel,\n} from '@coreui/react'\n\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\n\n\nimport appSettings from 'src/AppSettings' // read the app config\nimport {  decrypt } from 'n-krypta';\n// encrypt, compare\nimport WriteLog from 'src/components/logs/LogListener';\n\nimport {useNavigate} from 'react-router-dom';\n\nconst WidgetsDropdown = () => {\n\n  const navigate = useNavigate();\n\n  const [assets,setTotalAssets] = useState({\n    totalassets: \"\",\n    totalamount:\"\"\n  })\n  \n  const [countsupplier,setTotalSupplier] = useState({\n    totalsupplier: \"\"\n  })\n  const [statavailable,setStatAvailable] = useState({\n    available: \"\"\n  })\n  const [countPullout,setCountPullout] = useState({\n    totalpullout: \"\"\n  })\n\n  const [assetsperCategory,setAssetsperCategoory] = useState([])\n  const [supplier,setSupplier] = useState([])\n  const [status,setStatus] = useState([])\n  const [pullout,setPullout] = useState([])\n\n  const [message,setMessage] = useState(\"\")\n  const [colorMessage,setColorMessage] = useState('red')\n\n\n  var userID = \"\"\n\n  // base sa testing use sya sa mga condition\n  // na nagpapalit ang variables during loading\n  var userRole = \"\"\n\n\n  // base sa testing use sya kapag display in HTML\n  const [userRoles,setUserRole] = useState(\"\")\n \n\n  useEffect(() => {\n    getUserInfo()\n\n  }, [])\n  \n  useEffect(() => {\n    if(userRole == \"Admin\" || userRole == \"IT\" ) {\n      LoadAssets()\n      //LoadAssets()\n      LoadAssetsperCategory()\n      LoadSuppler()\n      LoadCountSupplier()\n      LoadStatus()\n      LoadStatAvailable()\n      LoadPullout()\n      LoadCountPullout()\n    }\n    else if(userRole == \"User\"){\n      LoadAssetsbyUser()\n      LoadCountSupplier()\n      \n    }\n\n  }, [])\n\n  function getUserInfo() {\n\n    if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n      userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n       userRole = decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal)\n       setUserRole(decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal))\n    }\n    else{ \n        navigate('/login')\n    }\n  }\n\n\n  useEffect(() => {\n    //console.log(assetsperCategory)\n  }, [assetsperCategory])\n\n   function LoadAssets(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/assets/getCountassets'\n     axios.post(url)\n\n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setTotalAssets({...assets,\n          totalassets: res.data.result[0].totalAsset,\n          totalamount: res.data.result[0].totalAmount})\n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadData /assets/getCountassets\",res.data.message,userID)\n        setTotalAssets({...assets,\n          totalassets: \"0\"})\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadData /assets/getCountassets\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadAssetsperCategory(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/assets/getCountassetsper_category'\n     axios.post(url)\n \n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setAssetsperCategoory(res.data.result)\n        \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadAssetsperCategory /assets/getCountassetsper_category\",res.data.message,userID)\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadAssetsperCategory /assets/getCountassetsper_category\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadSuppler(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/supplier/getSupplierAssets'\n     axios.post(url)\n \n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setSupplier(res.data.result)\n        \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadSuppler /assets/getCountSupplier\",res.data.message,userID)\n        //setTotalAssets()\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadSuppler /assets/getCountSupplier\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadCountSupplier(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/supplier/getCountSupplier'\n     axios.post(url)\n\n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setTotalSupplier({...countsupplier,\n          totalsupplier: res.data.result[0].countsupplier})\n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadCountSupplier /supplier/getCountSupplier\",res.data.message,userID)\n        setTotalAssets({...countsupplier,\n          totalsupplier: \"0\"})\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadCountSupplier /supplier/getCountSupplier\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadStatus(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/status/getStatusbyAsset'\n     axios.post(url)\n \n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setStatus(res.data.result)\n        \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDownUser\",\"LoadStatus /status/getStatusbyAsset\",res.data.message,userID)\n        //setTotalAssets()\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDownUser\",\"LoadStatus /status/getStatusbyAsset\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadStatAvailable(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/status/getStatusAvailable'\n     axios.post(url)\n \n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setStatAvailable({...statavailable,\n          available: res.data.result[0].statavailalble})\n        \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadAvailable /status/getStatusAvailable\",res.data.message,userID)\n        //setTotalAssets()\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadAvailable /status/getStatusAvailable\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadPullout(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/pullout/countallPullout'\n     axios.post(url)\n    \n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setCountPullout({...countPullout,\n          totalpullout: res.data.result[0].totalpullout})\n        \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadPullout /pullout/countallPullout\",res.data.message,userID)\n        //setTotalAssets()\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadPullout /pullout/countallPullout\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadCountPullout(){\n   \n    const url = 'http://localhost:3001/pullout/getallpulloutbydepartment'\n     axios.post(url)\n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setPullout(res.data.result)\n        \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadCountPullout /pullout/getallpulloutbydepartment\",res.data.message,userID)\n        //setTotalAssets()\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadCountPullout /pullout/getallpulloutbydepartment\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CCardBody>\n        </CCardBody>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n            {(assets.totalassets)}\n              <span className=\"fs-6 fw-normal\">\n            \n              ( { assets?.totalamount || \"0.00\"} )\n              </span>\n              </>\n          }\n          title=\"Asset  \"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n              <CDropdownItem  href=\"#/base/assetregister\"> New Asset</CDropdownItem> \n               {/* <CDropdownItem  href=\"#/base/assetview\"> Asset</CDropdownItem> */}\n                <CDropdownItem href=\"#/base/assetuser\">Checkout</CDropdownItem>\n                <CDropdownItem href=\"#/configurations/viewpullout\">Pullout out By User</CDropdownItem>\n                \n                <CDropdownItem href=\"#/base/disposeview\"> Dispose</CDropdownItem>\n                \n              </CDropdownMenu>\n            </CDropdown>\n          }\n        \n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n\n               labels: assetsperCategory?.map((categ) => categ.assetCategName),\n                datasets: [\n                  {\n                    label: 'Total',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,221,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: assetsperCategory?.map((categ) => categ.countAsset),\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 200,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n\n          \n        />\n\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {countsupplier.totalsupplier}\n              <span className=\"fs-6 fw-normal\">\n               \n              </span>\n            </>\n          }\n          title=\"Supplier(s)\"\n          /* action={\n           <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown> \n          }*/\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: supplier?.map((categ) => categ.name),\n                datasets: [\n                  {\n                    label: 'Total',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: supplier?.map((categ) => categ.countsupplier),\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={5} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              { statavailable.available} \n             \n              <span className=\"fs-6 fw-normal\">\n                ( Available )  \n              </span>\n            </>\n          }\n          title=\"Status\"\n         /*  action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          } */\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: status?.map((stat) => stat.statusName),\n                datasets: [\n                  {\n                    label: 'Total',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: status?.map((stat) => stat.totalasset),\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n         \n        />\n        \n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              {countPullout?.totalpullout || \"\"}\n              <span className=\"fs-6 fw-normal\">\n                ( For Pullout )\n              </span>\n            </>\n          }\n          title=\"Pullout History\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n              <CDropdownItem  href=\"#/configurations/viewpullout\"> Receive Pullout</CDropdownItem> \n              </CDropdownMenu>\n            </CDropdown>\n          } \n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: pullout?.map((pullout) => pullout.departmentName),\n                datasets: [\n                  {\n                    label: 'Total',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: pullout?.map((pullout) => pullout.total),\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n"],"names":["newDate","Date","year","getFullYear","month","getMonth","day","getDate","getHours","getMinutes","getSeconds","logtype","module","userNotifID","receiver_name","receiver_dept","logvalues","userID","axios","post","then","res","dataResponse","data","message","console","log","catch","err","navigate","useNavigate","userRole","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","colorMessage","getUserInfo","decrypt","window","localStorage","getItem","appSettings","secretkeylocal","WriteLog","CheckRole","useEffect","_useState9","_useState10","assets","setAssets","result","_jsx","CCol","xs","children","_jsxs","CCard","className","size","CCardHeader","style","color","_Fragment","CForm","onSubmit","event","preventDefault","CRow","CCardBody","CInputGroup","height","width","DataGrid","rows","columns","field","headerName","editable","initialState","pagination","paginationModel","pageSize","pageSizeOptions","rowSelection","displayname","setMessage","setColorMessage","assetstatus","setAssetStatus","_useState11","_useState12","assetID","setAssetStatID","_useState13","_useState14","notes","setNotes","_React$useState","React","_React$useState2","open","setOpen","_useState15","_useState16","iselected","SetTotalSelected","handleClose","_useState17","_useState18","_useState19","_useState20","rowselecteddetail","setRowSelecteddetail","handleInput","e","target","name","value","trim","sendEmail","strDate","utils_getDate","allow_send_email_pullout_asset_by_user","ALLOW_SENDEMAIL_PULLOUT_BY_USER","checkin_success","templateParams","email_to","ASSET_EMAIL","email_sender","reply_to","ASSET_RECEIVERNAME","date","user_name","emailjs","USER_SERVICE_ID","USER_TEMPLATE_ID","public_key","response","status","text","error","WriteUserInfo","url","LoadAsset","CFormSelect","onChange","map","val","assetStatusID","statusName","TextField","id","fullWidth","label","placeholder","multiline","ButtonGroup","display","alignItems","justifyContent","CButton","onClick","num","forEach","irow","index","margin","Dialog","onClose","PaperComponent","props","Draggable","handle","cancel","Paper","_objectSpread","DialogTitle","cursor","DialogContent","DialogContentText","DialogActions","Button","autoFocus","detailid","setItem","message2","checkboxSelection","disableRowSelectionOnClick","onRowSelectionModelChange","CheckDispose","rowidselected","source","rowId","params","state","CheckDeploy","handleClick","type","disableClickEventBubbling","renderCell","EditTwoToneIcon","row","DeleteOutlineTwoToneIcon","sortable","filterable","Avatar","src","pictureFile","require","concat","getRowId","idselect","assetvalue","setAssetValue","ReceiptLongRoundedIcon","LoadData","setLog","sx","overflow","List","ListItem","ListItemAvatar","alt","usercreatedImg","defaultUser","ListItemText","primary","fname","secondary","Typography","component","variant","departmentID","receiverName","totalassets","setTotalAssets","totaldepartment","totalDepartment","setTotalDepartment","available","statavailable","setStatAvailable","assetsperCategory","setAssetsperCategoory","department","setDepartment","setStatus","totalAssets","LoadAssetsbyUser","LoadAssetsperCategory","LoadCountDepartment_ByUser","LoadTotalCountDepartment_ByUser","LoadCountStatusDepartment_ByUser","statavailalble","LoadTotalCountStatusDepartment_ByUser","sm","lg","CWidgetStatsA","title","action","CDropdown","alignment","CDropdownToggle","caret","CIcon","icon","cilOptions","CDropdownMenu","CDropdownItem","href","chart","CChartLine","labels","categ","assetCategName","datasets","backgroundColor","borderColor","pointBackgroundColor","getStyle","countAsset","options","plugins","legend","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","dept","departmentName","countDept","stat","countStatus","fill","CChartBar","drawTicks","userRoles","setUserRole","setDisplayName","supplierasset","setSupplierAsset","setDisposeAsset","deptasset","setDeptAsset","assetdispose","setAssetDispose","checkinpullout","setCheckInPullOut","_unused","LoadDisposeAssetValue","LoadSupplierAssetValue","LoadDeptCountAsset","LoadAssetDisposeAmount","LoadCount_CheckInPullout","WidgetsDropdown","md","xl","AssetView","LogAllInfoView","DepreciatedView","LogView","supplier","randomColor","assetcount_department","CAccordion","flush","CAccordionItem","itemKey","CAccordionHeader","CAccordionBody","marginTop","MonthName","hexToRgba","pointHoverBackgroundColor","CheckInCount","PullOutCount","Dispose","drawOnChartArea","beginAtZero","maxTicksLimit","stepSize","Math","ceil","hoverBorderWidth","CChartPie","assdispose","ADName","totamount","WidgetsDropdownUser","AssetPullout","LogUserInfoView","_ref","withCharts","chartOptions","CWidgetStatsD","CChart","cibFacebook","values","cibTwitter","cibLinkedin","totalamount","totalsupplier","countsupplier","setTotalSupplier","totalpullout","countPullout","setCountPullout","setSupplier","pullout","setPullout","_useState21","_useState22","LoadCountSupplier","totalAsset","totalAmount","LoadAssets","LoadSuppler","LoadStatus","LoadStatAvailable","LoadPullout","LoadCountPullout","totalasset","total"],"sourceRoot":""}