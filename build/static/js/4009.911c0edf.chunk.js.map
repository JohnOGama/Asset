{"version":3,"file":"static/js/4009.911c0edf.chunk.js","mappings":"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","sources":["AppSettings.js","components/logs/LogListener.js","views/pages/register/Register.js"],"sourcesContent":["const appSettings = {    \n    projectTitle: 'Asset',\n    secretkey: 'Adefg',\n    secretkeylocal: 'Adefg321',\n\n\n    /// view all localStorage variable \n    // Name : Kvsf45_\n    // value : \n    //         1 - user has checkin asset \n    //         0 - either checkin is not failed or no checkin default - 0\n\n    //window.localStorage.removeItem('id');\n    //window.localStorage.removeItem('display');\n    //window.localStorage.removeItem('userimg');\n    //window.localStorage.removeItem('Kgr67W@'); // This is a user Role\n    //window.localStorage.removeItem('LkgdW23!'); // This is for DepartmentID\n    //window.localStorage.removeItem('Kvsf45_'); // for sending email once only\n    \n\n    // 1 - Allow writelog\n    // 0 - Not allow to write\n    ALLOW_WRITELOG: '0',\n\n    // allow to send email\n    // value : send --- will send email\n    // value : no --- will not send email\n    ALLOW_SENDEMAIL_CHECKOUT_BY_IT: 'no',\n    ALLOW_SENDEMAIL_CHECKIN_BY_USER: 'no',\n    ALLOW_SENDEMAIL_APPROVE_DISPOSE: 'no',\n    ALLOW_SENDEMAIL_PULLOUT_BY_USER: 'no',\n\n    // For next-server\n    email_key: 're_BReLyfj9_7cLbVV2Rxf5aji3CcnmUvinH',\n\n    // Asset Team email settings\n    email_sender : 'asset@test.dev',\n    reply_to: 'noreply@test.dev',\n    YOUR_SERVICE_ID: 'service_e0mdv86', \n    YOUR_TEMPLATE_ID : 'template_9p4hpvy',\n    public_key: 'vEuwkpou6K7nfqdH1',\n\n    // for UserCheckout / Pullout\n    //email_source : 'asset@test.dev',\n    ASSET_EMAIL: 'dg0at1818@gmail.com',\n    USER_SERVICE_ID: 'service_ivu0u7x',\n    ASSET_RECEIVERNAME: 'Asset Team',\n    USER_TEMPLATE_ID : 'template_n3o5jrb',\n\n        // for UserCheckIn\n        // email quota :-) :-)\n        // not yet develop\n    //email_source : 'asset@test.dev',\n    USER_SERVICE_ID: 'service_ivu0u7x',\n    USER_TEMPLATE_ID : 'template_n3o5jrb'\n\n  };\n\n  export default appSettings;","import React from \"react\";\nimport axios from 'axios'\n\nfunction WriteLog(logtype,module,logfunction,logvalues,userID) {\n    let notif = false\n\n    try {\n\n        const url = 'http://localhost:3001/log/putLog'\n        axios.post(url,{logtype,module,logfunction,logvalues,userID})\n        .then(res => {\n        const dataResponse = res.data.message;\n        if(dataResponse == \"Insert Success\") {\n\n            notif = true\n         }\n         else\n         {\n            console.log(dataResponse)\n         }\n        })\n        .catch(err => {\n            console.log(err)\n            \n        })\n       \n    }\n    catch(err) {\n        console.log(\"Writing error -- \" + err)\n    }\n\n}\n\n\nexport default WriteLog;","/* eslint-disable */\n\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport ValidationRegister from '../../../components/validation/ValidationRegister'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormSelect,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\n\nimport {useNavigate} from 'react-router-dom';\n\n\nimport { encrypt, decrypt, compare } from 'n-krypta';\nimport appSettings from 'src/AppSettings' // read the app config\nimport WriteLog from 'src/components/logs/LogListener';\n\n\nfunction Register() {\n\n  \n  const navigate = useNavigate();\n \n  const [message,setMessage] = useState(\"\")\n  const [colorMessage,setColorMessage] = useState(\"\")\n  const [success,SetSuccess] = useState(\"\");\n  const [mali,setErrors] = useState(\"\")\n\n  const [values,setValues] = useState({\n    username: '',\n    password: '',\n    email: ''\n  })\n\n\n\n\n  useEffect(() => {\n    \n    try {\n      \n    const url = 'http://localhost:3001/getPositions'\n    axios.post(url)\n    .then( res => {\n      const dataResponse = res.data.message;\n      if(dataResponse === \"Record Found\") {\n        setPosition(res.data.result)\n      \n      } else if (dataResponse === \"No Record Found\") {\n        WriteLog(\"Message\",\"Register\",\"useEffect /getPositions\",dataResponse,\"\")\n       \n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"Register\",\"useEffect /getPositions\",err.message,\"\")\n      \n    }) \n  }\n  catch (err) {\n    console.log(err)\n  }\n  },[])\n\n\n  const handleInput = (e) => {\n\n      setValues(prev => ({...prev,[e.target.name]: [e.target.value]}))\n      //setErrors(\"test\")\n}\n\nuseEffect(() => { \n//console.log(\"\")\n},[values])\n\n\n\n\n  function handleSubmit(event) {\n    try {\n      \n      event.preventDefault();\n   \n      //navigate('/login')\n     // setErrors(ValidationRegister(values))\n      //console.log(values)\n     \n      if((!values.username == \"\") && \n        (!values.email == \"\") && \n        (!values.password == \"\"))\n        {\n          //window.localStorage.clear();\n         \n          const password = encrypt(values.password,  appSettings.secretkey); // #Iblankartan!not!svreblankartwhfreblankartzpublankartase!gettiogblankartypvrblankartiofprmatipn,blankartcvtblankartgpoeblankarttopid.blankartI!oeedtblankartuoblankartspeodblankartspneblankarttjmfblankartlearoing!nore!osblankartundesstaoeing!mpre.blankartTiankt!for!eycelleotblankartiogoblankartI!wbsblankartlooling!gorblankartuhjsblankartinfpblankartfos!myblankartnitsion.#\n         \n          const username = values.username;\n          const email = values.email;\n\n          const url = 'http://localhost:3001/auth/register'\n          \n          axios.post(url,{username,email,password})\n          \n          .then(res => {\n            \n            const dataResponse = res.data.message\n            console.log(dataResponse)\n            if(dataResponse == \"Insert Success\"){\n              WriteLog(\"Message\",\"Register\",\"handleSubmit /auth/register\", \n              \" New user in registration \"\n              + \"\\n Name: \" + username \n              + \"\\n Email  :  \" + email \n              + \"\\n Pass : \" + password\n              ,\"\")\n              navigate('/login');\n            } else if(dataResponse == \"Insert Error\") {\n              WriteLog(\"Error\",\"Register\",\"handleSubmit /auth/register\",res.data.message2,\"\")\n              //setMessage(\"Error in Inserting new User\")\n              //setColorMessage(\"red\")\n             \n            } \n          })\n          .catch(err => {\n            setErrors(err.message)\n            WriteLog(\"Error\",\"Register\",\"handleSubmit /auth/register\",err.message,\"\")\n          })\n        }\n        else{\n          setErrors(\"All Field must not be empty\")\n          //console.log(\"All Field must not be empty\")\n        }\n    }\n    catch(err) {\n      setMessage(err.message)\n      setColorMessage('red')\n      WriteLog(\"Error\",\"Register\",\"handleSubmit \",err.message,\"\")\n    }\n  }\n  \n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9} lg={7} xl={6}>\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm onSubmit={handleSubmit}>\n                <h4>\n                <span className=\"message\" style={{ color: '#5da4f5'}}> <> Register</></span> \n                <br></br>\n                  <h6>\n                    <span className=\"message\" style={{ color: colorMessage}}><p>{message}</p></span> \n                  </h6>\n                </h4>\n                <h6>\n                <span className=\"text-medium-emphasis\" style={{ color: '#ced6de'}}> <> Create your account</></span> \n                </h6>\n                \n                  \n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput name=\"username\"  placeholder=\"Username\" \n                      autoComplete=\"username\" onChange={handleInput} />\n                  </CInputGroup>\n                \n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>@</CInputGroupText>\n                    <CFormInput placeholder=\"Email\" name=\"email\"\n                      autoComplete=\"email\" onChange={handleInput} />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      autoComplete=\"new-password\"\n                      onChange={handleInput}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      name=\"repeatpassword\"\n                      type=\"password\"\n                      placeholder=\"Repeat password\"\n                      autoComplete=\"new-password\"\n                    />\n                  </CInputGroup>\n                  <div className=\"d-grid\">\n                    <CButton color=\"success\" type='submit'>Create Account</CButton>\n                  </div>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Register\n"],"names":["appSettings","_appSettings","projectTitle","secretkey","secretkeylocal","ALLOW_WRITELOG","ALLOW_SENDEMAIL_CHECKOUT_BY_IT","ALLOW_SENDEMAIL_CHECKIN_BY_USER","ALLOW_SENDEMAIL_APPROVE_DISPOSE","ALLOW_SENDEMAIL_PULLOUT_BY_USER","email_key","email_sender","reply_to","YOUR_SERVICE_ID","YOUR_TEMPLATE_ID","public_key","ASSET_EMAIL","USER_SERVICE_ID","ASSET_RECEIVERNAME","USER_TEMPLATE_ID","_defineProperty","logtype","module","logfunction","logvalues","userID","axios","post","then","res","dataResponse","data","message","console","log","catch","err","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","setMessage","_useState3","_useState4","colorMessage","setColorMessage","_useState5","_useState6","_useState7","_useState8","setErrors","_useState9","username","password","email","_useState10","values","setValues","useEffect","setPosition","result","WriteLog","handleInput","e","prev","_objectSpread","target","name","value","_jsx","className","children","CContainer","CRow","CCol","md","lg","xl","CCard","CCardBody","_jsxs","CForm","onSubmit","event","preventDefault","encrypt","message2","style","color","_Fragment","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","autoComplete","onChange","cilLockLocked","type","CButton"],"sourceRoot":""}