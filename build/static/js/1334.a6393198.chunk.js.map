{"version":3,"file":"static/js/1334.a6393198.chunk.js","mappings":"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","sources":["views/base/assetregister/AssetRegister.js"],"sourcesContent":["// eslint-disable-next-line\nimport  { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport * as React from 'react'\n\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport FolderSharedIcon from '@mui/icons-material/FolderShared';\nimport myimage from \"../../../assets/images/DefaultAsset.png\"\n\n\n// input Mask\n\nimport PropTypes, { object } from 'prop-types';\nimport { IMaskInput } from 'react-imask';\nimport { NumericFormat } from 'react-number-format';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport TextField from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\n//\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CForm,\n  CButton,\n  CFormSelect,\n  CFormInput,\n  CInputGroupText,\n  CInputGroup,\n  CFormLabel,\n  CFormFloating,\n  CImage\n} from '@coreui/react'\n\n\nimport {useNavigate} from 'react-router-dom';\n\nimport appSettings from 'src/AppSettings' // read the app config\nimport { encrypt, decrypt, compare } from 'n-krypta';\n\nimport WriteLog from 'src/components/logs/LogListener'\n\n\n// For Input Mask No.\nconst TextMaskCustom = React.forwardRef(function TextMaskCustom(props, ref) {\n  const { onChange, ...other } = props;\n  return (\n    <IMaskInput\n      {...other}\n      mask=\"(#00) 000-0000\"\n      definitions={{\n        '#': /[1-9]/,\n      }}\n      inputRef={ref}\n      onAccept={(value) => onChange({ target: { name: props.name, value } })}\n      overwrite\n    />\n  );\n});\n\nTextMaskCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst NumericFormatCustom = React.forwardRef(function NumericFormatCustom(\n  props,\n  ref,\n) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(formatvalues) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: formatvalues.value,\n          },\n        });\n      }}\n      thousandSeparator\n      valueIsNumericString\n      prefix=\"Php \"\n    />\n  );\n});\n\n\nNumericFormatCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\n///// \n\nconst AssetRegister = () => {\n\n  const navigate = useNavigate();\n\n  const [assetsCategory , setAssetsCategory] = useState([])\n  const [supplier , setSupplier] = useState([])\n  const [success,SetSuccess] = useState(\"\");\n  const [errors,setErrors] = useState({})\n  const [message,setMessage] = useState(\"\")\n  const [colorMessage,setColorMessage] = useState('red')\n  \n  const [assetStat,setAssetStat] = useState(\"\");\n  const [datePurchase, setDatePurchase] = useState(\"\");\n  const [dateDepreciated, setDateDepreciated] = useState(\"\");\n  \n  var userID = \"\"\n  var userRoles = \"\"\n\n  const [values,setValues] = useState ({\n    assetcategID: '',\n    supplierID: \"\",\n    serialno: '',\n    assetcode: '',\n    assetname: '',\n    description: ''\n    })\n\n    const [file,setFile] = useState(\"\")\n\n    //// For Input Mask \n\n  const [formatvalues, setFormatValues] = React.useState({\n    textmask: '(100) 000-0000',\n    amountnumberformat: '',\n    amountdepnumberformat: '',\n  });\n\n  useEffect(() => {\n    //console.log(\" \")\n  },[values]);\n\n  useEffect(() => {\n    //console.log(\"\")\n  },[datePurchase]);\n\n  useEffect(() => {\n   // console.log(\"\")\n  },[dateDepreciated]);\n\n  function CheckRole() {\n    try {\n\n      userRoles = userID = decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal)\n\n    }\n    catch(err) {\n      WriteLog(\"Error\",\"AssetRegister\",\"CheckRole Local Storage is tampered\", err.message,userID)\n      navigate('/dashboard')\n    }\n    \n  }\n\n  function getUserInfo() {\n    try {\n    CheckRole()\n      if (userRoles == \"Admin\" || userRoles == \"IT\")\n        {\n            if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n              userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n            \n            }else{ \n              navigate('/login')\n          }\n        }\n      else {\n        navigate('/dashboard')\n      }\n        \n      }\n    catch(err) {\n      navigate('/dashboard')\n    }\n    \n  }\n\n  useEffect(() => {\n    getUserInfo()\n    }, [])\n\n  useEffect(() => {\n    if(userID == \"\") \n    {\n      getUserInfo()\n    }\n\n    try {\n    const url = 'http://localhost:3001/category/getAssetCategory'\n    axios.post(url)\n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setAssetsCategory(res.data.result)\n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"AssetRegister\",\"useEffect /category/getAssetCategory\",res.data.message2,userID)\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"AssetRegister\",\"useEffect /category/getAssetCategory\",\" then/catch \\n \" + err.message,userID)\n    })\n  }\n  catch(err) {\n    WriteLog(\"Error\",\"AssetRegister\",\"useEffect /category/getAssetCategory\",\" try/catch \\n \" + err.message,userID)\n  }\n\n  },[])\n\n  \n  useEffect(() => {\n    LoadSupplier()\n  },[])\n\n  function LoadSupplier() {\n    try {\n      if(userID == \"\") \n      {\n        getUserInfo()\n      }\n\n      const url = 'http://localhost:3001/supplier/getsupplier'\n      axios.post(url)\n      .then(res => {\n        const dataResponse = res.data.message;\n        if(dataResponse == \"Record Found\") {\n          setSupplier(res.data.result)\n         \n        } else if (dataResponse == \"No Record Found\") {\n          WriteLog(\"Error\",\"AssetEdit\",\"LoadSupplier /supplier/getsupplier\",res.data.message2,userID)\n      \n        }\n      }).catch(err => {\n        WriteLog(\"Error\",\"AssetEdit\",\"LoadSupplier /supplier/getsupplier\",\"Error in then/catch \\n\" + err.message,userID)\n       \n      })\n    }\n    catch(err) {\n      WriteLog(\"Error\",\"AssetEdit\",\"LoadSupplier /supplier/getsupplier\",\"Error in try/catch \\n\" + err.message,userID)\n    }\n  }\n\n  useEffect(() => {\n\n    if(userID == \"\") \n    {\n      getUserInfo()\n    }\n\n    try {\n    const url = 'http://localhost:3001/assets/getAssetStatus'\n    axios.post(url)\n    .then(response => {\n      const dataResponse = response.data.message;\n      if(dataResponse == \"Record Found\") {\n        setAssetStat(response.data.result[0]['assetStatusID'])\n       \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"AssetRegister\",\"useEffect /assets/getAssetStatus\",response.data.message2,userID)\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"AssetRegister\",\"useEffect /assets/getAssetStatus\",\" then/catch \\n \" + err.message,userID)\n    })\n  }\n  catch(err) {\n    WriteLog(\"Error\",\"AssetRegister\",\"useEffect /assets/getAssetStatus\",\" try/catch \\n \" + err.message,userID)\n  }\n  },[])\n\n\n  function handleInput(e){\n\n    setValues({...values,[e.target.name]: e.target.value.trim()})\n\n  }\n\nconst handleChange = (event) => {\n  setFormatValues({...formatvalues,[event.target.name]: event.target.value,});\n};\n\n\n\n\n////\n\n  function handleSubmit(event) {\n    try {\n  if(userID == \"\") \n  {\n    getUserInfo()\n  }\n      event.preventDefault();\n\n      const config = {\n        headers:{\n            \"Content-Type\":\"multipart/form-data\"\n        }\n    }\n      \n      const assetcategID = values.assetcategID;\n      const serialno = values.serialno;\n      const assetcode = values.assetcode;\n      const assetname = values.assetname;\n      const description = values.description;\n      const amount = formatvalues.amountnumberformat;\n      const amountdepreciated = formatvalues.amountdepnumberformat;\n      const supplierid = values.supplierID;\n\n      console.log(supplierid)\n     // console.log(values)\n\n          if((!assetStat == \"\") && \n            (!assetcategID == \"\") &&\n            (!serialno == \"\") && \n            (!assetcode == \"\") && \n            (!assetname == \"\") && \n            (!description == \"\") && \n            (!amount == \"\") && \n            (!amountdepreciated == \"\") && \n            (!datePurchase == \"\") && \n            (!dateDepreciated == \"\") && \n            (!file == \"\") && \n            (!supplierid == \"\"))\n          {\n          \n          const url = 'http://localhost:3001/assets/putAssets'\n          axios.post(url,{assetStat,supplierid,assetcategID,serialno,assetcode,assetname,description,\n                amount,amountdepreciated,datePurchase,dateDepreciated,file,userID},config)\n          .then(res => { \n            const dataResponse = res.data.message \n            if(dataResponse == \"Insert Success\"){ \n              \n              navigate('/Dashboard')\n            } else if(dataResponse == \"Insert Error\") {\n              WriteLog(\"Error\",\"AssetRegister\",\"handleSubmit /assets/putAssets\",res.data.message2,userID)\n              setMessage(\"Error in inserting new asset\")\n              setColorMessage('red')\n            } \n          })\n          .catch(err => {\n            WriteLog(\"Error\",\"AssetRegister\",\"handleSubmit /assets/putAssets\",\" then/catch \" + err.message,userID)\n\n          })\n        }\n        else\n        {\n          setMessage(\" All Fields must not be Empty\")\n          setColorMessage(\"orange\")  \n          //console.log(\"Missing -- \" + values)\n        }\n\n    }\n    catch(err) {\n      WriteLog(\"Error\",\"AssetRegister\",\"handleSubmit /assets/putAssets\",\" try/catch \" + err.message,userID)\n    }\n  }\n\nuseEffect(() => {\n  console.log(file)\n}, [file])\n\n\n  return (\n    \n      <CCol xs={12}>\n        <CCard className=\"mb-3\">\n          <CCardHeader>\n            \n            <h6>\n            <span className=\"message\" style={{ color: '#5da4f5'}}> <> Asset Registration  </></span> \n            <br></br>\n            <strong><span className=\"message\" style={{ color: colorMessage}}><p>{message}</p></span> </strong>\n            </h6>\n          </CCardHeader>\n          <CForm onSubmit={handleSubmit}>\n              <CRow>\n                <CCol>\n                  <CCardBody>\n\n                  <FormControl fullWidth>\n                      <InputLabel id=\"demo-simple-select-label\">Supplier</InputLabel>\n                        <Select className=\"mb-3\" aria-label=\"Small select example\"\n                          name='supplierID' onChange={handleInput} value={values.supplierID}\n                          label=\"Supplier\"\n                          \n                          >\n                            { \n                            supplier.map((val,result) => \n                              \n                              <MenuItem key={val.supplierid} value={val.supplierid} >{val.name}</MenuItem>\n\n                             \n                            )\n                            }\n                        </Select>\n                    </FormControl>\n\n                    <FormControl fullWidth>\n                      <InputLabel >Asset Category</InputLabel>\n                        <Select  size=\"sm\" className=\"mb-3\" aria-label=\"Small select example\"\n                            name='assetcategID' onChange={handleInput} >\n                            {\n                            assetsCategory.map((val) => \n                             \n                              <MenuItem key={val.assetCategID} value={val.assetCategID} >{val.assetCategName}</MenuItem>\n                            )\n                            }\n                        </Select>\n\n                    </FormControl>\n\n                    <CInputGroup size=\"sm\" className=\"mb-3\" >\n                        <TextField onChange={handleInput} name=\"serialno\" id=\"outlined-textarea\" fullWidth label=\"SerialNo\" placeholder=\"SerialNo\" />\n                      </CInputGroup>\n\n                    <CInputGroup size=\"sm\" className=\"mb-3\" >\n                        <TextField onChange={handleInput} name=\"assetcode\" id=\"outlined-textarea\" fullWidth label=\"Asset Code\" placeholder=\"Asset Code\" />\n                      </CInputGroup>\n\n                      <CInputGroup size=\"sm\" className=\"mb-3\" >\n                        <TextField onChange={handleInput} name=\"assetname\" id=\"outlined-textarea\" fullWidth label=\"Asset Name\" placeholder=\"Asset Name\" />\n                      </CInputGroup>\n\n                      <CInputGroup size=\"sm\" className=\"mb-3\" >\n                        <TextField onChange={handleInput} name=\"description\" id=\"outlined-textarea\" fullWidth label=\"Description\" placeholder=\"Description\" multiline rows={5} />\n                      </CInputGroup>\n\n                  </CCardBody>\n                </CCol>\n                <CCol>\n                <CCardBody xs={6}>\n                  <CInputGroup size=\"sm\" className=\"mb-3\">\n                          <Box\n                            sx={{\n                            '& > :not(style)': {\n                            m: 1,\n                            },\n                            }}\n                          >\n                          <TextField\n                                  label=\"Amount Purchase\"\n                                  value={formatvalues.amountnumberformat}\n                                  onChange={handleChange}\n                                  name=\"amountnumberformat\"\n                                  id=\"formatted-numberformat-input\"\n                                  InputProps={{\n                                    inputComponent: NumericFormatCustom,\n                                  }}\n                                  variant=\"standard\"\n                          />\n                          </Box>\n                  </CInputGroup>\n                  <CInputGroup size=\"sm\" className=\"mb-3\">\n                        <TextField\n                                \n                                label=\"Amount Depreciated per YR\"\n                                value={formatvalues.amountdepnumberformat}\n                                onChange={handleChange}\n                                name=\"amountdepnumberformat\"\n                                id=\"formatted-numberformat-input\"\n                                InputProps={{\n                                  inputComponent: NumericFormatCustom,\n                                }}\n                                variant=\"standard\"\n                        />\n                  </CInputGroup>\n                  <CInputGroup size=\"sm\" className=\"mb-3\">\n                      <LocalizationProvider dateAdapter={AdapterDayjs}>\n                          <DatePicker\n                            name='datePurchase'\n                            label=\"Date Purchase\"\n                            fullWidth true\n                            onChange={(datePurchase) => setDatePurchase(datePurchase)}\n                          />\n                      </LocalizationProvider>\n                  </CInputGroup>\n                  <br></br>\n                  <CInputGroup size=\"sm\" className=\"mb-3\">\n                      <LocalizationProvider dateAdapter={AdapterDayjs}>\n                          <DatePicker\n                            name='dateDepreciated'\n                            label=\"Date Depreciated\"\n                            fullWidth true\n                            onChange={(dateDepreciated) => setDateDepreciated(dateDepreciated)}\n                          />\n                      </LocalizationProvider>\n                  </CInputGroup>\n                </CCardBody>\n                </CCol>\n                <CCol>\n                  <CRow>\n                    \n                  </CRow>\n                  <CRow>\n                  <CCardBody xs={6}>  \n                  <CInputGroup size=\"sm\" className=\"mb-3\" >\n                    <div className='CCardBody img1' width={'100%'} height={'100%'}  >\n                       \n                          <img src=\n                          {\n                          file\n                            ? URL.createObjectURL(file)\n                            : myimage\n                          } \n                          alt=\"\"    style={{ width: '80%', textAlign: \"center\", margin: \"auto\" }} className=\"mt-2\" />\n                          <div className=\"formInput\">\n                          <input name=\"file\" type=\"file\"  onChange={e => setFile(e.target.files[0])}  />\n                          </div>\n                       \n                    </div>  \n                  </CInputGroup>\n                  </CCardBody>\n                  </CRow>\n                  <CRow>\n                    \n                  </CRow>\n                  \n                </CCol>\n                \n                \n                <div className=\"d-grid\"  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    }} >\n                  <CButton color=\"success\"  style={{   width: '200%' }}  type='submit'>Save</CButton>\n                </div>\n              </CRow>\n\n          </CForm>\n\n        </CCard>\n      </CCol>\n\n  )\n}\n\nexport default AssetRegister\n"],"names":["NumericFormatCustom","React","props","ref","onChange","other","_objectWithoutProperties","_excluded2","_jsx","NumericFormat","_objectSpread","getInputRef","onValueChange","formatvalues","target","name","value","thousandSeparator","valueIsNumericString","prefix","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","assetsCategory","setAssetsCategory","_useState3","_useState4","supplier","setSupplier","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","message","setMessage","_useState11","_useState12","colorMessage","setColorMessage","_useState13","_useState14","assetStat","setAssetStat","_useState15","_useState16","datePurchase","setDatePurchase","_useState17","_useState18","dateDepreciated","setDateDepreciated","userID","userRoles","_useState19","assetcategID","supplierID","serialno","assetcode","assetname","description","_useState20","values","setValues","_useState21","_useState22","file","setFile","_React$useState","textmask","amountnumberformat","amountdepnumberformat","_React$useState2","setFormatValues","getUserInfo","decrypt","window","localStorage","getItem","appSettings","secretkeylocal","err","WriteLog","CheckRole","handleInput","e","_defineProperty","trim","useEffect","axios","post","then","res","dataResponse","data","result","message2","catch","url","LoadSupplier","response","handleChange","event","console","log","CCol","xs","children","_jsxs","CCard","className","CCardHeader","style","color","_Fragment","CForm","onSubmit","preventDefault","amount","amountdepreciated","supplierid","headers","CRow","CCardBody","FormControl","fullWidth","InputLabel","id","Select","label","map","val","MenuItem","size","assetCategID","assetCategName","CInputGroup","TextField","placeholder","multiline","rows","Box","sx","m","InputProps","inputComponent","variant","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","true","width","height","src","URL","createObjectURL","myimage","alt","textAlign","margin","type","files","display","alignItems","justifyContent","CButton"],"sourceRoot":""}