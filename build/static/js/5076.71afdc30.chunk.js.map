{"version":3,"file":"static/js/5076.71afdc30.chunk.js","mappings":"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","sources":["views/dashboard/dashboard1/Dashboard1.js","views/widgets/WidgetsBrand.js","views/widgets/WidgetsDropdown.js"],"sourcesContent":["import React from 'react'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\n\nimport WidgetsBrand from '../../widgets/WidgetsBrand'\n//'../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../../widgets/WidgetsDropdown'\n\nconst Dashboard1 = () => {\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n\n  const progressExample = [\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  ]\n\n  const progressGroupExample1 = [\n    { title: 'Monday', value1: 34, value2: 78 },\n    { title: 'Tuesday', value1: 56, value2: 94 },\n    { title: 'Wednesday', value1: 12, value2: 67 },\n    { title: 'Thursday', value1: 43, value2: 91 },\n    { title: 'Friday', value1: 22, value2: 73 },\n    { title: 'Saturday', value1: 53, value2: 82 },\n    { title: 'Sunday', value1: 9, value2: 69 },\n  ]\n\n  const progressGroupExample2 = [\n    { title: 'Male', icon: cilUser, value: 53 },\n    { title: 'Female', icon: cilUserFemale, value: 43 },\n  ]\n\n  const progressGroupExample3 = [\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  ]\n\n  const tableExample = [\n    {\n      avatar: { src: avatar1, status: 'success' },\n      user: {\n        name: 'Yiorgos Avraamu',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'USA', flag: cifUs },\n      usage: {\n        value: 50,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n      activity: '10 sec ago',\n    },\n    {\n      avatar: { src: avatar2, status: 'danger' },\n      user: {\n        name: 'Avram Tarasios',\n        new: false,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Brazil', flag: cifBr },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'info',\n      },\n      payment: { name: 'Visa', icon: cibCcVisa },\n      activity: '5 minutes ago',\n    },\n    {\n      avatar: { src: avatar3, status: 'warning' },\n      user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'India', flag: cifIn },\n      usage: {\n        value: 74,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'warning',\n      },\n      payment: { name: 'Stripe', icon: cibCcStripe },\n      activity: '1 hour ago',\n    },\n    {\n      avatar: { src: avatar4, status: 'secondary' },\n      user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'France', flag: cifFr },\n      usage: {\n        value: 98,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'danger',\n      },\n      payment: { name: 'PayPal', icon: cibCcPaypal },\n      activity: 'Last month',\n    },\n    {\n      avatar: { src: avatar5, status: 'success' },\n      user: {\n        name: 'Agapetus Tadeáš',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Spain', flag: cifEs },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'primary',\n      },\n      payment: { name: 'Google Wallet', icon: cibCcApplePay },\n      activity: 'Last week',\n    },\n    {\n      avatar: { src: avatar6, status: 'danger' },\n      user: {\n        name: 'Friderik Dávid',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Poland', flag: cifPl },\n      usage: {\n        value: 43,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Amex', icon: cibCcAmex },\n      activity: 'Last week',\n    },\n  ]\n\n  return (\n    <>\n      <WidgetsDropdown />\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Traffic\n              </h4>\n              <div className=\"small text-medium-emphasis\">January - July 2021</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={value}\n                    className=\"mx-0\"\n                    active={value === 'Month'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n              datasets: [\n                {\n                  label: 'My First dataset',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                  fill: true,\n                },\n                {\n                  label: 'My Second dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-success'),\n                  pointHoverBackgroundColor: getStyle('--cui-success'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                },\n                {\n                  label: 'My Third dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-danger'),\n                  pointHoverBackgroundColor: getStyle('--cui-danger'),\n                  borderWidth: 1,\n                  borderDash: [8, 5],\n                  data: [65, 65, 65, 65, 65, 65, 65],\n                },\n              ],\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false,\n                },\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false,\n                  },\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250,\n                  },\n                },\n              },\n              elements: {\n                line: {\n                  tension: 0.4,\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3,\n                },\n              },\n            }}\n          />\n        </CCardBody>\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  {item.value} ({item.percent}%)\n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard>\n\n      <WidgetsBrand withCharts />\n\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Traffic {' & '} Sales</CCardHeader>\n            <CCardBody>\n              <CRow>\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n                  {progressGroupExample1.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"text-medium-emphasis small\">{item.title}</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"info\" value={item.value1} />\n                        <CProgress thin color=\"danger\" value={item.value2} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Organic</div>\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n\n                  {progressGroupExample2.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"warning\" value={item.value} />\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"mb-5\"></div>\n\n                  {progressGroupExample3.map((item, index) => (\n                    <div className=\"progress-group\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value}{' '}\n                          <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\n                        </span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"success\" value={item.percent} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n              </CRow>\n\n              <br />\n\n             \n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard1\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cibFacebook, cibLinkedin, cibTwitter, cilCalendar } from '@coreui/icons'\nimport { CChart } from '@coreui/react-chartjs'\n\nconst WidgetsBrand = ({ withCharts }) => {\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0.4,\n      },\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3,\n      },\n    },\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  }\n\n  return (\n    <div style={{\n                            \n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'right',\n      }} >\n    <CRow  >\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [65, 59, 84, 84, 51, 55, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibFacebook} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'friends', value: '89K' },\n            { title: 'feeds', value: '459' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#3b5998',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [1, 13, 9, 17, 34, 41, 38],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibTwitter} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'followers', value: '973k' },\n            { title: 'tweets', value: '1.792' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#00aced',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [78, 81, 80, 45, 34, 12, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibLinkedin} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'contacts', value: '500' },\n            { title: 'feeds', value: '1.292' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#4875b4',\n          }}\n        />\n      </CCol>\n\n    </CRow>\n    </div>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","\nimport * as React from 'react'\nimport axios from 'axios'\nimport  { useEffect, useState } from 'react'\n\n\n\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n  //CButton,\n  CCardBody,\n  CFormLabel,\n} from '@coreui/react'\n\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\n\n\nimport appSettings from 'src/AppSettings' // read the app config\nimport {  decrypt } from 'n-krypta';\n// encrypt, compare\nimport WriteLog from 'src/components/logs/LogListener';\n\nimport {useNavigate} from 'react-router-dom';\n\nconst WidgetsDropdown = () => {\n\n  const navigate = useNavigate();\n\n  const [assets,setTotalAssets] = useState({\n    totalassets: \"\",\n    totalamount:\"\"\n  })\n  \n  const [countsupplier,setTotalSupplier] = useState({\n    totalsupplier: \"\"\n  })\n  const [statavailable,setStatAvailable] = useState({\n    available: \"\"\n  })\n  const [countPullout,setCountPullout] = useState({\n    totalpullout: \"\"\n  })\n\n  const [assetsperCategory,setAssetsperCategoory] = useState([])\n  const [supplier,setSupplier] = useState([])\n  const [status,setStatus] = useState([])\n  const [pullout,setPullout] = useState([])\n\n  const [message,setMessage] = useState(\"\")\n  const [colorMessage,setColorMessage] = useState('red')\n\n\n  var userID = \"\"\n\n  // base sa testing use sya sa mga condition\n  // na nagpapalit ang variables during loading\n  var userRole = \"\"\n\n\n  // base sa testing use sya kapag display in HTML\n  const [userRoles,setUserRole] = useState(\"\")\n \n\n  useEffect(() => {\n    getUserInfo()\n\n  }, [])\n  \n  useEffect(() => {\n    if(userRole == \"Admin\" || userRole == \"IT\" ) {\n      LoadAssets()\n      //LoadAssets()\n      LoadAssetsperCategory()\n      LoadSuppler()\n      LoadCountSupplier()\n      LoadStatus()\n      LoadStatAvailable()\n      LoadPullout()\n      LoadCountPullout()\n    }\n    else if(userRole == \"User\"){\n      LoadAssetsbyUser()\n      LoadCountSupplier()\n      \n    }\n\n  }, [])\n\n  function getUserInfo() {\n\n    if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n      userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n       userRole = decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal)\n       setUserRole(decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal))\n    }\n    else{ \n        navigate('/login')\n    }\n  }\n\n\n  useEffect(() => {\n    //console.log(assetsperCategory)\n  }, [assetsperCategory])\n\n   function LoadAssets(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/assets/getCountassets'\n     axios.post(url)\n\n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setTotalAssets({...assets,\n          totalassets: res.data.result[0].totalAsset,\n          totalamount: res.data.result[0].totalAmount})\n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadData /assets/getCountassets\",res.data.message,userID)\n        setTotalAssets({...assets,\n          totalassets: \"0\"})\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadData /assets/getCountassets\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadAssetsperCategory(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/assets/getCountassetsper_category'\n     axios.post(url)\n \n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setAssetsperCategoory(res.data.result)\n        \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadAssetsperCategory /assets/getCountassetsper_category\",res.data.message,userID)\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadAssetsperCategory /assets/getCountassetsper_category\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadSuppler(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/supplier/getSupplierAssets'\n     axios.post(url)\n \n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setSupplier(res.data.result)\n        \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadSuppler /assets/getCountSupplier\",res.data.message,userID)\n        //setTotalAssets()\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadSuppler /assets/getCountSupplier\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadCountSupplier(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/supplier/getCountSupplier'\n     axios.post(url)\n\n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setTotalSupplier({...countsupplier,\n          totalsupplier: res.data.result[0].countsupplier})\n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadCountSupplier /supplier/getCountSupplier\",res.data.message,userID)\n        setTotalAssets({...countsupplier,\n          totalsupplier: \"0\"})\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadCountSupplier /supplier/getCountSupplier\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadStatus(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/status/getStatusbyAsset'\n     axios.post(url)\n \n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setStatus(res.data.result)\n        \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDownUser\",\"LoadStatus /status/getStatusbyAsset\",res.data.message,userID)\n        //setTotalAssets()\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDownUser\",\"LoadStatus /status/getStatusbyAsset\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadStatAvailable(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/status/getStatusAvailable'\n     axios.post(url)\n \n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setStatAvailable({...statavailable,\n          available: res.data.result[0].statavailalble})\n        \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadAvailable /status/getStatusAvailable\",res.data.message,userID)\n        //setTotalAssets()\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadAvailable /status/getStatusAvailable\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadPullout(){\n    setMessage(\"\")\n    const url = 'http://localhost:3001/pullout/countallPullout'\n     axios.post(url)\n    \n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setCountPullout({...countPullout,\n          totalpullout: res.data.result[0].totalpullout})\n        \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadPullout /pullout/countallPullout\",res.data.message,userID)\n        //setTotalAssets()\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadPullout /pullout/countallPullout\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  function LoadCountPullout(){\n   \n    const url = 'http://localhost:3001/pullout/getallpulloutbydepartment'\n     axios.post(url)\n    .then(res => {\n      const dataResponse = res.data.message;\n      if(dataResponse == \"Record Found\") {\n        setPullout(res.data.result)\n        \n      } else if (dataResponse == \"No Record Found\") {\n        WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadCountPullout /pullout/getallpulloutbydepartment\",res.data.message,userID)\n        //setTotalAssets()\n        //navigate('/500');\n      }\n    }).catch(err => {\n      WriteLog(\"Error\",\"WidgetsDropDown\",\"LoadCountPullout /pullout/getallpulloutbydepartment\",\"Error in then/catch \\n\" + err.message,userID)\n    })\n  }\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CCardBody>\n        </CCardBody>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n            {(assets.totalassets)}\n              <span className=\"fs-6 fw-normal\">\n            \n              ( { assets?.totalamount || \"0.00\"} )\n              </span>\n              </>\n          }\n          title=\"Asset  \"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n              <CDropdownItem  href=\"#/base/assetregister\"> New Asset</CDropdownItem> \n               {/* <CDropdownItem  href=\"#/base/assetview\"> Asset</CDropdownItem> */}\n                <CDropdownItem href=\"#/base/assetuser\">Checkout</CDropdownItem>\n                <CDropdownItem href=\"#/configurations/viewpullout\">Pullout out By User</CDropdownItem>\n                \n                <CDropdownItem href=\"#/base/disposeview\"> Dispose</CDropdownItem>\n                \n              </CDropdownMenu>\n            </CDropdown>\n          }\n        \n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n\n               labels: assetsperCategory?.map((categ) => categ.assetCategName),\n                datasets: [\n                  {\n                    label: 'Total',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,221,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: assetsperCategory?.map((categ) => categ.countAsset),\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 200,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n\n          \n        />\n\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {countsupplier.totalsupplier}\n              <span className=\"fs-6 fw-normal\">\n               \n              </span>\n            </>\n          }\n          title=\"Supplier(s)\"\n          /* action={\n           <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown> \n          }*/\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: supplier?.map((categ) => categ.name),\n                datasets: [\n                  {\n                    label: 'Total',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: supplier?.map((categ) => categ.countsupplier),\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={5} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              { statavailable.available} \n             \n              <span className=\"fs-6 fw-normal\">\n                ( Available )  \n              </span>\n            </>\n          }\n          title=\"Status\"\n         /*  action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          } */\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: status?.map((stat) => stat.statusName),\n                datasets: [\n                  {\n                    label: 'Total',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: status?.map((stat) => stat.totalasset),\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n         \n        />\n        \n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              {countPullout?.totalpullout || \"\"}\n              <span className=\"fs-6 fw-normal\">\n                ( For Pullout )\n              </span>\n            </>\n          }\n          title=\"Pullout History\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n              <CDropdownItem  href=\"#/configurations/viewpullout\"> Receive Pullout</CDropdownItem> \n              </CDropdownMenu>\n            </CDropdown>\n          } \n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: pullout?.map((pullout) => pullout.departmentName),\n                datasets: [\n                  {\n                    label: 'Total',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: pullout?.map((pullout) => pullout.total),\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n"],"names":["random","min","max","Math","floor","progressGroupExample2","title","icon","cilUser","value","cilUserFemale","progressGroupExample3","cibGoogle","percent","cibFacebook","cibTwitter","cibLinkedin","cifUs","cibCcMastercard","cifBr","cibCcVisa","cifIn","cibCcStripe","cifFr","cibCcPaypal","cifEs","cibCcApplePay","cifPl","cibCcAmex","_jsxs","_Fragment","children","_jsx","WidgetsDropdown","CCard","className","CCardBody","CRow","CCol","sm","id","CButton","color","CIcon","cilCloudDownload","CButtonGroup","map","active","CChartLine","style","height","marginTop","data","labels","datasets","label","backgroundColor","hexToRgba","getStyle","borderColor","pointHoverBackgroundColor","borderWidth","fill","borderDash","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","CCardFooter","xs","cols","md","item","index","CProgress","thin","WidgetsBrand","withCharts","CCardHeader","xl","value1","value2","size","_ref","chartOptions","alignItems","justifyContent","lg","CWidgetStatsD","_objectSpread","chart","CChart","type","values","navigate","useNavigate","_useState","useState","totalassets","totalamount","_useState2","_slicedToArray","assets","setTotalAssets","_useState3","totalsupplier","_useState4","countsupplier","setTotalSupplier","_useState5","available","_useState6","statavailable","setStatAvailable","_useState7","totalpullout","_useState8","countPullout","setCountPullout","_useState9","_useState10","assetsperCategory","setAssetsperCategoory","_useState11","_useState12","supplier","setSupplier","_useState13","_useState14","status","setStatus","_useState15","_useState16","pullout","setPullout","_useState17","_useState18","setMessage","_useState19","_useState20","userID","userRole","_useState21","_useState22","setUserRole","LoadCountSupplier","axios","post","then","res","dataResponse","message","result","WriteLog","catch","err","useEffect","window","localStorage","getItem","decrypt","appSettings","secretkeylocal","url","totalAsset","totalAmount","LoadAssets","LoadAssetsperCategory","LoadSuppler","LoadStatus","statavailalble","LoadStatAvailable","LoadPullout","LoadCountPullout","LoadAssetsbyUser","CWidgetStatsA","action","CDropdown","alignment","CDropdownToggle","caret","cilOptions","CDropdownMenu","CDropdownItem","href","categ","assetCategName","pointBackgroundColor","countAsset","drawBorder","name","stat","statusName","totalasset","CChartBar","departmentName","total","drawTicks"],"sourceRoot":""}