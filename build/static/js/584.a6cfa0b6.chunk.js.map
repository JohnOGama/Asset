{"version":3,"file":"static/js/584.a6cfa0b6.chunk.js","mappings":"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","sources":["views/configurations/log/Log.js"],"sourcesContent":["\nimport  { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport * as React from 'react'\n\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CButton,\n    CRow,\n    CForm,\n    CInputGroup,\n  } from '@coreui/react'\n\n  import TextField from '@mui/material/TextField';\n\nimport {useNavigate} from 'react-router-dom';\nimport {useLocation} from 'react-router-dom';\n\nimport appSettings from 'src/AppSettings' // read the app config\nimport { decrypt } from 'n-krypta';\n//encrypt, compare\nimport LogListener from 'src/components/logs/LogListener'\n\nfunction Log() {\n\n  const navigate = useNavigate();\n  var userID = \"\"\n  var userRole = \"\"\n  \n  const {state} = useLocation();\n  let rowId = \"\"\n  \n  try {\n     rowId = state.params;\n  }\n  catch(err){\n   navigate('/dashboard')\n  }\n\n    const [values,setValues] = useState({\n      logid: \"\",\n      type: \"\",\n      module: \"\",\n      function: \"\",\n      details: \"\"\n    })\n\n\n    function CheckRole() {\n      try {\n  \n        userRole = decrypt(window.localStorage.getItem('Kgr67W@'), appSettings.secretkeylocal)\n  \n      }\n      catch(err) {\n        WriteLog(\"Error\",\"Log\",\"CheckRole Local Storage is tampered\", err.message,userID)\n        navigate('/dashboard')\n      }\n    }\n\n    function getUserInfo() {\n\n      try {\n        CheckRole()\n    //      if (userRole == \"Admin\" || userRole == \"IT\")\n    //        {\n                if((!window.localStorage.getItem('id') == null) || (window.localStorage.getItem('id') !== \"0\")) {\n                  userID = decrypt(window.localStorage.getItem('id'), appSettings.secretkeylocal)\n                \n                }else{ \n                  navigate('/login')\n              }\n  //          }\n   //       else {\n   //         navigate('/dashboard')\n  //        }\n            \n          }\n      catch(err) {\n        navigate('/dashboard')\n        }\n    }\n\n    useEffect(() => {\n      getUserInfo()\n  \n      }, [])\n\n\n    useEffect(() => {\n\n      if(userID == \"\") \n      {\n        getUserInfo()\n      }\n\n      if(!rowId == \"\") {\n      const url = 'http://localhost:3001/log/getlogID'\n      axios.post(url,{rowId})\n      .then(res => {\n        const dataResponse = res.data.message;\n        if(dataResponse == \"Record Found\") {\n         \n          setValues(\n            {...values,logid: res.data.result[0].logID,\n                type: res.data.result[0].logtype,\n                module: res.data.result[0].module,\n                function: res.data.result[0].logfunction,\n                details: res.data.result[0].logvalues\n            });\n\n        } else if (dataResponse == \"No Record Found\") {\n\n            LogListener.WriteLog(\"Error\",\"Log\",\"Load /log/getlogID\",\"DB No Record Found\",userID)\n   \n        }\n      }).catch(err => {\n        LogListener.WriteLog(\"Error\",\"Log\",\"Load /log/getlogID\",\"Load Error on then/catch response \\n\" + err.message,userID)\n\n      })\n    }\n    },[])\n\n    function handlebacktomain() {\n      navigate('/configurations/logview')\n    }\n\n  return (\n\n    <CCol xs={12}>\n         <CCard className=\"mb-3\" size=\"sm\"  >\n         <CCardHeader>\n            <strong>Log Detail Information </strong>\n          </CCardHeader>\n          <CForm>\n            <CRow >\n                <CCol >\n                    <CCardBody>\n                      <CInputGroup size=\"sm\" className=\"mb-3\" >\n                          <TextField name=\"type\" id=\"outlined-basic\"\n                            value={values.type} fullWidth label=\"Log Type\" placeholder=\"Log Type\" InputProps={{\n                                readOnly: true,\n                              }} />\n                      </CInputGroup>\n                      <CInputGroup size=\"sm\" className=\"mb-3\" >\n                          <TextField name=\"module\" id=\"outlined-basic\"\n                            value={values.module} fullWidth label=\"Module\" placeholder=\"Module\"  InputProps={{\n                                readOnly: true,\n                              }} />\n                      </CInputGroup>\n                      <CInputGroup size=\"sm\" className=\"mb-3\" >\n                          <TextField name=\"function\" id=\"outlined-basic\"\n                            value={values.function} fullWidth label=\"Function\" placeholder=\"Function\"  InputProps={{\n                                readOnly: true,\n                              }} />\n                      </CInputGroup>\n                      <CInputGroup size=\"sm\" className=\"mb-3\" >\n                          <TextField  name=\"details\" id=\"outlined-textarea\" \n                              value={values.details} fullWidth label=\"Details\" placeholder=\"Details\" \n                              multiline  rows={5}  InputProps={{\n                                readOnly: true,\n                              }} />\n                      </CInputGroup>\n                    </CCardBody>\n                </CCol>\n                <div className=\"d-grid\" style={{\n                            \n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            }} >\n                      <CButton style={{   width: '150%' }} onClick={handlebacktomain} color=\"success\">View All Logs</CButton>\n                </div>\n            </CRow>\n          </CForm>\n         </CCard>\n    </CCol>\n  )\n}\n\nexport default Log\n"],"names":["navigate","useNavigate","userID","state","useLocation","rowId","params","err","_useState","useState","logid","type","module","function","details","_useState2","_slicedToArray","values","setValues","getUserInfo","decrypt","window","localStorage","getItem","appSettings","secretkeylocal","WriteLog","message","CheckRole","useEffect","axios","post","then","res","dataResponse","data","_objectSpread","result","logID","logtype","logfunction","logvalues","LogListener","catch","_jsx","CCol","xs","children","_jsxs","CCard","className","size","CCardHeader","CForm","CRow","CCardBody","CInputGroup","TextField","name","id","value","fullWidth","label","placeholder","InputProps","readOnly","multiline","rows","style","display","alignItems","justifyContent","CButton","width","onClick","color"],"sourceRoot":""}